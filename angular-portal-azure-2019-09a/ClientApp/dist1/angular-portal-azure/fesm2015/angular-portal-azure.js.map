{"version":3,"file":"angular-portal-azure.js","sources":["ng://angular-portal-azure/lib/domain/dashboard/tile/tile-sizes.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tile-size.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tiles.ts","ng://angular-portal-azure/lib/domain/dashboard/appboard/appboard.ts","ng://angular-portal-azure/lib/domain/sidebar/sidebar.ts","ng://angular-portal-azure/lib/domain/app-config.ts","ng://angular-portal-azure/lib/service/app-config/app-config.service.ts","ng://angular-portal-azure/lib/domain/exception-dot-net.ts","ng://angular-portal-azure/lib/domain/exception.ts","ng://angular-portal-azure/lib/domain/user-control-base.ts","ng://angular-portal-azure/lib/domain/blade.ts","ng://angular-portal-azure/lib/domain/area-blades.ts","ng://angular-portal-azure/lib/domain/area-notification.ts","ng://angular-portal-azure/lib/domain/user-account.ts","ng://angular-portal-azure/lib/domain/avatar-menu.ts","ng://angular-portal-azure/lib/domain/tile-sizes.ts","ng://angular-portal-azure/lib/domain/tile-size.ts","ng://angular-portal-azure/lib/domain/tiles.ts","ng://angular-portal-azure/lib/domain/startboard.ts","ng://angular-portal-azure/lib/domain/panorama.ts","ng://angular-portal-azure/lib/domain/portal-service.ts","ng://angular-portal-azure/lib/service/blade/blade.service.ts","ng://angular-portal-azure/lib/service/injector/injector.service.ts","ng://angular-portal-azure/lib/service/app/app.service.ts","ng://angular-portal-azure/lib/domain/base/user-control-base.ts","ng://angular-portal-azure/lib/service/browser/viewport.ts","ng://angular-portal-azure/lib/service/browser/browser.service.ts","ng://angular-portal-azure/lib/domain/blade/blade.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tile.ts","ng://angular-portal-azure/lib/domain/dashboard/appboard/appboard-entry.ts","ng://angular-portal-azure/lib/domain/sidebar/sidebar-entry.ts","ng://angular-portal-azure/lib/domain/tile.ts","ng://angular-portal-azure/lib/component/app/app.component.ts","ng://angular-portal-azure/lib/component/blade/blade.component.ts","ng://angular-portal-azure/lib/component/grid/grid.component.ts","ng://angular-portal-azure/lib/component/nav/nav.component.ts","ng://angular-portal-azure/lib/component/dashboard/appboard/appboard.component.ts","ng://angular-portal-azure/lib/component/general/page-not-found/page-not-found.component.ts","ng://angular-portal-azure/lib/app-routing.module.ts","ng://angular-portal-azure/lib/component/general/splash-screen/splash-screen.component.ts","ng://angular-portal-azure/lib/directive/router-outlet-named/router-outlet-named.directive.ts","ng://angular-portal-azure/lib/directive/theming/theming.directive.ts","ng://angular-portal-azure/lib/angular-portal-azure.module.ts"],"sourcesContent":["/** The names are used in CSS for layouting, e.g. style='mini' */\r\nexport enum TileSizes {\r\n    small,\r\n    mini,\r\n    normal,\r\n    herowide\r\n}\r\n","import { TileSizes } from './tile-sizes';\r\n\r\nexport class TileSize {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public tileSizes: TileSizes, public width: number, public height: number) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Static Methods\r\n\r\n    static getTileSizes(): Array<TileSize> {\r\n        let tileSizes = Array<TileSize>();\r\n\r\n        tileSizes.push(new TileSize(TileSizes.small, 90, 90));\r\n        tileSizes.push(new TileSize(TileSizes.mini, 180, 90));\r\n        tileSizes.push(new TileSize(TileSizes.normal, 180, 180));\r\n        tileSizes.push(new TileSize(TileSizes.herowide, 540, 360));\r\n\r\n        return tileSizes;\r\n    }\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Tile } from './tile';\r\nimport { TileSize } from './tile-size';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tiles<T extends Tile> extends Array<T>  {\r\n    // #region Properties\r\n\r\n    //tiles: Array<T> = new Array<T>();\r\n    isShowTiles: boolean = true;\r\n    isTilesLoaded: boolean = false;\r\n    hideTileIfOnlyOne: boolean = true;  // not yet evaluated in HTML, but this is the standard behavior\r\n\r\n    tileSizes = TileSize.getTileSizes();\r\n    nextLeft: number = 0;\r\n    nextTop: number = 0;\r\n    columnHeightMax: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(...tiles: Array<T>) {\r\n        super(...tiles);\r\n        //this.tiles = tiles;\r\n    }\r\n\r\n    static create<Apps>(): Apps {\r\n        let object = Object.create(Tiles.prototype);\r\n        return object;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...tiles: Array<T>): number {\r\n        tiles.forEach((tile) => {\r\n            this.processTile(tile);\r\n        });\r\n\r\n        return super.push(...tiles);\r\n    }\r\n\r\n    processTile(tile: T): T {\r\n        return;\r\n        //this.isTilesLoaded = true;\r\n        let tileSize = this.tileSizes[tile.tileSize];\r\n        tile.size = TileSizes[tile.tileSize];  // Get CSS Name\r\n\r\n        tile.top = this.nextTop + 'px';\r\n        tile.left = this.nextLeft + 'px';\r\n\r\n        this.nextLeft += tileSize.width;\r\n\r\n        if (tileSize.height > this.columnHeightMax) {\r\n            this.columnHeightMax = tileSize.height;\r\n        }\r\n\r\n        if (this.nextLeft > 540) {\r\n            this.nextLeft = 0;\r\n            this.nextTop += this.columnHeightMax;\r\n            this.columnHeightMax = 0;\r\n        }\r\n\r\n        //this.tiles.push(tile);\r\n\r\n        return tile;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Tiles } from '../tile/tiles';\r\nimport { TileSize } from '../tile/tile-size';\r\nimport { AppboardEntry } from './appboard-entry';\r\n\r\nexport class Appboard extends Tiles<AppboardEntry> {\r\n    // #region Properties\r\n\r\n    isVisible: boolean = true;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(...appboardEntries: Array<AppboardEntry>) {\r\n        super(...appboardEntries);\r\n        this.tileSizes = TileSize.getTileSizes();\r\n        this.nextLeft = 0;\r\n        this.nextTop = 0;\r\n        this.columnHeightMax = 0;\r\n    }\r\n\r\n    static create<Appboard>(): Appboard {\r\n        let object = Object.create(Appboard.prototype);\r\n        object.tileSizes = TileSize.getTileSizes();\r\n        object.nextLeft = 0;\r\n        object.nextTop = 0;\r\n        object.columnHeightMax = 0;\r\n        return object;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...appboardEntries: Array<AppboardEntry>): number {\r\n        return super.push(...appboardEntries);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { SidebarEntry } from './sidebar-entry';\r\n\r\nexport class Sidebar extends Array<SidebarEntry> {\r\n    // #region Properties\r\n\r\n    isVisible: boolean = true;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    private constructor(sidebarEntries?: Array<SidebarEntry>) {\r\n        super(...sidebarEntries);\r\n    }\r\n\r\n    static create<Sidebars>(): Sidebars {\r\n        return Object.create(Sidebar.prototype);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...sidebarEntries: Array<SidebarEntry>): number {\r\n        return super.push(...sidebarEntries);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Appboard } from \"./dashboard/appboard/appboard\";\r\nimport { Blade } from \"./blade/blade\";\r\n//import { Blades } from \"./blade/blades\";\r\nimport { Sidebar } from \"./sidebar/sidebar\";\r\n\r\nexport class AppConfig {\r\n    // #region Properties\r\n\r\n    appTitle: string = 'One-System Portal Azure';\r\n    isShowSplashScreen: boolean = true;\r\n    username: string = 'user@one-system.domain';\r\n    usernameTenant: string = 'One-System';\r\n\r\n    appboard: Appboard = Appboard.create();\r\n    blades: Blade[] = []; // Blades.create();\r\n    sidebar: Sidebar = Sidebar.create();\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AppConfig } from '../../domain/app-config';\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class AppConfigService {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public appConfig: AppConfig) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","export class ValidationResultDotNet {\n    ErrorMessage: string;\n    MemberNames: string[];\n}\n\nexport class ExceptionDotNet {\n    // .NET Exception (the following fields are transmitted over the wire)\n    ClassName: string | void;\n    Data: { key: number, value: string }[] | null;\n    ExceptionMethod: string | void;\n    HelpURL: string | null | void;\n    HelpLink: string | null | void;\n    HResult: number;\n    InnerException: ExceptionDotNet | null;\n    Message: string | null;\n    RemoteStackIndex: number | void;\n    RemoteStackTraceString: string | null | void;\n    Source: string;\n    StackTrace: string;\n    WatsonBuckets: string | null | void;\n\n    /**\n     *  @deprecated ExceptionMessage is obsolete\n     */\n    ExceptionMessage: string | void;\n    /**\n     *  @deprecated ExceptionType is obsolete\n     */\n    ExceptionType: string | void;\n}\n\nexport class ArgumentNullException extends ExceptionDotNet {\n    ParamName: string;\n}\n\nexport class EntityValidationException extends ExceptionDotNet {\n    Data: { key: number, value: string }[];\n    ValidationResults: ValidationResultDotNet[];\n\n    //public convertResponse(response: any) {\n    //    if (response.headers === undefined) {\n    //        console.debug('EntityValidationException.convertResponse - response.data');\n    //        ValidationsExceptionDotNet.convertResponse(this, response.data);\n    //        ValidationsExceptionDotNet.convertExceptionType(this, response.data);\n    //    } else {\n    //        console.debug('EntityValidationException.convertResponse - response.json()');\n    //        ValidationsExceptionDotNet.convertResponse(this, response.json());\n    //        ValidationsExceptionDotNet.convertExceptionType(this, response.json());\n    //    }\n    //}\n\n    //protected static convertResponse(exceptionTo: EntityValidationException | ValidationsExceptionDotNet, responseDataFrom: ExceptionDotNet): void {\n    //    console.debug('EntityValidationException.convertResponse');\n\n    //    exceptionTo.ExceptionMessage = responseDataFrom.ExceptionMessage;\n    //    exceptionTo.Message = responseDataFrom.Message;\n    //    exceptionTo.StackTrace = responseDataFrom.StackTrace;\n    //    exceptionTo.InnerException = responseDataFrom.InnerException;\n    //}\n\n    //protected static convertExceptionType(exception: EntityValidationException | ValidationsExceptionDotNet, responseData: any): void {\n    //    if (responseData.ExceptionType === undefined) {\n    //        console.debug('EntityValidationException.convertExceptionType - undefined');\n    //        return;\n    //    }\n    //    else if (responseData.ExceptionType === 'System.Data.Entity.Validation.DbEntityValidationException') {\n    //        console.debug('EntityValidationException.convertExceptionType - DbEntityValidationException');\n    //        exception.ExceptionType = 'DbEntityValidationException';\n    //        return;\n    //    }\n    //    else if (responseData.ExceptionType === 'System.Data.Entity.Infrastructure.DbUpdateConcurrencyException') {\n    //        console.debug('EntityValidationException.convertExceptionType - DbUpdateConcurrencyException');\n    //        exception.ExceptionType = 'DbUpdateConcurrencyException';\n    //        return;\n    //    }\n    //    else if (responseData.ClassName !== undefined && responseData.ClassName.indexOf('ValidationsException') > 0) {\n    //        console.debug('EntityValidationException.convertExceptionType - ValidationsException');\n    //        exception.ExceptionType = 'ValidationsException';\n    //        return;\n    //    }\n    //    else {\n    //        console.debug('EntityValidationException.convertExceptionType - else');\n    //        exception.ExceptionType = responseData.ExceptionType;\n    //    }\n    //}\n}\n\n/**\n *  @deprecated ValidationsExceptionDotNet should be replaced by EntityValidationException\n */\nexport class ValidationsExceptionDotNet extends EntityValidationException {\n}\n","import { ValidationsExceptionDotNet } from './exception-dot-net';\n\nexport class Exception extends ValidationsExceptionDotNet {\n    // #region Properties\n\n    // HTTP Server\n    Type: string;\n    MessageDetail: string;\n    Messages: string[];\n    Status: number | undefined;\n    StatusText: string | undefined;\n    Url: string;\n\n    // #endregion\n\n    // #region Static Methods\n\n    static getOneLineMessage(exception: Exception): string {\n        let message: string = '';\n\n        if (exception.Message !== undefined) {\n            if (exception.Message.toLowerCase().indexOf('cannot insert duplicate key in object') >= 0\n                || exception.Message.toLowerCase().indexOf('the duplicate key value is') >= 0) {\n                console.debug(exception.Message);\n                return 'Datensatz mit gleichem Key (SchlÃÂ¼ssel) bereits vorhanden!';\n            }\n\n            if (exception.Message.toLowerCase().indexOf('the delete statement conflicted with the reference constraint') >= 0) {\n                console.debug(exception.Message);\n                return 'Datensatz kann nicht gelÃÂ¶scht werden, da noch abhÃÂ¤ngige Daten vorhanden sind!';\n            }\n\n            if (exception.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                // Frist innerException\n                let innerException = exception.InnerException;\n                if (exception.InnerException.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                    // Second innerException\n                    let innerException = exception.InnerException.InnerException;\n                    if (exception.InnerException.InnerException.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                        // Third innerException\n                        let innerException = exception.InnerException.InnerException.InnerException;\n                    }\n                }\n                console.debug(exception);\n                return innerException.Message;\n            }\n\n            message = message + exception.Message + ' ';\n            return message;\n        }\n\n        if (exception.Messages !== undefined) {\n            if (exception.Messages.length > 0) {\n                message = '';\n                exception.Messages.forEach((item, index) => {\n                    if (index > 0) {\n                        message = message + ' - ';\n                    }\n                    message = message + item;\n                });\n                return message;\n            }\n        }\n\n        if (exception.ExceptionMessage !== undefined && (<string>exception.ExceptionMessage).toLowerCase().indexOf('see the inner exception for details') < 0) {\n            message = message + ': ' + exception.ExceptionMessage + ' ';\n            return message;\n        }\n\n        if (exception.ExceptionMessage !== undefined && (<string>exception.ExceptionMessage).toLowerCase().indexOf('see the inner exception for details') >= 0) {\n            if (exception.InnerException !== undefined) {\n                if (exception.InnerException.InnerException !== undefined) {\n                    message = message + ': ' + exception.InnerException.InnerException.ExceptionMessage + ' ';\n                    return message;\n                } else {\n                    message = message + ': ' + exception.InnerException.ExceptionMessage + ' ';\n                    return message;\n                }\n            }\n        }\n\n        // Default handler\n        console.debug(exception);\n        message = message + ': JavaScript-Fehler oder Probleme mit der Internetverbindung. Weitere Informationen im Log (change log to full = debug). ' + exception;\n\n        return message;\n    }\n\n    // TODO:2018-10-10/hp: [angular.IHttpPromiseCallbackArg<Exception>] should be Response\n    static prepareException(response: Promise<Exception> | any): Exception {\n        let exception = Exception.createException();\n\n        // #region Process (Angular 1) response.data.Data\n\n        if (response.data !== undefined && response.data.Data !== undefined) {\n            exception = Exception.processResponseData(exception, response.data.Data);\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response.json().Data (EntityValidationException, etc.)\n\n        else if (response.json !== undefined && response.json().Data != undefined) {\n            exception = Exception.processResponseData(exception, response.json().Data);\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response._body\n\n        else if (response._body !== undefined) {\n            var body = JSON.parse(response._body);\n            if (body.Message) {\n                exception.Message = body.Message;\n            }\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response.InnerException.InnerException.Message\n\n        else if (response.json !== undefined && response.json !== null\n            && response.json().InnerException !== undefined && response.json().InnerException !== null\n            && response.json().InnerException.InnerException !== undefined && response.json().InnerException.InnerException !== null) {\n            exception.Message = response.json().InnerException.InnerException.Message;\n        }\n\n        // #endregion\n\n        //exception.convertResponse(response);\n\n        exception.Url = response.url;\n        exception.Status = response.status;\n        exception.StatusText = response.statusText;\n\n        return exception;\n    }\n\n    private static createException(): Exception {\n        let exception: Exception = new Exception();\n        exception.Messages = [];\n        return exception;\n    }\n\n    //private static processResponseWithData(exception: Exception, response: angular.IHttpPromiseCallbackArg<Exception>): Exception {\n    //    console.debug('Exception.processResponseWithData');\n    //    // #region Convert data to Messages\n\n    //    if (response.data.Data === undefined) {\n    //        exception.Messages.push('No further information found in [response.data.Data].');\n    //        exception.Messages.push('No further information found in [response.data.Data].');\n    //    } else {\n\n    //        let i = 1;\n    //        while (response.data.Data[i + ''] !== undefined) {\n    //            console.debug('Add to exception.Messages : ' + response.data.Data[i + '']);\n    //            exception.Messages.push(response.data.Data[i + '']);\n    //            i++;\n    //        }\n    //    }\n\n    //    // #endregion\n\n    //    return exception;\n    //}\n\n    private static processResponseData(exception: Exception, data: any[]): Exception {\n        let i = 1;\n        while (data[i + ''] !== undefined) {\n            exception.Messages.push(data[i + '']);\n            i++;\n        }\n\n        return exception;\n    }\n\n    // TODO:2017-01-09/hp: Implement this function for angular2\n    //private static processDotNetException2(exception: Exception, response: any): Exception {\n    //    console.debug('Exception.processDotNetException2');\n\n    //    if (response.json().data !== undefined) {\n    //        console.debug('[Exception.processDotNetException2] not implemented. Implement it to get proper exception data.');\n    //    }\n\n    //    return exception;\n    //}\n\n    // #endregion\n}\n","import { UserAccount } from './user-account';\nimport { PortalService } from './portal-service';\nimport { Exception } from './exception';\n\n\nexport class UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService) { // $scope: any,\n        //this.$scope = $scope;\n        this.portalService = portalService;\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    //$scope: any;\n    portalService: PortalService;\n\n    windowResizeHandler: () => void;\n\n    statusBar: string = '';\n    statusBarClass: string = '';\n\n    // #endregion\n\n    // #region Methods\n\n    /** angular1: $onInit(), $onChanges(changesObj), $doCheck(), $onDestroy(), $postLink() */\n    $onDestroy() {\n        this.removeWindowResizeListener();\n    }\n\n    /** angular2: ngOnChanges(), ngOnInit, ngDoCheck, ngAfterContentInit, ngAfterContentChecked, ngAfterViewInit, ngAfterViewChecked, ngOnDestroy */\n    ngOnDestroy() {\n        this.removeWindowResizeListener();\n    }\n\n    /** Override */\n    onActivate(): void {\n    }\n\n    /** Override */\n    onActivated(): void {\n    }\n\n    private removeWindowResizeListener() {\n        if (this.windowResizeHandler !== undefined && this.portalService.$window) {\n            this.portalService.$window.removeEventListener('resize', this.windowResizeHandler);\n        }\n    }\n\n    setupWindowResizeListener(callback: () => void) {\n        // http://stackoverflow.com/questions/4298612/jquery-how-to-call-resize-event-only-once-its-finished-resizing\n        let id: number;\n\n        window.addEventListener('resize', this.windowResizeHandler = () => {\n            clearTimeout(id);\n            id = setTimeout(() => { callback(); }, 50);\n        });\n    }\n\n    isNumberUndefinedNullOr0(value: number): boolean {\n        if (value && value > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    isObjectNullUndefinedOrEmpty(value: object): boolean {\n        if (value == null) { return true; }\n        if (value == undefined) { return true; }\n        if (value && Object.keys(value).length > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    isStringNullOrEmpty(value: string): boolean {\n        if (value && value.replace(' ', '').length > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getRandomString(length: number = 20) {\n        return 'a' + Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).replace('.', '').replace('(e+', '').replace(')', '').slice(1);\n    }\n\n    // #region Set StatusBar\n\n    clearStatusBar() {\n        this.statusBar = '';\n        this.statusBarClass = '';\n    }\n\n    setStatusBar(text?: string, style?: string) {\n        this.statusBar = text ? text : '';\n        this.statusBarClass = style ? style : '';\n    }\n\n    setStatusBarCopyData() {\n        this.statusBar = 'Daten kopieren...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarLoadData() {\n        this.statusBar = 'Daten laden...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarSaveData() {\n        this.statusBar = 'Daten speichern...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarDeleteData() {\n        this.statusBar = 'Daten lÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬ÃÂ¢Ã¢â¬Å¾ÃÂ¢ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬Ãâ¦ÃÂ¡ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ¡ÃÆÃ¢â¬Å¡ÃâÃÂ¶schen...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarDeleteDataCanceled() {\n        this.statusBar = 'LÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬ÃÂ¢Ã¢â¬Å¾ÃÂ¢ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬Ãâ¦ÃÂ¡ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ¡ÃÆÃ¢â¬Å¡ÃâÃÂ¶schen abgebrochen.';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarInfo(text: string) {\n        this.statusBar = text;\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarError(text: string) {\n        this.statusBar = text;\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    setStatusBarNoDataFound() {\n        this.statusBar = 'Keine Daten gefunden!';\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    setStatusBarException(exception: Exception) {\n        this.statusBar = Exception.getOneLineMessage(exception);\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    // #endregion\n\n    // #endregion\n}\n","import { PortalService } from './portal-service';\nimport { UserAccount } from './user-account';\nimport { UserControlBase } from './user-control-base';\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\nimport { timeout } from 'q';\r\n\nexport class Blade extends UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService, path: string, title: string, subtitle: string = '', width: number = 200) {//$scope: any,\n        super(portalService); //$scope,\n\n        this.vm = this;\n        this.path = path;\n        this.title = title;\n        this.subTitle = subtitle;\n        this.width.width = width + 'px';\n        this.widthStackLayout.width = width - 50 + 'px';  // 50 = padding (left and right)\n\n        if (!portalService) { throw new Error('[Blade] constructor parameter \\'portalService\\' must be provided.'); }\n        if (!path) { throw new Error('[Blade] constructor parameter \\'path\\' must be a string.'); }\n        if (!title && title !== '') { throw new Error('[Blade] constructor parameter \\'title\\' must be a string when provided.'); }\n        if (!subtitle && subtitle !== '') { throw new Error('[Blade] constructor parameter \\'subtitle\\' must be a string when provided.'); }\n        if (!width && width !== 0) { throw new Error('[Blade] constructor parameter \\'width\\' must be a number when provided.'); }\n\n        if (width < 50) { throw new Error('[Blade] constructor parameter \\'width\\' must be at least 50.'); }\n\n        // Set 'this.portalService.areaBlades.blades[index]' to 'this'\n        //     'this.portalService.areaBlades.blades[index]' was generated during AddBlade\n        this.portalService.areaBlades.blades.forEach((blade, index) => {\n            if (blade.path != null && this.path != null && blade.path.toLowerCase() === this.path.toLowerCase()) {\n                this.portalService.areaBlades.blades[index] = this;\n            }\n        });\n\n        this.setupWindowResizeListener(() => { this.setBladeHeights(); });\n        this.setBladeHeights();\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    /** HACK: 2016-11-06/hp\n    [angular-portal-blade] needs [this] as the controller.\n    We don't know how to provide [this] to the directive.\n    So we came up with this [vm] property.*/\n    vm: any = {};\n\n    // Indicates if maximize icon is shown\n    // TODO: 2019-09-26/hp: it probably should be named isMaximizedShown\n    isMaximize: boolean = false;\n\n    // TODO: 2019-09-26/hp: not sure what that is, checkout\n    isCommandMore: boolean = false;\n\n    // Indicates if this is a navigation blade\n    isNav: boolean = false;\n\n    // Indicates if this is a navigation grid blade\n    isGrid: boolean = false;\n\n    visibility: string = 'collapse';\n\n    private watcherTitle: () => void;\n\n    bladeContentHeight: number;\n    bladeContentHeightInner: number;\n\n    title: string = '';\n    subTitle: string = '';\n    width = { 'width': '0' };\n    widthStackLayout = { 'width': '50px' };\n\n    isInnerHtml: boolean = true;\n\n    formblade: any; // angular.IFormController; // name of the ng-form directive\n\n    // #region path\n\n    private _path: string;\n    get path(): string {\n        return this._path;\n    }\n    // For the moment we do distinguish between lower and upper case path name\n    set path(newPath: string) {\n        if (newPath == null) { return; }\n        this._path = newPath.toLowerCase();\n    }\n\n    // #endregion\n\n    // #endregion\n\n    // #region Commands\n\n    isCommandBrowse: boolean = false;\n    isCommandBrowseEnabled: boolean = true;\n    commandBrowse: () => void = () => { this.onCommandBrowse(); };\n    commandBrowseText: string = '';\n\n    isCommandCancel: boolean = false;\n    isCommandCancelEnabled: boolean = true;\n    commandCancel: () => void = () => { this.onCommandCancel(); };\n    commandCancelText: string = '';\n\n    isCommandCopy: boolean = false;\n    isCommandCopyEnabled: boolean = true;\n    commandCopy: () => void = () => { this.onCommandCopy(); };\n    commandCopyText: string = '';\n\n    isCommandDelete: boolean = false;\n    isCommandDeleteEnabled: boolean = true;\n    commandDelete: () => void = () => { this.onCommandDelete(); };\n    commandDeleteText: string = '';\n\n    isCommandDocument: boolean = false;\n    isCommandDocumentEnabled: boolean = true;\n    commandDocument: () => void = () => { this.onCommandDocument(); };\n    commandDocumentText: string = '';\n\n    isCommandDocument2: boolean = false;\n    isCommandDocument2Enabled: boolean = true;\n    commandDocument2: () => void = () => { this.onCommandDocument2(); };\n    commandDocument2Text: string = '';\n\n    isCommandDocument3: boolean = false;\n    isCommandDocument3Enabled: boolean = true;\n    commandDocument3: () => void = () => { this.onCommandDocument3(); };\n    commandDocument3Text: string = '';\n\n    isCommandDocument4: boolean = false;\n    isCommandDocument4Enabled: boolean = true;\n    commandDocument4: () => void = () => { this.onCommandDocument4(); };\n    commandDocument4Text: string = '';\n\n    isCommandDocument5: boolean = false;\n    isCommandDocument5Enabled: boolean = true;\n    commandDocument5: () => void = () => { this.onCommandDocument5(); };\n    commandDocument5Text: string = '';\n\n    isCommandNew: boolean = false;\n    isCommandNewEnabled: boolean = true;\n    commandNew: () => void = () => { this.onCommandNew(); };\n    commandNewText: string = '';\n\n    isCommandOrder: boolean = false;\n    isCommandOrderEnabled: boolean = true;\n    commandOrder: () => void = () => { this.onCommandOrder(); };\n    commandOrderText: string = '';\n\n    isCommandRestart: boolean = false;\n    isCommandRestartEnabled: boolean = true;\n    commandRestart: () => void = () => { this.onCommandRestart(); };\n    commandRestartText: string = '';\n\n    isCommandSave: boolean = false;\n    isCommandSaveEnabled: boolean = true;\n    commandSave: () => void = () => { this.onCommandSave(); };\n    commandSaveText: string = '';\n\n    isCommandSearch: boolean = false;\n    isCommandSearchEnabled: boolean = true;\n    commandSearch: () => void = () => { this.onCommandSearch(); };\n    commandSearchText: string = '';\n\n    isCommandStart: boolean = false;\n    isCommandStartEnabled: boolean = true;\n    commandStart: () => void = () => { this.onCommandStart(); };\n    commandStartText: string = '';\n\n    isCommandStop: boolean = false;\n    isCommandStopEnabled: boolean = true;\n    commandStop: () => void = () => { this.onCommandStop(); };\n    commandStopText: string = '';\n\n    isCommandSwap: boolean = false;\n    isCommandSwapEnabled: boolean = true;\n    commandSwap: () => void = () => { this.onCommandSwap(); };\n    commandSwapText: string = '';\n\n    isCommandExcel: boolean = false;\n    isCommandExcelEnabled: boolean = true;\n    commandExcel: () => void = () => { this.onCommandExcel(); };\n    commandExcelText: string = '';\n\n    // #endregion\n\n    // #region Methods\n\n    activate(): void {\n        this.onActivate();\n        this.onActivated();\n    }\n\n    navigateTo(path: any) {\n        this.onNavigateTo(path);\n    }\n\n    /** Must be overridden. */\n    onNavigateTo(value: any): void {\n        throw new Error('[Blade] \\'onNavigateTo\\' is an abstract function. Define one in the derived class.');\n    }\n\n    // At the moment we do not distinguish between lower and upper case path name\n    comparePaths(path1: string, path2: string): boolean {\n        if (path1 == null) { return false; }\n        if (path2 == null) { return false; }\n        if (path1.toLowerCase() === path2.toLowerCase()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /** close blade. */\n    close() {\n        if (!this.onClose) {\n            return; // do not close blade\n        }\n\n        if (this.portalService.areaBlades !== undefined) {\n            this.portalService.areaBlades.clearPath(this.path);\n        } else {\n            throw new Error('[Blade] path: \\'' + this.path + '\\' could not be removed, since no \\'this.portalService.areaBlades\\' available.');\n        }\n    }\n\n    /** Override */\n    onClose(): boolean {\n        return true;\n    }\n\n    // #region Commands\n\n    onCommandBrowse(): void {\n        throw new Error('[Blade] \\'onCommandBrowse\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandCancel(): void {\n        throw new Error('[Blade] \\'onCommandCancel\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandCopy(): void {\n        throw new Error('[Blade] \\'onCommandCopy\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDelete(): void {\n        throw new Error('[Blade] \\'onCommandDelete\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument(): void {\n        throw new Error('[Blade] \\'onCommandDocument\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument2(): void {\n        throw new Error('[Blade] \\'onCommandDocument2\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument3(): void {\n        throw new Error('[Blade] \\'onCommandDocument3\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument4(): void {\n        throw new Error('[Blade] \\'onCommandDocument4\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument5(): void {\n        throw new Error('[Blade] \\'onCommandDocument5\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandNew(): void {\n        throw new Error('[Blade] \\'onCommandNew\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandOrder(): void {\n        throw new Error('[Blade] \\'onCommandOrder\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandRestart(): void {\n        throw new Error('[Blade] \\'onCommandRestart\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSave(): void {\n        throw new Error('[Blade] \\'onCommandSave\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSearch(): void {\n        throw new Error('[Blade] \\'onCommandSearch\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandStart(): void {\n        throw new Error('[Blade] \\'onCommandStart\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandStop(): void {\n        throw new Error('[Blade] \\'onCommandStop\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSwap(): void {\n        throw new Error('[Blade] \\'onCommandSwap\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandExcel(): void {\n        throw new Error('[Blade] \\'onCommandExcel\\' is an abstract function. Define one in the derived class.');\n    }\n\n    // #endregion\n\n    // #endregion\n\n    /** Change title, as soon as watchExpression changes. watchExpression is either a variable ore an expression, e.g. [name1 + name2] */\n    setTitle(watchExpression: string, func: () => void) {\n        console.log('commented code at : Blade.setTitle');\n        //if (this.watcherTitle === undefined) {\n        //    if (this.$scope !== null) {\n        //        // angular1\n        //        this.watcherTitle = this.$scope.$watch(watchExpression, () => { func(); });\n        //        this.$scope.$on('$destroy', () => { this.watcherTitle(); });\n        //    } else {\n        //        // angular2\n        //        console.log('[Blade.setTitle()] not supported for angular2. use [ngOnChanges] instead.');\n        //    }\n        //}\n    }\n\n    private setBladeHeights(): void {\n        this.bladeContentHeight = window.innerHeight - 40 - 125; // 40 = topbar, 125 = blade header\n        this.bladeContentHeightInner = this.bladeContentHeight - 50 - 3; // 50 = padding (top and bottom), somehow we miss 3px\n\n        // this.portalService.$timeout(() => { }, 50);\n        //window.setTimeout(() => { }, 50);\n    }\n}\n","import { Input } from '@angular/core';\r\n\nimport { PortalService } from './portal-service';\nimport { Tiles } from './tiles';\nimport { UserControlBase } from './user-control-base';\nimport { Blade } from './blade';\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\n\nexport class AreaBlades extends UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService) { // $scope: any,\n        super(portalService); // $scope,\n\n        this.portalScroll = window.document.getElementById('apa-portal-scroll');\n\n        this.setupWindowResizeListener(() => { this.setPortalScrollCss(); });\n\n        this.blades = [];\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    private portalScroll: HTMLElement;\n\n    private addBladeListener: () => void;\n    private areaNotificationShowListener: () => void;\n    private areaNotificationHideListener: () => void;\n\n    blades: Array<Blade> = new Array<Blade>();\n\n    // #endregion\n\n    // #region Methods\n\n    raiseBladeOnActivateEvent(args: IAddBladeEventArgs) {\n        let isEventRaised: boolean = false;\n\n        this.blades.forEach((blade) => {\n            if (blade.path.toLowerCase() === args.path.toLowerCase()) {\n                // Raise event onActivate\n                blade.onActivate();\n                isEventRaised = true;\n                return;\n            }\n        });\n    }\n\n    raiseAddBladeEvent(args: IAddBladeEventArgs) {\n        let isBladeAlreadyShown: boolean = false;\n        this.blades.forEach((blade) => {\n            if (blade.path.toLowerCase() === args.path.toLowerCase()) {\n                // Blade is already shown, just activate it again\n                blade.onActivate();\n                isBladeAlreadyShown = true;\n                return;\n            }\n        });\n\n        if (!isBladeAlreadyShown) {\n            // Add the blade, since it is not yet shown\n            this.portalService.areaBlades.addBlade(args.path, args.pathSender);\n            //this.portalService.$rootScope.$broadcast('AreaBlades.AddBlade', args);\n        }\n    }\n\n    setFirstBlade(path: string): Blade | void {\n        this.clearAll();\n        this.hidePanorama();\n        return this.addBlade(path);\n    }\n\n    addBlade(path: string, senderPath: string = ''): Blade | void {\n        if (path == null) { return; }\n        if (senderPath == null) { return; }\n        let portalcontent: HTMLElement = null;\n\n        console.log('commented code at : AreaBlades.addBlade (analytics)');\n        // this.portalService.$analytics.pageTrack(path.toLowerCase());\n\n        path = path.toLowerCase();\n        senderPath = senderPath.toLowerCase();\n\n        // #region Verify\n\n        if (path === undefined || path === '') { return; }\n\n        if (this.portalService.$window !== undefined) {\n            if (this.portalService.$window.document === undefined) {\n                throw new Error('[AreaBlades] \\'this.$window.document\\' undefined.');\n            }\n\n            portalcontent = this.portalService.$window.document.getElementById('apa-portal-scroll');\n            if (portalcontent === null) {\n                throw new Error('[AreaBlades] HTML element with ID [apa-portal-scroll] not found. Maybe it is to early to call function \\'BladeArea.addBlade\\'.');\n            }\n        }\n\n        // #endregion\n\n        // #region Clear all children of the parent path\n\n        this.clearChild(senderPath);\n\n        // #endregion\n\n        // #region Make sure the blade is not yet show\n\n        this.blades.forEach((blade) => {\n            // we do not distinguish between lower and upper case path name\n            if (blade.comparePaths(blade.path, path)) {\n                throw new Error('[AreaBlades] path: \\'' + path + '\\' will not be added. It is already added.');\n            }\n        });\n\n        // #endregion\n\n        // #region Show the blade\n\n        let blade = new Blade(this.portalService, path, ''); // this.$scope,\n        this.blades.push(blade);\n\n        // #endregion\n\n        // #region Position the blade\n\n        if (this.portalService.$window !== undefined) {\n            this.portalService.$window.setTimeout(() => {\n                let azureportalblades = this.portalService.$window.document.getElementsByClassName('azureportalblade');\n\n                let i = this.blades.length - 1;\n\n                // HACK: Sometime azureportalblades[i].offsetLeft is undefined.\n                //       So now if it is, the user has to scroll on its own.\n                if (azureportalblades[i] !== undefined && (<any>azureportalblades[i]).offsetLeft !== undefined) {\n                    let sl = (<any>azureportalblades[i]).offsetLeft - 30;\n                    portalcontent.scrollLeft = sl;\n                }\n            }, 250);\n        }\n\n        // #endregion\n\n        return blade;\n    }\n\n    clearAll(): void {\n        this.blades.length = 0;\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearPath(path: string): void {\n        // we do not distinguish between lower and upper case path name\n        path = path.toLowerCase();\n\n        let isremoved = this.blades.some((blade, index) => {\n            if (blade.comparePaths(blade.path, path)) {\n                this.blades.length = index;\n                return true;\n            }\n        });\n\n        if (!isremoved && this.portalService.areaNotification.path === path) {\n            this.portalService.areaNotification.hide();\n            isremoved = true;\n        }\n\n        if (!isremoved) {\n            throw new Error('[AreaBlades.clearPath] path: \\'' + path + '\\' could not be removed, since path not found in bladeUrls.');\n        }\n\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearLevel(level: number) {\n        if (this.blades.length < level) {\n            throw new Error('[AreaBlades] level: \\'' + level + '\\' could not be cleard, since only \\'' + this.blades.length + '\\' available.');\n        }\n\n        if (level === 0) { level = 1; }\n        this.blades.length = level - 1;\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearLastLevel() {\n        this.clearLevel(this.blades.length);\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearChild(path: string): void {\n        path = path.toLowerCase();\n\n        if (path === '') {\n            return;\n        }\n        let isremoved = this.blades.some((blade, index) => {\n            // we do not distinguish between lower and upper case path name\n            if (blade.comparePaths(blade.path, path)) {\n                this.blades.length = index + 1;\n                return true;\n            }\n        });\n        if (!isremoved) {\n            throw new Error('[AreaBlades.clearChild] path: \\'' + path + '\\' could not be removed, since path not found in bladeUrls.');\n        }\n    }\n\n    showPanoramaIfNoBlades() {\n        if (this.blades.length === 0) {\n            if (this.portalService.panorama !== undefined) {\n                {\n                    this.portalService.panorama.isVisible = true;\n                    this.portalService.panorama.startboard.tiles.showTiles = true;\n                }\n            }\n        }\n    }\n\n    hidePanorama() {\n        if (this.portalService.panorama !== undefined) {\n            this.portalService.panorama.isVisible = false;\n            this.portalService.panorama.startboard.tiles.showTiles = false;\n        }\n    }\n\n    /** We need to call this when AreaBlades is no longer used, otherwise the listener does not get removed. */\n    close() {\n        // Unregister Listeners\n        this.addBladeListener();\n        this.areaNotificationShowListener();\n        this.areaNotificationHideListener();\n    }\n\n    // #endregion\n\n    setPortalScrollCss() {\n        if (this.portalScroll != null && this.portalService.areaNotification != null) {\n            this.portalScroll.style.marginRight = this.portalService.areaNotification.widthAreaUsed + 'px';\n        }\r\n    }\n}\n\n// angular.module('angularportalazure').service('areaBlades', AreaBlades);\n","import { Input } from '@angular/core';\r\n\r\nimport { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { BladeData } from './blade-data';\r\nimport { BladeNavItem } from './blade-nav-item';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\n\r\n\r\nexport class AreaNotification extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n\r\n        this.areaNotification = window.document.getElementById('apa-notification-area');\r\n\r\n        this.hide();\r\n        this.setupWindowResizeListener(() => { this.calcualteCssStyles(); });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    path: string = '';\r\n    widthAreaUsed: number = 0;\r\n\r\n    private areaNotification: HTMLElement;\r\n\r\n    private _width: number = 250;\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n    set width(value: number) {\r\n        this._width = value;\r\n        this.calcualteCssStyles();\r\n    }\r\n\r\n    private _backgroundColor: string = '#32383f';\r\n    get backgroundColor(): string {\r\n        return this._backgroundColor;\r\n    }\r\n    set backgroundColor(value: string) {\r\n        this._backgroundColor = value;\r\n        this.calcualteCssStyles();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    hide() {\r\n        // Do not hide on false\r\n        if (!this.onHide) {\r\n            return;\r\n        }\r\n\r\n        this.path = '';\r\n        this.widthAreaUsed = 0;\r\n        if (this.areaNotification != null) { this.areaNotification.style.display = 'none' };\r\n\r\n        this.portalService.areaBlades.setPortalScrollCss();\r\n        //this.portalService.$rootScope.$broadcast('AreaNotification.Hide');\r\n    }\r\n\r\n    show(width: number = 250) {\r\n        this.onShow();\r\n        this.width = width;\r\n        this.widthAreaUsed = 1; // Indicate to the calcualteCssStyles function, that we need to set this value\r\n        this.calcualteCssStyles();\r\n        if (this.areaNotification != null) { this.areaNotification.style.display = 'inline-block' };\r\n\r\n        console.log('commented code at : AreaNotification.show');\r\n        this.portalService.areaBlades.setPortalScrollCss()\r\n        //this.portalService.$rootScope.$broadcast('AreaNotification.Show');\r\n        this.onShowed();\r\n    }\r\n\r\n    /* Override */\r\n    onHide(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /* Override */\r\n    onShow() {\r\n    }\r\n\r\n    /* Override */\r\n    onShowed() {\r\n    }\r\n\r\n    private calcualteCssStyles() {\r\n        this.areaNotification = window.document.getElementById('apa-notification-area');\r\n\r\n        this.areaNotification.style.position = 'absolute';\r\n        this.areaNotification.style.top = '0';\r\n        this.areaNotification.style.height = '100%';\r\n        this.areaNotification.style.backgroundColor = this.backgroundColor;\r\n        this.areaNotification.style.borderLeft = '2px solid gray';\r\n        this.areaNotification.style.width = this.width + 'px';\r\n        this.areaNotification.style.left = this.portalService.$window.innerWidth - this.width + 'px';\r\n\r\n        if (this.widthAreaUsed !== 0) {\r\n            this.widthAreaUsed = this.width;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","export class UserAccount {\r\n    // #region Constructor\r\n\r\n    constructor(username: string, firstName: string = '', lastName: string = '') {\r\n        this.userName = username;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    // #region firstName\r\n\r\n    private _firstName: string;\r\n    get firstName(): string {\r\n        return this._firstName;\r\n    }\r\n    set firstName(value: string) {\r\n        this._firstName = value;\r\n        this._name = (this._firstName || '') + ' ' + (this._lastName || '');\r\n    }\r\n    // #endregion\r\n\r\n    // #region lastName\r\n    private _lastName: string;\r\n    get lastName(): string {\r\n        return this._lastName;\r\n    }\r\n    set lastName(value: string) {\r\n        this._lastName = value;\r\n        this._name = (this._firstName || '') + ' ' + (this._lastName || '');\r\n    }\r\n    // #endregion\r\n\r\n    // #region name\r\n    private _name: string;\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n    set name(value: string) {\r\n        throw new Error('[UserAccount] \\'name\\' is a calculated value from \\'firsName\\' and \\'lastName\\'. Assignment not allowed.');\r\n    }\r\n    // #endregion\r\n\r\n    userName: string;\r\n    emailAddress: string;\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { BladeData } from './blade-data';\r\nimport { BladeNavItem } from './blade-nav-item';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\nimport { UserAccount } from './user-account';\r\n\r\n\r\nexport class AvatarMenu extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n\r\n        this.userAccount = new UserAccount('demo@apa.org', 'demo', 'apa');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    userAccount: UserAccount | null;\r\n\r\n    // #endregion\r\n}\r\n","/** The names are used in CSS for layouting, e.g. style='mini' */\nexport enum TileSizes {\n    small,\n    mini,\n    normal,\n    herowide\n}\n","import { TileSizes } from './tile-sizes';\r\n\r\nexport class TileSize {\r\n    // #region Constructor\r\n\r\n    constructor(public tileSizes: TileSizes, public width: number, public height: number) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    static getTileSizes(): Array<TileSize> {\r\n        let tileSizes = Array<TileSize>();\r\n\r\n        tileSizes.push(new TileSize(TileSizes.small, 90, 90));\r\n        tileSizes.push(new TileSize(TileSizes.mini, 180, 90));\r\n        tileSizes.push(new TileSize(TileSizes.normal, 180, 180));\r\n        tileSizes.push(new TileSize(TileSizes.herowide, 540, 360));\r\n\r\n        return tileSizes;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Tile } from './tile';\r\nimport { TileSize } from './tile-size';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tiles {\r\n    // #region Properties\r\n\r\n    showTiles: boolean = true;\r\n    tiles: Array<any> = new Array<any>();\r\n    isTilesLoaded: boolean = false;\r\n    hideTileIfOnlyOne: boolean = true;  // not yet evaluated in HTML, but this is the standard behavior\r\n\r\n    private tileSizes = TileSize.getTileSizes();\r\n    private nextLeft: number = 0;\r\n    private nextTop: number = 0;\r\n    private columnHeightMax: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    addTile(tile: Tile): Tile {\r\n        this.isTilesLoaded = true;\r\n        let tileSize = this.tileSizes[tile.tileSize];\r\n        tile.size = TileSizes[tile.tileSize];  // Get CSS Name\r\n\r\n        tile.top = this.nextTop + 'px';\r\n        tile.left = this.nextLeft + 'px';\r\n\r\n        this.nextLeft += tileSize.width;\r\n\r\n        if (tileSize.height > this.columnHeightMax) {\r\n            this.columnHeightMax = tileSize.height;\r\n        }\r\n\r\n        if (this.nextLeft > 540) {\r\n            this.nextLeft = 0;\r\n            this.nextTop += this.columnHeightMax;\r\n            this.columnHeightMax = 0;\r\n        }\r\n\r\n        this.tiles.push(tile);\r\n\r\n        return tile;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\n\r\nexport class Startboard extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n        this.tiles = new Tiles();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    tiles: Tiles;\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\nimport { AvatarMenu } from './avatar-menu';\r\nimport { Startboard } from './startboard';\r\n\r\nexport class Panorama extends UserControlBase {\r\n    // #region Properties\r\n\r\n    title: string;\r\n    isVisible: boolean = true;\r\n\r\n    avatarMenu: AvatarMenu;\r\n    startboard: Startboard;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService, title: string) { // $scope: any,\r\n        super(portalService); // $scope,\r\n        this.title = title;\r\n        this.portalService.panorama = this;\r\n\r\n        this.avatarMenu = new AvatarMenu(this.portalService);\r\n        this.startboard = new Startboard(this.portalService);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { AppService } from '../service/app/app.service';\r\n\r\n\r\nimport { AreaBlades } from './area-blades';\r\nimport { AreaNotification } from './area-notification';\r\nimport { BladeParameter } from './blade-parameter';\r\nimport { Panorama } from './panorama';\r\nimport { PortalShell } from './portal-shell';\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\nexport class PortalService {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$injector'];\r\n    constructor() { // $injector: any, angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics\r\n        //this.$injector = $injector;\r\n\r\n        //this.$http = $injector.get('$http');\r\n        //this.$httpBackend = $injector.get('$httpBackend');\r\n        //this.$q = $injector.get('$q');\r\n        //this.$rootScope = $injector.get('$rootScope');\r\n        //this.$window = $injector.get('$window');\r\n        //this.$analytics = $injector.get('$analytics');\r\n        //this.$timeout = $injector.get('$timeout');\r\n        //this.$translate = $injector.get('$translate');\r\n\r\n        //this.ngDialog = <any>$injector.get('ngDialog');\r\n\r\n        this.areaBlades = new AreaBlades(this);\r\n        this.areaNotification = new AreaNotification(this);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    appService: AppService;\r\n    parameter: BladeParameter = { action: 'none', itemId: 0 };\r\n    $analytics: Angulartics2GoogleAnalytics;\r\n\r\n    // #region ng.IModule properties\r\n\r\n    //animate;\r\n    //animation;\r\n    //component;\r\n    //config;\r\n    //constant;\r\n    //controller;\r\n    //directive;\r\n    //factory;\r\n    //filter;\r\n    //provider;\r\n    //run;\r\n    //service;\r\n    //value;\r\n    //decorator;\r\n    //name;\r\n    //requires;\r\n\r\n    // #endregion\r\n\r\n    // #region Visual components\r\n\r\n    portalShell: PortalShell;\r\n    panorama: Panorama = new Panorama(this, 'angular-portal-azure-module');\r\n    areaBlades: AreaBlades;\r\n    areaNotification: AreaNotification; // is created and set in 'home' directive\r\n\r\n    // #endregion\r\n\r\n    // #region NgDialogs\r\n\r\n    ngDialog: any; // any should be: angular.dialog.IDialogService;\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Services\r\n\r\n    $injector: any; // angular.auto.IInjectorService;\r\n    $http: any; // angular.IHttpService;\r\n    $httpBackend: any; // angular.IHttpBackendService;\r\n    $q: any; // angular.IQService;\r\n    $rootScope: any; // angular.IRootScopeService;\r\n    $window: any; // angular.IWindowService;\r\n    $timeout: any; // angular.ITimeoutService;\r\n    $translate: any; // angular.translate.ITranslateService;\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n}\r\n\r\n// angular.module('angularportalazure').service('portalService', PortalService);\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart, Event as EventX } from '@angular/router';\r\n\r\nimport { filter } from \"rxjs/operators\";\r\n\r\nimport { AppService } from '../app/app.service';\r\nimport { AppConfigService } from '../app-config/app-config.service';\r\n\r\nimport { Blade } from '../../domain/blade/blade';\r\n\r\nimport { PortalService } from '../../domain/portal-service';\r\n\r\n@Injectable()\r\nexport class BladeService {\r\n    // #region Properties\r\n\r\n    bladeId: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(private appConfigService: AppConfigService, private router: Router, private portalService: PortalService, private appService: AppService) {\r\n        // #region Handle router events\r\n\r\n        this.router.events\r\n            .pipe(\r\n                // The \"events\" stream contains all the navigation events. For this demo,\r\n                // though, we only care about the NavigationStart event as it contains\r\n                // information about what initiated the navigation sequence.\r\n                filter((event: EventX) => {\r\n                    return (event instanceof NavigationStart);\r\n                })\r\n            )\r\n            .subscribe(\r\n                (event: (NavigationStart)) => {\r\n                    // See [https://angular.io/api/router/Event] for routes sequences\r\n\r\n                    // NavigationStart\r\n                    if (event instanceof NavigationStart) {\r\n                        // console.log({ NavigationStart: '', event: event, eventUrl: event.url, eventRestoreState: event.restoredState, routerConfig: this.router.config });\r\n                        this.fixRouterConfigBladeOutlet(event);\r\n                        this.handleRestoreStateEventForBlades(event);\r\n                    }\r\n\r\n                    console.groupEnd();\r\n                });\r\n\r\n        // #endregion\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    /**\r\n     * \r\n     */\r\n    navigateTo(routerToPath: string): void {\r\n        let isRouteMatchFound = false;\r\n\r\n        // Process all route configuration entries\r\n        this.router.config.forEach((routeConfig) => {\r\n            // Try to match a configured route, with the one requested\r\n            // (forEach cannot break out (stop execution), therefore we check for isRouteMatchFound for no further processing)\r\n            if (routeConfig.path === routerToPath && !isRouteMatchFound) {\r\n                this.bladeId = this.bladeId + 1; // create a unique id\r\n                const outletId = 'blade' + this.bladeId;\r\n                this.appConfigService.appConfig.blades.push({ bladeId: outletId } as Blade);\r\n                routeConfig.outlet = outletId; // set outlet, so the route knows, in which router-outlet it should be shown\r\n\r\n                // Navigate to the route\r\n                this.router.navigate([{ outlets: { [outletId]: [routerToPath] } }]);\r\n                //this.router.navigate([{ outlets: { primary: ['appboard'], [outletId]: [routerToPath] } }]);\r\n\r\n                isRouteMatchFound = true;\r\n            }\r\n        });\r\n\r\n        // No match found\r\n        if (!isRouteMatchFound) {\r\n            console.log('XXXXXX');\r\n\r\n            if (this.appConfigService.appConfig.blades.length > 0) {\r\n                this.appConfigService.appConfig.appboard.isVisible = false;\r\n            } else {\r\n                this.appConfigService.appConfig.appboard.isVisible = true;\r\n            }\r\n\r\n            if (this.portalService.areaBlades.blades.length == 0) {\r\n                this.portalService.panorama.isVisible = true;\r\n                this.portalService.panorama.startboard.tiles.showTiles = true;\r\n            }\r\n\r\n            this.router.navigate(['/' + routerToPath]);\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    /**\r\n     * Fix router configuration for blades\r\n     * When a blade is added to the router, the route for the blade is updated with an outlet identifier (e.g. blade1),\r\n     * see above in the navigateTo function.\r\n     * Because this identifier is not persistent and may changes between sessions, we need to add the outlet identifier\r\n     * to the route configuration, so that a corresponding URL can be reconstructed.\r\n     * */\r\n    private fixRouterConfigBladeOutlet(event: NavigationStart): void {\r\n        // TODO:2019-09-30/hp: Not yet finished.\r\n        //                     Processing multiple blade outlets(https://localhost:44398/appboard(blade2:counter//blade1:fetchdata)).\r\n        //                     We need to parse event.url and find all blade outlets.\r\n        //                     At the moment only the first one is found and processed.\r\n        const outlet1 = event.url.substring(10, 16);\r\n        const path1 = event.url.substring(17).replace(')', '');\r\n        //this.router.routerState.root.children.forEach((child) => {\r\n        //    if (child.outlet.startsWith('blade')) {\r\n        //        console.log({ child: child });\r\n        this.router.config.forEach((config) => {\r\n            if (config.path == path1\r\n                && config.outlet === undefined) {\r\n                config.outlet = outlet1;\r\n                this.appConfigService.appConfig.blades.push({ bladeId: outlet1 } as Blade);\r\n            }\r\n        });\r\n        //    }\r\n        //});\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private handleRestoreStateEventForBlades(event: NavigationStart): void {\r\n        // The \"restoredState\" property is set/defined when the navigation\r\n        // event is triggered by a \"popstate\" event (e.g.: back / forward buttons).\r\n        // It will contain the ID of the earlier navigation event\r\n        // to which the browser is returning.\r\n        // CAUTION: This ID may not be part of the current page rendering.\r\n        // This value is pulled out of the browser; and, may exist across page refreshes.\r\n        if (event.restoredState) {\r\n            if (event.url.indexOf('(blade') < 0) {\r\n                console.log('no more blades, reset appboard visibility')\r\n                this.appConfigService.appConfig.appboard.isVisible = true;\r\n\r\n                this.portalService.panorama.isVisible = true;\r\n                this.portalService.panorama.startboard.tiles.showTiles = true;\r\n            } else {\r\n                console.log('remove latest blade')\r\n                this.appConfigService.appConfig.blades.pop();\r\n            }\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","// https://devblogs.microsoft.com/premier-developer/angular-how-to-simplify-components-with-typescript-inheritance/\r\n\r\nimport { Injector } from '@angular/core';\r\n\r\nexport class InjectorService {\r\n    // #region Properties\r\n\r\n    private static injector: Injector = null;\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    static setInjector(injector: Injector) {\r\n        InjectorService.injector = injector;\r\n    }\r\n\r\n    static getInjector(): Injector {\r\n        return InjectorService.injector;\r\n    }\r\n\r\n    // #endregion\r\n}       \r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { PortalService } from '../../domain/portal-service';\r\n\r\nimport { AppConfigService } from '../app-config/app-config.service'\r\nimport { BladeService } from '../blade/blade.service'\r\nimport { InjectorService } from '../injector/injector.service'\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class AppService {\r\n    // #region Constructors\r\n\r\n    //constructor(title: string = null) {\r\n    constructor(\r\n        public appConfigService: AppConfigService,\r\n        public bladeService: BladeService,\r\n        injector: Injector\r\n    ) {\r\n        InjectorService.setInjector(injector);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    portalService: PortalService;\r\n}\r\n","//import { MainService } from '../../service/main/main.service';\r\n//import { BrowserWindowService } from '../service/base/browser-window.service';\r\n\r\nexport class UserControlBase {\r\n    // #region Properties\r\n\r\n    //browserWindowService: BrowserWindowService;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // public mainService: MainService\r\n    constructor() {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n    /** Override */\r\n    onActivate(): void {\r\n    }\r\n\r\n    /** Override */\r\n    onActivated(): void {\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","export class Viewport {\r\n    // #region Properties\r\n\r\n    browserWindowInnerHeight: number;       // provided by the browser itself\r\n    browserWindowInnerWidth: number;        // provided by the browser itself\r\n\r\n    private fixedHeight: number = 0;       // contains the heights of all the fixed area in the browser | 20 is the scroller\r\n    dynamicHeight: number = 0;              // calculated Height (browserWindowInnerHeight - fixedHeight)\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    setBrowserWindow(browserWindow: Window) {\r\n        this.browserWindowInnerHeight = browserWindow.innerHeight;\r\n        this.browserWindowInnerWidth = browserWindow.innerWidth;\r\n        this.dynamicHeight = this.browserWindowInnerHeight - this.fixedHeight;\r\n    }\r\n\r\n    addFixedHeight(height: number) {\r\n        this.fixedHeight = this.fixedHeight + height;\r\n        this.dynamicHeight = this.browserWindowInnerHeight - this.fixedHeight;\r\n    }\r\n\r\n    log(): void {\r\n        console.group('Viewport');\r\n        console.log(`browserWindowInnerHeight: ${this.browserWindowInnerHeight}`);\r\n        console.log(`browserWindowInnerWidth: ${this.browserWindowInnerWidth}`);\r\n        console.log(`dynamicHeight: ${this.dynamicHeight}`);\r\n        console.log(`fixedHeight: ${this.fixedHeight}`);\r\n        console.groupEnd();\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","// More information: https://brianflove.com/2018/01/11/angular-window-provider/\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { throttleTime, startWith, map } from 'rxjs/operators';\r\n\r\nimport { Viewport } from './viewport';\r\n//import { pipe } from '@angular/core/src/render3';\r\n\r\n// #region Global JavaScript Functions\r\n\r\nfunction getWindow(): any {\r\n    return window;\r\n}\r\n\r\n// #endregion\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class BrowserService {\r\n    // #region Properties\r\n\r\n    get browserWindow(): Window {\r\n        return getWindow();\r\n    }\r\n\r\n    private viewport: Viewport;\r\n\r\n    onResize: Observable<Viewport>;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor() {\r\n        this.viewport = new Viewport();\r\n        this.viewport.addFixedHeight(40);\r\n        this.viewport.setBrowserWindow(this.browserWindow); // Initialize values\r\n\r\n        console.log('commented code at : BrowserService.constructor');\r\n        //this.onResize = fromEvent(this.browserWindow, 'resize')\r\n        //    .pipe(\r\n        //        throttleTime(20),\r\n        //        map((event) => {\r\n        //            this.viewport.setBrowserWindow(<Window>event.currentTarget);\r\n        //            return this.viewport;\r\n        //        }),\r\n        //        startWith(this.viewport),\r\n        //        //tap(viewport => console.log(viewport))\r\n        //    );\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { StatusBar } from './../status-bar';\r\nimport { UserControlBase } from './../base/user-control-base';\r\n\r\nimport { BrowserService } from '../../service/browser/browser.service';\r\nimport { InjectorService } from '../../service/injector/injector.service';\r\n\r\nimport { Viewport } from '../../service/browser/viewport';\r\n\r\nexport class Blade extends UserControlBase {\r\n    // #region Properties\r\n\r\n    private browserService: BrowserService;\r\n    viewport: Viewport = new Viewport();\r\n\r\n    // bladeId: string = '';\r\n    private _bladeId: string = '';\r\n    get bladeId(): string {\r\n        return this._bladeId;\r\n    }\r\n    set bladeId(bladeId: string) {\r\n        if (bladeId == null) { return; }\r\n        this._bladeId = bladeId.toLowerCase();\r\n    }\r\n\r\n    /** HACK:2016-11-06/hp: [angular-portal-blade] needs [this] as the controller.\r\n    We don't know how to provide [this] to the directive.\r\n    So we came up with this [vm] property.*/\r\n    vm: any = {};\r\n\r\n    statusBar: StatusBar;\r\n\r\n    visibility: string = 'collapse';\r\n\r\n    private watcherTitle: () => void;\r\n\r\n    bladeContentHeight: number;\r\n    bladeContentHeightInner: number;\r\n\r\n    title: string = '';\r\n    subTitle: string = '';\r\n    width = '0';\r\n    widthStackLayout = { 'width': '50px' };\r\n\r\n    height = '0';\r\n\r\n    isInnerHtml: boolean = true;\r\n\r\n    formblade: any; // angular.IFormController; // name of the ng-form directive\r\n\r\n    // #region path\r\n\r\n    private _path: string;\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n    // For the moment we do distinguish between lower and upper case path name\r\n    set path(newPath: string) {\r\n        if (newPath == null) { return; }\r\n        this._path = newPath.toLowerCase();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Commands\r\n\r\n    isCommandBrowse: boolean = false;\r\n    commandBrowse: () => void = () => { this.onCommandBrowse(); };\r\n    commandBrowseText: string = '';\r\n\r\n    isCommandCancel: boolean = false;\r\n    commandCancel: () => void = () => { this.onCommandCancel(); };\r\n    commandCancelText: string = '';\r\n\r\n    isCommandCopy: boolean = false;\r\n    isCommandCopyEnabled: boolean = true;\r\n    commandCopy: () => void = () => { this.onCommandCopy(); };\r\n    commandCopyText: string = '';\r\n\r\n    isCommandDelete: boolean = false;\r\n    isCommandDeleteEnabled: boolean = true;\r\n    commandDelete: () => void = () => { this.onCommandDelete(); };\r\n    commandDeleteText: string = '';\r\n\r\n    isCommandDocument: boolean = false;\r\n    commandDocument: () => void = () => { this.onCommandDocument(); };\r\n    commandDocumentText: string = '';\r\n\r\n    isCommandDocument2: boolean = false;\r\n    commandDocument2: () => void = () => { this.onCommandDocument2(); };\r\n    commandDocument2Text: string = '';\r\n\r\n    isCommandDocument3: boolean = false;\r\n    commandDocument3: () => void = () => { this.onCommandDocument3(); };\r\n    commandDocument3Text: string = '';\r\n\r\n    isCommandDocument4: boolean = false;\r\n    commandDocument4: () => void = () => { this.onCommandDocument4(); };\r\n    commandDocument4Text: string = '';\r\n\r\n    isCommandDocument5: boolean = false;\r\n    commandDocument5: () => void = () => { this.onCommandDocument5(); };\r\n    commandDocument5Text: string = '';\r\n\r\n    isCommandNew: boolean = false;\r\n    commandNew: () => void = () => { this.onCommandNew(); };\r\n    commandNewText: string = '';\r\n\r\n    isCommandOrder: boolean = false;\r\n    commandOrder: () => void = () => { this.onCommandOrder(); };\r\n    commandOrderText: string = '';\r\n\r\n    isCommandRestart: boolean = false;\r\n    commandRestart: () => void = () => { this.onCommandRestart(); };\r\n    commandRestartText: string = '';\r\n\r\n    isCommandSave: boolean = false;\r\n    isCommandSaveEnabled: boolean = true;\r\n    commandSave: () => void = () => { this.onCommandSave(); };\r\n    commandSaveText: string = '';\r\n\r\n    isCommandSearch: boolean = false;\r\n    commandSearch: () => void = () => { this.onCommandSearch(); };\r\n    commandSearchText: string = '';\r\n\r\n    isCommandStart: boolean = false;\r\n    commandStart: () => void = () => { this.onCommandStart(); };\r\n    commandStartText: string = '';\r\n\r\n    isCommandStop: boolean = false;\r\n    commandStop: () => void = () => { this.onCommandStop(); };\r\n    commandStopText: string = '';\r\n\r\n    isCommandSwap: boolean = false;\r\n    commandSwap: () => void = () => { this.onCommandSwap(); };\r\n    commandSwapText: string = '';\r\n\r\n    isCommandExcel: boolean = false;\r\n    commandExcel: () => void = () => { this.onCommandExcel(); };\r\n    commandExcelText: string = '';\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // mainService: MainService, \r\n    constructor(path: string = '', title: string = '', subtitle: string = '', width: number = 200) {\r\n        super();\r\n        this.browserService = InjectorService.getInjector().get(BrowserService);\r\n        this.browserService.onResize.subscribe((viewport) => this.viewport = viewport);\r\n\r\n        this.vm = this;\r\n        this.path = path;\r\n        this.title = title;\r\n        this.subTitle = subtitle;\r\n        this.width = width + 'px';\r\n        this.widthStackLayout.width = width - 50 + 'px';  // 50 = padding (left and right)\r\n\r\n        //if (!mainService) { throw new Error('[Blade] constructor parameter \\'mainService\\' must be provided.'); }\r\n        if (!path) { throw new Error('[Blade] constructor parameter \\'path\\' must be a string.'); }\r\n        if (!title && title !== '') { throw new Error('[Blade] constructor parameter \\'title\\' must be a string when provided.'); }\r\n        if (!subtitle && subtitle !== '') { throw new Error('[Blade] constructor parameter \\'subtitle\\' must be a string when provided.'); }\r\n        if (!width && width !== 0) { throw new Error('[Blade] constructor parameter \\'width\\' must be a number when provided.'); }\r\n\r\n        if (width < 50) { throw new Error('[Blade] constructor parameter \\'width\\' must be at least 50.'); }\r\n\r\n        // Set 'this.mainService.areaBlades.blades[index]' to 'this'\r\n        //     'this.mainService.areaBlades.blades[index]' was generated during AddBlade\r\n        //this.mainService.areaBlades.blades.forEach((blade, index) => {\r\n        //    if (blade.path != null && this.path != null && blade.path.toLowerCase() === this.path.toLowerCase()) {\r\n        //        this.mainService.areaBlades.blades[index] = this;\r\n        //    }\r\n        //});\r\n\r\n        //this.browserWindow.setupWindowResizeListener(() => { this.setBladeHeights(); });\r\n        this.setBladeHeights();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n        console.log('ngOnInit');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    activate(): void {\r\n        this.onActivate();\r\n        this.onActivated();\r\n    }\r\n\r\n    navigateTo(path: any) {\r\n        this.onNavigateTo(path);\r\n    }\r\n\r\n    /** Must be overridden. */\r\n    onNavigateTo(value: any): void {\r\n        throw new Error('[Blade] \\'onNavigateTo\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    // At the moment we do not distinguish between lower and upper case path name\r\n    comparePaths(path1: string, path2: string): boolean {\r\n        if (path1 == null) { return false; }\r\n        if (path2 == null) { return false; }\r\n        if (path1.toLowerCase() === path2.toLowerCase()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /** close blade. */\r\n    close() {\r\n        if (!this.onClose) {\r\n            return; // do not close blade\r\n        }\r\n\r\n        //if (this.mainService.areaBlades !== undefined) {\r\n        //    this.mainService.areaBlades.clearPath(this.path);\r\n        //} else {\r\n        //    throw new Error('[Blade] path: \\'' + this.path + '\\' could not be removed, since no \\'this.mainService.areaBlades\\' available.');\r\n        //}\r\n    }\r\n\r\n    /** Override */\r\n    onClose(): boolean {\r\n        return true;\r\n    }\r\n\r\n    ///** Change title, as soon as watchExpression changes. watchExpression is either a variable ore an expression, e.g. [name1 + name2] */\r\n    //setTitle(watchExpression: string, func: () => void) {\r\n    //    if (this.watcherTitle === undefined) {\r\n    //        if (this.$scope !== null) {\r\n    //            // angular1\r\n    //            this.watcherTitle = this.$scope.$watch(watchExpression, () => { func(); });\r\n    //            this.$scope.$on('$destroy', () => { this.watcherTitle(); });\r\n    //        } else {\r\n    //            // angular2\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    // #region Commands\r\n\r\n    onCommandBrowse(): void {\r\n        throw new Error('[Blade] \\'onCommandBrowse\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandCancel(): void {\r\n        throw new Error('[Blade] \\'onCommandCancel\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandCopy(): void {\r\n        throw new Error('[Blade] \\'onCommandCopy\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDelete(): void {\r\n        throw new Error('[Blade] \\'onCommandDelete\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument2(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument2\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument3(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument3\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument4(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument4\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument5(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument5\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandNew(): void {\r\n        throw new Error('[Blade] \\'onCommandNew\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandOrder(): void {\r\n        throw new Error('[Blade] \\'onCommandOrder\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandRestart(): void {\r\n        throw new Error('[Blade] \\'onCommandRestart\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSave(): void {\r\n        throw new Error('[Blade] \\'onCommandSave\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSearch(): void {\r\n        throw new Error('[Blade] \\'onCommandSearch\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandStart(): void {\r\n        throw new Error('[Blade] \\'onCommandStart\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandStop(): void {\r\n        throw new Error('[Blade] \\'onCommandStop\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSwap(): void {\r\n        throw new Error('[Blade] \\'onCommandSwap\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandExcel(): void {\r\n        throw new Error('[Blade] \\'onCommandExcel\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    private setBladeHeights(): void {\r\n        //this.bladeContentHeight = this.mainService.browserWindowService.browserWindow.innerHeight - 40 - 125; // 40 = topbar, 125 = blade header\r\n        this.bladeContentHeightInner = this.bladeContentHeight - 50 - 3; // 50 = padding (top and bottom), somehow we miss 3px\r\n\r\n        // this.mainService.$timeout(() => {\r\n        // }, 50);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","//import { MainService } from '../../../service/main/main.service';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tile {\r\n    // #region Properties\r\n\r\n    //mainService: MainService;\r\n\r\n    title: string;\r\n    subTitle: string;\r\n\r\n    tileSize: TileSizes;\r\n    size: string; // CSS style class name - refactoring: rename to cssClass\r\n\r\n    left: string; // left position (CSS)\r\n    top: string; // top position (CSS)\r\n\r\n    private _bladePath: string;\r\n    get bladePath(): string {\r\n        return this._bladePath;\r\n    }\r\n\r\n    // For the moment we do not distinguish between lower and upper case path name\r\n    set bladePath(newBladePath: string) {\r\n        this._bladePath = newBladePath.toLowerCase();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // mainService: MainService, \r\n    constructor(title: string, bladePath: string) {\r\n        //this.mainService = mainService;\r\n\r\n        this.title = title;\r\n        this.bladePath = bladePath;\r\n        this.tileSize = TileSizes.normal;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    clicked() {\r\n        //this.mainService.areaBlades.setFirstBlade(this.bladePath);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","//import { MainService } from '../../../service/main/main.service';\r\nimport { Tile } from '../tile/tile';\r\n\r\nexport class AppboardEntry extends Tile {\r\n    // #region Properties\r\n\r\n    //mainService: MainService\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public title: string, public routerPath: string, public subTitle: string = '', public iconClass: string = '', public iconColor: string = '') {\r\n        super(title, routerPath);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","export class SidebarEntry {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public title: string, public routerPath: string, public iconClass: string = null) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Blade } from './blade';\r\nimport { TileSizes } from './tile-sizes';\r\nimport { PortalService } from './portal-service';\r\n\r\nexport class Tile {\r\n    // #region Constructor\r\n\r\n    constructor(title: string, bladePath: string, portalService: PortalService) {\r\n        this.portalService = portalService;\r\n\r\n        this.title = title;\r\n        this.bladePath = bladePath;\r\n        this.tileSize = TileSizes.normal;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    portalService: PortalService;\r\n\r\n    title: string;\r\n    subTitle: string;\r\n\r\n    // #region bladePath\r\n\r\n    get bladePath(): string {\r\n        return this._bladePath;\r\n    }\r\n    // For the moment we do not distinguish between lower and upper case path name\r\n    set bladePath(newBladePath: string) {\r\n        this._bladePath = newBladePath.toLowerCase();\r\n    }\r\n    private _bladePath: string;\r\n\r\n    // #endregion\r\n\r\n    tileSize: TileSizes;\r\n    size: string; // CSS style class name - refactoring: rename to cssClass\r\n\r\n    left: string; // Obsolete, use leftN\r\n    top: string; // Obsolete, use topN\r\n    leftN: string; // left position (CSS) - during refactoring, rename to left\r\n    topN: string; // top position (CSS) - during refactoring, rename to top\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    clicked() {\r\n        this.portalService.areaBlades.setFirstBlade(this.bladePath);\r\n        this.portalService.appService.bladeService.navigateTo(this.bladePath);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\nimport { AppService } from '../../service/app/app.service';\n\nimport { PortalService } from '../../domain/portal-service';\nimport { AreaNotification } from '../../domain/area-notification';\nimport { AreaBlades } from '../../domain/area-blades';\nimport { Tile } from '../../domain/tile';\n\ninterface DinoThemes {\n    [name: string]: DinoTheme;\n}\n\ninterface DinoTheme {\n    '--topbar-color': string;\n    '--topbar-background-color': string;\n    '--topbar-home-color': string;\n    '--blade-statusbar-background-color': string;\n    '--blade-commands-background-color': string;\n}\n\n@Component({\n    selector: 'angular-portal-azure',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'] // build error: Unknown version 67 of android\n})\nexport class AppComponent implements OnInit {\n    readonly themeProps = [\n        'color-main',\n        'color-main-darken',\n        'color-main-darken2',\n        'color-main-lighten',\n        'color-accent',\n    ];\n\n    readonly themes: DinoThemes = {\n        'black': {\n            '--topbar-color': '#fff',\n            '--topbar-background-color': '#1c1c1c',\n            '--topbar-home-color': '#fff',\n            '--blade-statusbar-background-color': '#293644',\n            '--blade-commands-background-color': '#3e4045',\n        },\n        'white': {\n            '--topbar-color': '#1c1c1c',\n            '--topbar-background-color': '#efefef',\n            '--topbar-home-color': '#1c1c1c',\n            '--blade-statusbar-background-color': '#dcdcdc',\n            '--blade-commands-background-color': '#c7c7c7',\n        }\n    };\n\n    portalService: PortalService;\n    selectedTheme: DinoTheme = this.themes['black'];\n\n    constructor(public appService: AppService, private router: Router) {\n        this.portalService = new PortalService();\n        this.portalService.appService = this.appService;\n        this.portalService.areaNotification = new AreaNotification(this.portalService);\n        this.portalService.areaBlades = new AreaBlades(this.portalService);\n\n        this.appService.portalService = this.portalService;\n    }\n\n    ngOnInit() {\n        setTimeout(() => { this.appService.appConfigService.appConfig.isShowSplashScreen = false; }, 500);\n\n        // TODO:2019-09-27/hp: convert NEW API to OLD - Copy TILES\n        //                     refactor this.portalService.panorama.startboard.tiles\n        //                       to use this.appService.appConfigService.appConfig.appboard\n        this.appService.appConfigService.appConfig.appboard.forEach((item) => {\n            let tile = this.portalService.panorama.startboard.tiles.addTile(new Tile(item.title, item.routerPath, this.portalService));\n            tile.subTitle = item.subTitle;\n        });\n    }\n\n    setTheme(themeIndex: string) {\n        this.selectedTheme = this.themes[themeIndex];\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Blade } from '../../domain/blade';\nimport { PortalService } from '../../domain/portal-service';\r\n\n@Component({\n    selector: 'apa-blade',\n    templateUrl: './blade.component.html',\n    styleUrls: ['./blade.component.scss'] // build error: Unknown version 67 of android\n})\nexport class BladeComponent extends Blade implements OnInit {\n    constructor(portalService: PortalService) {\n        super(portalService, 'blade1', '', '', 500)\r\n    }\n\n    ngOnInit() {\n    }\n\n    //close = () => { };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'apa-grid',\n    templateUrl: './grid.component.html',\n    styleUrls: ['./grid.component.scss'] // build error: Unknown version 67 of android\n})\nexport class GridComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'apa-nav',\n    templateUrl: './nav.component.html',\n    styleUrls: ['./nav.component.scss'] // build error: Unknown version 67 of android\n})\nexport class NavComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppService } from '../../../service/app/app.service';\r\n\r\nimport { PortalService } from '../../../domain/portal-service';\r\nimport { AreaNotification } from '../../../domain/area-notification';\r\nimport { AreaBlades } from '../../../domain/area-blades';\r\nimport { Tile } from '../../../domain/tile';\r\n\r\n@Component({\r\n    selector: 'ospa-appboard',\r\n    templateUrl: './appboard.component.html',\r\n    styleUrls: ['./appboard.component.scss'] // build error: Unknown version 67 of android\r\n})\r\nexport class AppboardComponent implements OnInit {\r\n    // #region Constructors\r\n\r\n    constructor(public appService: AppService, public portalService: PortalService, public router: Router) {\r\n        this.portalService.appService = this.appService;\r\n        this.portalService.areaNotification = new AreaNotification(this.portalService);\r\n        this.portalService.areaBlades = new AreaBlades(this.portalService);\r\n\r\n        this.appService.portalService = this.portalService;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n        setTimeout(() => { this.appService.appConfigService.appConfig.isShowSplashScreen = false; }, 500);\r\n\r\n        // TODO:2019-09-27/hp: convert NEW API to OLD - Copy TILES\r\n        //                     refactor this.portalService.panorama.startboard.tiles\r\n        //                       to use this.appService.appConfigService.appConfig.appboard\r\n        if (this.portalService.panorama.startboard.tiles.tiles.length == 0) {\r\n            this.appService.appConfigService.appConfig.appboard.forEach((item) => {\r\n                let tile = this.portalService.panorama.startboard.tiles.addTile(new Tile(item.title, item.routerPath, this.portalService));\r\n                tile.subTitle = item.subTitle;\r\n            });\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    navigateTo(routerPath): void {\r\n        this.appService.bladeService.navigateTo(routerPath);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ospa-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'] // build error: Unknown version 67 of android\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './component/app/app.component';\r\nimport { AppboardComponent } from './component/dashboard/appboard/appboard.component';\r\nimport { PageNotFoundComponent } from './component/general/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'appboard', pathMatch: 'full' },\r\n    { path: 'appboard', component: AppboardComponent }, // AppComponent || AppboardComponent \r\n    { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes) // , { enableTracing: true }\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//import { MainOscService } from '@one-system/one-sys-core';\r\n\r\n@Component({\r\n    selector: 'ospa-splash-screen',\r\n    templateUrl: './splash-screen.component.html',\r\n    styleUrls: ['./splash-screen.component.scss'] // build error: Unknown version 67 of android\r\n})\r\nexport class SplashScreenComponent implements OnInit {\r\n    //constructor(public mainOscService: MainOscService) { }\r\n    constructor(/*public mainOscService: MainOscService*/) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Input, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef } from \"@angular/core\";\r\nimport { Router, RouterOutlet, ChildrenOutletContexts } from \"@angular/router\";\r\n\r\n// #region README\r\n\r\n// <router-outlet> does not yet support a dynamic [name] attribute\r\n// During ng build, we get the following error:\r\n// > ERROR: Can't bind to 'name' since it isn't a known property of 'router-outlet'.\r\n// Therefore we have implemented this. Usage:\r\n// <router-outlet-named [name]=\"name1\">\r\n\r\n// #endregion\r\n\r\n@Directive({\r\n    selector: 'router-outlet-named',\r\n    exportAs: 'outlet'\r\n})\r\nexport class RouterOutletNamedDirective implements OnInit, OnDestroy {\r\n    // #region Properties\r\n\r\n    public outlet: RouterOutlet;\r\n    @Input() public name: string;\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    constructor(\r\n        private parentContexts: ChildrenOutletContexts,\r\n        private location: ViewContainerRef,\r\n        private resolver: ComponentFactoryResolver,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n        this.outlet = new RouterOutlet(this.parentContexts, this.location, this.resolver, this.name, this.changeDetector);\r\n        this.outlet.ngOnInit();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.outlet) {\r\n            this.outlet.ngOnDestroy();\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","\r\nimport { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[theming]'\r\n})\r\nexport class ThemingDirective implements OnChanges {\r\n    @Input('theming') theme: { [prop: string]: string };\r\n\r\n    constructor(private el: ElementRef<HTMLElement>) {\r\n    }\r\n\r\n    ngOnChanges() {\r\n        Object.keys(this.theme).forEach(prop => {\r\n            this.el.nativeElement.style.setProperty(`${prop}`, this.theme[prop]);\r\n        });\r\n    }\r\n}\r\n","import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppConfig } from './domain/app-config';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppboardComponent } from '../lib/component/dashboard/appboard/appboard.component';\nimport { PageNotFoundComponent } from '../lib/component/general/page-not-found/page-not-found.component';\nimport { SplashScreenComponent } from '../lib/component/general/splash-screen/splash-screen.component';\n\nimport { AppComponent } from './component/app/app.component';\nimport { NavComponent } from './component/nav/nav.component';\nimport { GridComponent } from './component/grid/grid.component';\nimport { BladeComponent } from './component/blade/blade.component';\n\nimport { BladeService } from './service/blade/blade.service';\nimport { PortalService } from './domain/portal-service';\nimport { BrowserService } from './service/browser/browser.service';\n\nimport { RouterOutletNamedDirective } from './directive/router-outlet-named/router-outlet-named.directive';\nimport { ThemingDirective } from './directive/theming/theming.directive';\n\n@NgModule({\n    declarations: [\n        // Component\n        AppboardComponent,\n        PageNotFoundComponent,\n        SplashScreenComponent,\n        AppComponent,\n        NavComponent,\n        GridComponent,\n        BladeComponent,\n        // Directives\n        RouterOutletNamedDirective,\n        ThemingDirective\n    ],\n    providers: [\n        PortalService,\n        BladeService,\n        BrowserService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        AppRoutingModule // Should be last, since it contains the ** route\n    ],\n    exports: [\n        // Component\n        AppComponent,\n        PageNotFoundComponent,\n        SplashScreenComponent,\n        NavComponent,\n        GridComponent,\n        BladeComponent,\n        // Directives\n        RouterOutletNamedDirective,\n        ThemingDirective\n    ]\n})\nexport class AngularPortalAzureModule {\n    constructor(@Optional() @SkipSelf() parentModule: AngularPortalAzureModule) {\n        if (parentModule) {\n            throw new Error(\n                'OneSysCoreModule is already loaded. Import it in only in one AppModule.');\n        }\n    }\n\n    static forRoot(appConfig: AppConfig): ModuleWithProviders {\n        return {\n            ngModule: AngularPortalAzureModule,\n            providers: [\n                { provide: AppConfig, useValue: appConfig }\n            ]\n        };\n    }\n}\n"],"names":["TileSize","TileSizes","Tiles","UserControlBase","Blade","Tile"],"mappings":";;;;;;;;;;;;IAEI,QAAK;IACL,OAAI;IACJ,SAAM;IACN,WAAQ;;;;;;;;;;;ACLZ,MAEa,QAAQ;;;;;;;;;IAOjB,YAAmB,SAAoB,EAAS,KAAa,EAAS,MAAc;QAAjE,cAAS,GAAT,SAAS,CAAW;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;KACnF;;;;;;IAMD,OAAO,YAAY;;YACX,SAAS,GAAG,KAAK,EAAY;QAEjC,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACtD,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACtD,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QACzD,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAE3D,OAAO,SAAS,CAAC;KACpB;CAMJ;;;IAtBe,6BAA2B;;IAAE,yBAAoB;;IAAE,0BAAqB;;;;;;;ACRxF;;;AAGA,MAAa,KAAsB,SAAQ,KAAQ;;;;;;IAiB/C,YAAY,GAAG,KAAe;QAC1B,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;;;QAdpB,gBAAW,GAAY,IAAI,CAAC;QAC5B,kBAAa,GAAY,KAAK,CAAC;QAC/B,sBAAiB,GAAY,IAAI,CAAC;;QAElC,cAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QACpC,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAW,CAAC,CAAC;QACpB,oBAAe,GAAW,CAAC,CAAC;;KAS3B;;;;;IAED,OAAO,MAAM;;YACL,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAC3C,OAAO,MAAM,CAAC;KACjB;;;;;;;IAMD,IAAI,CAAC,GAAG,KAAe;QACnB,KAAK,CAAC,OAAO;;;;QAAC,CAAC,IAAI;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC1B,EAAC,CAAC;QAEH,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;KAC/B;;;;;IAED,WAAW,CAAC,IAAO;QACf,OAAO;;;YAEH,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC;QAEhC,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE;YACxC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SAC5B;;QAID,OAAO,IAAI,CAAC;KACf;CAOJ;;;IAlEG,4BAA4B;;IAC5B,8BAA+B;;IAC/B,kCAAkC;;IAElC,0BAAoC;;IACpC,yBAAqB;;IACrB,wBAAoB;;IACpB,gCAA4B;;;;;;;ACfhC,MAIa,QAAS,SAAQ,KAAoB;;;;;;IAS9C,YAAY,GAAG,eAAqC;QAChD,KAAK,CAAC,GAAG,eAAe,CAAC,CAAC;;QAP9B,cAAS,GAAY,IAAI,CAAC;QAQtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;KAC5B;;;;;IAED,OAAO,MAAM;;YACL,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC9C,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC3C,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;QACnB,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC;QAC3B,OAAO,MAAM,CAAC;KACjB;;;;;;;IAMD,IAAI,CAAC,GAAG,eAAqC;QACzC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;KACzC;CAGJ;;;IAhCG,6BAA0B;;;;;;;ACL9B,MAAa,OAAQ,SAAQ,KAAmB;;;;;;;IAS5C,YAAoB,cAAoC;QACpD,KAAK,CAAC,GAAG,cAAc,CAAC,CAAC;;QAP7B,cAAS,GAAY,IAAI,CAAC;KAQzB;;;;;IAED,OAAO,MAAM;QACT,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC3C;;;;;;;IAMD,IAAI,CAAC,GAAG,cAAmC;QACvC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;KACxC;CAGJ;;;IAvBG,4BAA0B;;;;;;;ACL9B,MAKa,SAAS;;;IAgBlB;;QAbA,aAAQ,GAAW,yBAAyB,CAAC;QAC7C,uBAAkB,GAAY,IAAI,CAAC;QACnC,aAAQ,GAAW,wBAAwB,CAAC;QAC5C,mBAAc,GAAW,YAAY,CAAC;QAEtC,aAAQ,GAAa,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvC,WAAM,GAAY,EAAE,CAAC;;QACrB,YAAO,GAAY,OAAO,CAAC,MAAM,EAAE,CAAC;KAOnC;CAOJ;;;IArBG,6BAA6C;;IAC7C,uCAAmC;;IACnC,6BAA4C;;IAC5C,mCAAsC;;IAEtC,6BAAuC;;IACvC,2BAAqB;;IACrB,4BAAoC;;;;;;;ACfxC,MAMa,gBAAgB;;;;;;;IAOzB,YAAmB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;KACtC;;;YAXJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;YAJQ,SAAS;;;;;IAYF,qCAA2B;;;;;;;ACb3C,MAAa,sBAAsB;CAGlC;;;IAFG,8CAAqB;;IACrB,6CAAsB;;AAG1B,MAAa,eAAe;CAwB3B;;;IAtBG,oCAAyB;;IACzB,+BAA8C;;IAC9C,0CAA+B;;IAC/B,kCAA8B;;IAC9B,mCAA+B;;IAC/B,kCAAgB;;IAChB,yCAAuC;;IACvC,kCAAuB;;IACvB,2CAAgC;;IAChC,iDAA6C;;IAC7C,iCAAe;;IACf,qCAAmB;;IACnB,wCAAoC;;;;;IAKpC,2CAAgC;;;;;IAIhC,wCAA6B;;AAGjC,MAAa,qBAAsB,SAAQ,eAAe;CAEzD;;;IADG,0CAAkB;;AAGtB,MAAa,yBAA0B,SAAQ,eAAe;CAkD7D;;;IAjDG,yCAAuC;;IACvC,sDAA4C;;;;;AAqDhD,MAAa,0BAA2B,SAAQ,yBAAyB;CACxE;;;;;;AC3FD,MAEa,SAAU,SAAQ,0BAA0B;;;;;;;IAerD,OAAO,iBAAiB,CAAC,SAAoB;;YACrC,OAAO,GAAW,EAAE;QAExB,IAAI,SAAS,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,uCAAuC,CAAC,IAAI,CAAC;mBAClF,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,4BAA4B,CAAC,IAAI,CAAC,EAAE;gBAC/E,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACjC,OAAO,4DAA4D,CAAC;aACvE;YAED,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,+DAA+D,CAAC,IAAI,CAAC,EAAE;gBAC/G,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACjC,OAAO,iFAAiF,CAAC;aAC5F;YAED,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,qCAAqC,CAAC,IAAI,CAAC,EAAE;;;oBAEjF,cAAc,GAAG,SAAS,CAAC,cAAc;gBAC7C,IAAI,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,qCAAqC,CAAC,IAAI,CAAC,EAAE;;;wBAEhG,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,cAAc;oBAC5D,IAAI,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,qCAAqC,CAAC,IAAI,CAAC,EAAE;;;4BAE/G,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc;qBAC9E;iBACJ;gBACD,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACzB,OAAO,cAAc,CAAC,OAAO,CAAC;aACjC;YAED,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG,GAAG,CAAC;YAC5C,OAAO,OAAO,CAAC;SAClB;QAED,IAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAE;YAClC,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,GAAG,EAAE,CAAC;gBACb,SAAS,CAAC,QAAQ,CAAC,OAAO;;;;;gBAAC,CAAC,IAAI,EAAE,KAAK;oBACnC,IAAI,KAAK,GAAG,CAAC,EAAE;wBACX,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;qBAC7B;oBACD,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC;iBAC5B,EAAC,CAAC;gBACH,OAAO,OAAO,CAAC;aAClB;SACJ;QAED,IAAI,SAAS,CAAC,gBAAgB,KAAK,SAAS,IAAI,oBAAS,SAAS,CAAC,gBAAgB,IAAE,WAAW,EAAE,CAAC,OAAO,CAAC,qCAAqC,CAAC,GAAG,CAAC,EAAE;YACnJ,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC5D,OAAO,OAAO,CAAC;SAClB;QAED,IAAI,SAAS,CAAC,gBAAgB,KAAK,SAAS,IAAI,oBAAS,SAAS,CAAC,gBAAgB,IAAE,WAAW,EAAE,CAAC,OAAO,CAAC,qCAAqC,CAAC,IAAI,CAAC,EAAE;YACpJ,IAAI,SAAS,CAAC,cAAc,KAAK,SAAS,EAAE;gBACxC,IAAI,SAAS,CAAC,cAAc,CAAC,cAAc,KAAK,SAAS,EAAE;oBACvD,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,gBAAgB,GAAG,GAAG,CAAC;oBAC1F,OAAO,OAAO,CAAC;iBAClB;qBAAM;oBACH,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS,CAAC,cAAc,CAAC,gBAAgB,GAAG,GAAG,CAAC;oBAC3E,OAAO,OAAO,CAAC;iBAClB;aACJ;SACJ;;QAGD,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACzB,OAAO,GAAG,OAAO,GAAG,2HAA2H,GAAG,SAAS,CAAC;QAE5J,OAAO,OAAO,CAAC;KAClB;;;;;;IAGD,OAAO,gBAAgB,CAAC,QAAkC;;YAClD,SAAS,GAAG,SAAS,CAAC,eAAe,EAAE;;QAI3C,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YACjE,SAAS,GAAG,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5E;;;aAMI,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,SAAS,EAAE;YACvE,SAAS,GAAG,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;SAC9E;;;aAMI,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE;;gBAC/B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;aACpC;SACJ;;;aAMI,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI;eACvD,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,KAAK,IAAI;eACvF,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,cAAc,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,cAAc,KAAK,IAAI,EAAE;YAC1H,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;SAC7E;;;QAMD,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;QAC7B,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACnC,SAAS,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QAE3C,OAAO,SAAS,CAAC;KACpB;;;;;IAEO,OAAO,eAAe;;YACtB,SAAS,GAAc,IAAI,SAAS,EAAE;QAC1C,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,OAAO,SAAS,CAAC;KACpB;;;;;;;;;;;;;;;;;;;;;;;;IAwBO,OAAO,mBAAmB,CAAC,SAAoB,EAAE,IAAW;;YAC5D,CAAC,GAAG,CAAC;QACT,OAAO,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,SAAS,EAAE;YAC/B,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACtC,CAAC,EAAE,CAAC;SACP;QAED,OAAO,SAAS,CAAC;KACpB;CAcJ;;;IAtLG,yBAAa;;IACb,kCAAsB;;IACtB,6BAAmB;;IACnB,2BAA2B;;IAC3B,+BAA+B;;IAC/B,wBAAY;;;;;;;ACThB,MAGa,eAAe;;;;;;IAIxB,YAAY,aAA4B;QAcxC,cAAS,GAAW,EAAE,CAAC;QACvB,mBAAc,GAAW,EAAE,CAAC;;QAbxB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACtC;;;;;;;IAmBD,UAAU;QACN,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACrC;;;;;IAGD,WAAW;QACP,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACrC;;;;;IAGD,UAAU;KACT;;;;;IAGD,WAAW;KACV;;;;;IAEO,0BAA0B;QAC9B,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YACtE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACtF;KACJ;;;;;IAED,yBAAyB,CAAC,QAAoB;;;YAEtC,EAAU;QAEd,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB;;;QAAG;YACzD,YAAY,CAAC,EAAE,CAAC,CAAC;YACjB,EAAE,GAAG,UAAU;;;YAAC,QAAQ,QAAQ,EAAE,CAAC,EAAE,GAAE,EAAE,CAAC,CAAC;SAC9C,CAAA,CAAC,CAAC;KACN;;;;;IAED,wBAAwB,CAAC,KAAa;QAClC,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;;;;;IAED,4BAA4B,CAAC,KAAa;QACtC,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACnC,IAAI,KAAK,IAAI,SAAS,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACxC,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;;;;;IAED,mBAAmB,CAAC,KAAa;QAC7B,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5C,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;;;;;IAED,eAAe,CAAC,SAAiB,EAAE;QAC/B,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzK;;;;;IAID,cAAc;QACV,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B;;;;;;IAED,YAAY,CAAC,IAAa,EAAE,KAAc;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;KAC5C;;;;IAED,oBAAoB;QAChB,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;IAED,oBAAoB;QAChB,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;IAED,oBAAoB;QAChB,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;IAED,sBAAsB;QAClB,IAAI,CAAC,SAAS,GAAG,gHAAgH,CAAC;QAClI,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;IAED,8BAA8B;QAC1B,IAAI,CAAC,SAAS,GAAG,oHAAoH,CAAC;QACtI,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;;IAED,gBAAgB,CAAC,IAAY;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC;KAC9C;;;;;IAED,iBAAiB,CAAC,IAAY;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC;KAC/C;;;;IAED,uBAAuB;QACnB,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC;KAC/C;;;;;IAED,qBAAqB,CAAC,SAAoB;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC;KAC/C;CAKJ;;;IAvIG,wCAA6B;;IAE7B,8CAAgC;;IAEhC,oCAAuB;;IACvB,yCAA4B;;;;;;;ACtBhC,MAIa,KAAM,SAAQ,eAAe;;;;;;;;;;IAItC,YAAY,aAA4B,EAAE,IAAY,EAAE,KAAa,EAAE,WAAmB,EAAE,EAAE,QAAgB,GAAG;QAC7G,KAAK,CAAC,aAAa,CAAC,CAAC;;;;;;;;;QAqCzB,OAAE,GAAQ,EAAE,CAAC;;;QAIb,eAAU,GAAY,KAAK,CAAC;;QAG5B,kBAAa,GAAY,KAAK,CAAC;;QAG/B,UAAK,GAAY,KAAK,CAAC;;QAGvB,WAAM,GAAY,KAAK,CAAC;QAExB,eAAU,GAAW,UAAU,CAAC;QAOhC,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;QACzB,qBAAgB,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;QAEvC,gBAAW,GAAY,IAAI,CAAC;;;;QAsB5B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,IAAI,CAAC;QACvC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,IAAI,CAAC;QACvC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,IAAI,CAAC;QACvC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,sBAAiB,GAAY,KAAK,CAAC;QACnC,6BAAwB,GAAY,IAAI,CAAC;QACzC,oBAAe;;;QAAe,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAC;QAClE,wBAAmB,GAAW,EAAE,CAAC;QAEjC,uBAAkB,GAAY,KAAK,CAAC;QACpC,8BAAyB,GAAY,IAAI,CAAC;QAC1C,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,8BAAyB,GAAY,IAAI,CAAC;QAC1C,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,8BAAyB,GAAY,IAAI,CAAC;QAC1C,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,8BAAyB,GAAY,IAAI,CAAC;QAC1C,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,iBAAY,GAAY,KAAK,CAAC;QAC9B,wBAAmB,GAAY,IAAI,CAAC;QACpC,eAAU;;;QAAe,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAC;QACxD,mBAAc,GAAW,EAAE,CAAC;QAE5B,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,IAAI,CAAC;QACtC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QAE9B,qBAAgB,GAAY,KAAK,CAAC;QAClC,4BAAuB,GAAY,IAAI,CAAC;QACxC,mBAAc;;;QAAe,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAC;QAChE,uBAAkB,GAAW,EAAE,CAAC;QAEhC,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,IAAI,CAAC;QACvC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,IAAI,CAAC;QACtC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QAE9B,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,IAAI,CAAC;QACtC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QA5K1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC;QAEhD,IAAI,CAAC,aAAa,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;SAAE;QAC7G,IAAI,CAAC,IAAI,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;SAAE;QAC3F,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;SAAE;QAC3H,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;SAAE;QACpI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;SAAE;QAE1H,IAAI,KAAK,GAAG,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;SAAE;;;QAIpG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO;;;;;QAAC,CAAC,KAAK,EAAE,KAAK;YACtD,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACjG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aACtD;SACJ,EAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB;;;QAAC,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC,CAAC;QAClE,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;;;;IA4CD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;;IAED,IAAI,IAAI,CAAC,OAAe;QACpB,IAAI,OAAO,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;QAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;KACtC;;;;;;IAsGD,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;;IAED,UAAU,CAAC,IAAS;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;;;IAGD,YAAY,CAAC,KAAU;QACnB,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;KACzG;;;;;;;IAGD,YAAY,CAAC,KAAa,EAAE,KAAa;QACrC,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACpC,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACpC,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE;YAC7C,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;;;;;IAGD,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtD;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,GAAG,gFAAgF,CAAC,CAAC;SACtI;KACJ;;;;;IAGD,OAAO;QACH,OAAO,IAAI,CAAC;KACf;;;;;IAID,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,iBAAiB;QACb,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;KAC9G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,YAAY;QACR,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;KACzG;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;IAED,gBAAgB;QACZ,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;KAC7G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;;;;;;IAOD,QAAQ,CAAC,eAAuB,EAAE,IAAgB;QAC9C,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;;;;;;;;;;;KAWrD;;;;;IAEO,eAAe;QACnB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,WAAW,GAAG,EAAE,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,GAAG,EAAE,GAAG,CAAC,CAAC;;;KAInE;CACJ;;;;;;;;;IA9RG,mBAAa;;IAIb,2BAA4B;;IAG5B,8BAA+B;;IAG/B,sBAAuB;;IAGvB,uBAAwB;;IAExB,2BAAgC;;;;;IAEhC,6BAAiC;;IAEjC,mCAA2B;;IAC3B,wCAAgC;;IAEhC,sBAAmB;;IACnB,yBAAsB;;IACtB,sBAAyB;;IACzB,iCAAuC;;IAEvC,4BAA4B;;IAE5B,0BAAe;;;;;IAIf,sBAAsB;;IAgBtB,gCAAiC;;IACjC,uCAAuC;;IACvC,8BAA8D;;IAC9D,kCAA+B;;IAE/B,gCAAiC;;IACjC,uCAAuC;;IACvC,8BAA8D;;IAC9D,kCAA+B;;IAE/B,8BAA+B;;IAC/B,qCAAqC;;IACrC,4BAA0D;;IAC1D,gCAA6B;;IAE7B,gCAAiC;;IACjC,uCAAuC;;IACvC,8BAA8D;;IAC9D,kCAA+B;;IAE/B,kCAAmC;;IACnC,yCAAyC;;IACzC,gCAAkE;;IAClE,oCAAiC;;IAEjC,mCAAoC;;IACpC,0CAA0C;;IAC1C,iCAAoE;;IACpE,qCAAkC;;IAElC,mCAAoC;;IACpC,0CAA0C;;IAC1C,iCAAoE;;IACpE,qCAAkC;;IAElC,mCAAoC;;IACpC,0CAA0C;;IAC1C,iCAAoE;;IACpE,qCAAkC;;IAElC,mCAAoC;;IACpC,0CAA0C;;IAC1C,iCAAoE;;IACpE,qCAAkC;;IAElC,6BAA8B;;IAC9B,oCAAoC;;IACpC,2BAAwD;;IACxD,+BAA4B;;IAE5B,+BAAgC;;IAChC,sCAAsC;;IACtC,6BAA4D;;IAC5D,iCAA8B;;IAE9B,iCAAkC;;IAClC,wCAAwC;;IACxC,+BAAgE;;IAChE,mCAAgC;;IAEhC,8BAA+B;;IAC/B,qCAAqC;;IACrC,4BAA0D;;IAC1D,gCAA6B;;IAE7B,gCAAiC;;IACjC,uCAAuC;;IACvC,8BAA8D;;IAC9D,kCAA+B;;IAE/B,+BAAgC;;IAChC,sCAAsC;;IACtC,6BAA4D;;IAC5D,iCAA8B;;IAE9B,8BAA+B;;IAC/B,qCAAqC;;IACrC,4BAA0D;;IAC1D,gCAA6B;;IAE7B,8BAA+B;;IAC/B,qCAAqC;;IACrC,4BAA0D;;IAC1D,gCAA6B;;IAE7B,+BAAgC;;IAChC,sCAAsC;;IACtC,6BAA4D;;IAC5D,iCAA8B;;;;;;;ACrLlC,MAIa,UAAW,SAAQ,eAAe;;;;;;IAI3C,YAAY,aAA4B;QACpC,KAAK,CAAC,aAAa,CAAC,CAAC;QAmBzB,WAAM,GAAiB,IAAI,KAAK,EAAS,CAAC;QAjBtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAExE,IAAI,CAAC,yBAAyB;;;QAAC,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC,CAAC;QAErE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;;;;;;;IAkBD,yBAAyB,CAAC,IAAwB;;YAC1C,aAAa,GAAY,KAAK;QAElC,IAAI,CAAC,MAAM,CAAC,OAAO;;;;QAAC,CAAC,KAAK;YACtB,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;;gBAEtD,KAAK,CAAC,UAAU,EAAE,CAAC;gBACnB,aAAa,GAAG,IAAI,CAAC;gBACrB,OAAO;aACV;SACJ,EAAC,CAAC;KACN;;;;;IAED,kBAAkB,CAAC,IAAwB;;YACnC,mBAAmB,GAAY,KAAK;QACxC,IAAI,CAAC,MAAM,CAAC,OAAO;;;;QAAC,CAAC,KAAK;YACtB,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;;gBAEtD,KAAK,CAAC,UAAU,EAAE,CAAC;gBACnB,mBAAmB,GAAG,IAAI,CAAC;gBAC3B,OAAO;aACV;SACJ,EAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE;;YAEtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;;SAEtE;KACJ;;;;;IAED,aAAa,CAAC,IAAY;QACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;;IAED,QAAQ,CAAC,IAAY,EAAE,aAAqB,EAAE;QAC1C,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;QAC7B,IAAI,UAAU,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;;YAC/B,aAAa,GAAgB,IAAI;QAErC,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;;QAGnE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;;QAItC,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,EAAE;YAAE,OAAO;SAAE;QAElD,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YAC1C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;gBACnD,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACxE;YAED,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YACxF,IAAI,aAAa,KAAK,IAAI,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,gIAAgI,CAAC,CAAC;aACrJ;SACJ;;;QAMD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;;QAM5B,IAAI,CAAC,MAAM,CAAC,OAAO;;;;QAAC,CAAC,KAAK;;YAEtB,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACtC,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,IAAI,GAAG,4CAA4C,CAAC,CAAC;aAClG;SACJ,EAAC,CAAC;;;;YAMC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;QAMxB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU;;;YAAC;;oBAC9B,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC,kBAAkB,CAAC;;oBAElG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;;;gBAI9B,IAAI,iBAAiB,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,oBAAM,iBAAiB,CAAC,CAAC,CAAC,IAAE,UAAU,KAAK,SAAS,EAAE;;wBACxF,EAAE,GAAG,oBAAM,iBAAiB,CAAC,CAAC,CAAC,IAAE,UAAU,GAAG,EAAE;oBACpD,aAAa,CAAC,UAAU,GAAG,EAAE,CAAC;iBACjC;aACJ,GAAE,GAAG,CAAC,CAAC;SACX;;QAID,OAAO,KAAK,CAAC;KAChB;;;;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;;;;;IAED,SAAS,CAAC,IAAY;;QAElB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;YAEtB,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;;;;QAAC,CAAC,KAAK,EAAE,KAAK;YAC1C,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC3B,OAAO,IAAI,CAAC;aACf;SACJ,EAAC;QAEF,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,KAAK,IAAI,EAAE;YACjE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YAC3C,SAAS,GAAG,IAAI,CAAC;SACpB;QAED,IAAI,CAAC,SAAS,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,IAAI,GAAG,6DAA6D,CAAC,CAAC;SAC7H;QAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;;;;;IAED,UAAU,CAAC,KAAa;QACpB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,KAAK,GAAG,uCAAuC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,eAAe,CAAC,CAAC;SACtI;QAED,IAAI,KAAK,KAAK,CAAC,EAAE;YAAE,KAAK,GAAG,CAAC,CAAC;SAAE;QAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;;;;IAED,cAAc;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;;;;;IAED,UAAU,CAAC,IAAY;QACnB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,IAAI,IAAI,KAAK,EAAE,EAAE;YACb,OAAO;SACV;;YACG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;;;;QAAC,CAAC,KAAK,EAAE,KAAK;;YAE1C,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;gBAC/B,OAAO,IAAI,CAAC;aACf;SACJ,EAAC;QACF,IAAI,CAAC,SAAS,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,IAAI,GAAG,6DAA6D,CAAC,CAAC;SAC9H;KACJ;;;;IAED,sBAAsB;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC3C;oBACI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC7C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;iBACjE;aACJ;SACJ;KACJ;;;;IAED,YAAY;QACR,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;SAClE;KACJ;;;;;IAGD,KAAK;;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,4BAA4B,EAAE,CAAC;KACvC;;;;;IAID,kBAAkB;QACd,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAC1E,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;SAClG;KACJ;CACJ;;;;;;IAzNG,kCAAkC;;;;;IAElC,sCAAqC;;;;;IACrC,kDAAiD;;;;;IACjD,kDAAiD;;IAEjD,4BAA0C;;;;;;;AC5B9C,MAOa,gBAAiB,SAAQ,eAAe;;;;;;IAIjD,YAAY,aAA4B;QACpC,KAAK,CAAC,aAAa,CAAC,CAAC;;;QAYzB,SAAI,GAAW,EAAE,CAAC;QAClB,kBAAa,GAAW,CAAC,CAAC;QAIlB,WAAM,GAAW,GAAG,CAAC;QASrB,qBAAgB,GAAW,SAAS,CAAC;QAxBzC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;QAEhF,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,yBAAyB;;;QAAC,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC,CAAC;KACxE;;;;IAYD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;IACD,IAAI,KAAK,CAAC,KAAa;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;IAGD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAChC;;;;;IACD,IAAI,eAAe,CAAC,KAAa;QAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;;;IAMD,IAAI;;QAEA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;SAAE;QAAA,CAAC;QAEpF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;;KAEtD;;;;;IAED,IAAI,CAAC,QAAgB,GAAG;QACpB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAA;SAAE;QAAA,CAAC;QAE5F,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAA;;QAElD,IAAI,CAAC,QAAQ,EAAE,CAAC;KACnB;;;;;IAGD,MAAM;QACF,OAAO,IAAI,CAAC;KACf;;;;;IAGD,MAAM;KACL;;;;;IAGD,QAAQ;KACP;;;;;IAEO,kBAAkB;QACtB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;QAEhF,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACnE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC;QAC1D,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAE7F,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;SACnC;KACJ;CAGJ;;;IApFG,gCAAkB;;IAClB,yCAA0B;;;;;IAE1B,4CAAsC;;;;;IAEtC,kCAA6B;;;;;IAS7B,4CAA6C;;;;;;;AC1CjD,MAAa,WAAW;;;;;;;IAGpB,YAAY,QAAgB,EAAE,YAAoB,EAAE,EAAE,WAAmB,EAAE;QACvE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;IASD,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;IACD,IAAI,SAAS,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;KACvE;;;;IAKD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IACD,IAAI,QAAQ,CAAC,KAAa;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;KACvE;;;;IAKD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;IACD,IAAI,IAAI,CAAC,KAAa;QAClB,MAAM,IAAI,KAAK,CAAC,0GAA0G,CAAC,CAAC;KAC/H;CAOJ;;;;;;IAnCG,iCAA2B;;;;;IAW3B,gCAA0B;;;;;IAW1B,4BAAsB;;IAStB,+BAAiB;;IACjB,mCAAqB;;;;;;;AC7CzB,MAQa,UAAW,SAAQ,eAAe;;;;;;IAI3C,YAAY,aAA4B;QACpC,KAAK,CAAC,aAAa,CAAC,CAAC;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACrE;CASJ;;;IAHG,iCAAgC;;;;;;;;;ICtBhC,QAAK;IACL,OAAI;IACJ,SAAM;IACN,WAAQ;;;;;;;;;;;ACLZ,MAEaA,UAAQ;;;;;;;IAGjB,YAAmB,SAAoB,EAAS,KAAa,EAAS,MAAc;QAAjE,cAAS,GAAT,SAAS,CAAW;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;KACnF;;;;;;IAMD,OAAO,YAAY;;YACX,SAAS,GAAG,KAAK,EAAY;QAEjC,SAAS,CAAC,IAAI,CAAC,IAAIA,UAAQ,CAACC,WAAS,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACtD,SAAS,CAAC,IAAI,CAAC,IAAID,UAAQ,CAACC,WAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACtD,SAAS,CAAC,IAAI,CAAC,IAAID,UAAQ,CAACC,WAAS,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QACzD,SAAS,CAAC,IAAI,CAAC,IAAID,UAAQ,CAACC,WAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAE3D,OAAO,SAAS,CAAC;KACpB;CAGJ;;;IAnBeD,+BAA2B;;IAAEA,2BAAoB;;IAAEA,4BAAqB;;;;;;;ACJxF,MAGaE,OAAK;IAAlB;;;QAGI,cAAS,GAAY,IAAI,CAAC;QAC1B,UAAK,GAAe,IAAI,KAAK,EAAO,CAAC;QACrC,kBAAa,GAAY,KAAK,CAAC;QAC/B,sBAAiB,GAAY,IAAI,CAAC;;QAE1B,cAAS,GAAGF,UAAQ,CAAC,YAAY,EAAE,CAAC;QACpC,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAW,CAAC,CAAC;QACpB,oBAAe,GAAW,CAAC,CAAC;;KAgCvC;;;;;;;IA1BG,OAAO,CAAC,IAAU;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;;YACtB,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAGC,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC;QAEhC,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE;YACxC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtB,OAAO,IAAI,CAAC;KACf;CAGJ;;;IAxCGC,4BAA0B;;IAC1BA,wBAAqC;;IACrCA,gCAA+B;;IAC/BA,oCAAkC;;;;;IAElCA,4BAA4C;;;;;IAC5CA,2BAA6B;;;;;IAC7BA,0BAA4B;;;;;IAC5BA,kCAAoC;;;;;;;ACdxC,MAGa,UAAW,SAAQ,eAAe;;;;;;IAI3C,YAAY,aAA4B;QACpC,KAAK,CAAC,aAAa,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAIA,OAAK,EAAE,CAAC;KAC5B;CASJ;;;IAHG,2BAAa;;;;;;;ACfjB,MAMa,QAAS,SAAQ,eAAe;;;;;;;;IAczC,YAAY,aAA4B,EAAE,KAAa;QACnD,KAAK,CAAC,aAAa,CAAC,CAAC;QAXzB,cAAS,GAAY,IAAI,CAAC;QAYtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEnC,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACxD;CAGJ;;;IArBG,yBAAc;;IACd,6BAA0B;;IAE1B,8BAAuB;;IACvB,8BAAuB;;;;;;;ACZ3B,MAQa,aAAa;;;IAItB;;QAuBA,cAAS,GAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QA2B1D,aAAQ,GAAa,IAAI,QAAQ,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;;;;;;;;;;QApCnE,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;KACtD;CA4DJ;;;IAtDG,mCAAuB;;IACvB,kCAA0D;;IAC1D,mCAAwC;;IAyBxC,oCAAyB;;IACzB,iCAAuE;;IACvE,mCAAuB;;IACvB,yCAAmC;;IAMnC,iCAAc;;IAMd,kCAAe;;IACf,8BAAW;;IACX,qCAAkB;;IAClB,2BAAQ;;IACR,mCAAgB;;IAChB,gCAAa;;IACb,iCAAc;;IACd,mCAAgB;;;;;;;ACtFpB,MAaa,YAAY;;;;;;;;;IASrB,YAAoB,gBAAkC,EAAU,MAAc,EAAU,aAA4B,EAAU,UAAsB;;QAAhI,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,eAAU,GAAV,UAAU,CAAY;;QANpJ,YAAO,GAAW,CAAC,CAAC;QAShB,IAAI,CAAC,MAAM,CAAC,MAAM;aACb,IAAI;;;;QAID,MAAM;;;;QAAC,CAAC,KAAa;YACjB,QAAQ,KAAK,YAAY,eAAe,EAAE;SAC7C,EAAC,CACL;aACA,SAAS;;;;QACN,CAAC,KAAwB;;;YAIrB,IAAI,KAAK,YAAY,eAAe,EAAE;;gBAElC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;gBACvC,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;aAChD;YAED,OAAO,CAAC,QAAQ,EAAE,CAAC;SACtB,EAAC,CAAC;;KAGd;;;;;;;;IASD,UAAU,CAAC,YAAoB;;YACvB,iBAAiB,GAAG,KAAK;;QAG7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO;;;;QAAC,CAAC,WAAW;;;YAGnC,IAAI,WAAW,CAAC,IAAI,KAAK,YAAY,IAAI,CAAC,iBAAiB,EAAE;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;;;sBAC1B,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO;gBACvC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,oBAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAU,CAAC;gBAC5E,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC;;gBAG9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,QAAQ,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;gBAGpE,iBAAiB,GAAG,IAAI,CAAC;aAC5B;SACJ,EAAC,CAAC;;QAGH,IAAI,CAAC,iBAAiB,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;aAC9D;iBAAM;gBACH,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;aAC7D;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;aACjE;YAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC;SAC9C;KACJ;;;;;;;;;;;;;;IAaO,0BAA0B,CAAC,KAAsB;;;;;;cAK/C,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;;cACrC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;;;;QAItD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO;;;;QAAC,CAAC,MAAM;YAC9B,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK;mBACjB,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;gBAChC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;gBACxB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,oBAAC,EAAE,OAAO,EAAE,OAAO,EAAE,GAAU,CAAC;aAC9E;SACJ,EAAC,CAAC;;;KAGN;;;;;;;IAKO,gCAAgC,CAAC,KAAsB;;;;;;;QAO3D,IAAI,KAAK,CAAC,aAAa,EAAE;YACrB,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAA;gBACxD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;gBAE1D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;aACjE;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;gBAClC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;aAChD;SACJ;KACJ;;;YA5IJ,UAAU;;;;YANF,gBAAgB;YALhB,MAAM;YASN,aAAa;YALb,UAAU;;;;IAWf,+BAAoB;;;;;IAMR,wCAA0C;;;;;IAAE,8BAAsB;;;;;IAAE,qCAAoC;;;;;IAAE,kCAA8B;;;;;;;;AClBxJ,MAAa,eAAe;;;;;;;IASxB,OAAO,WAAW,CAAC,QAAkB;QACjC,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACvC;;;;IAED,OAAO,WAAW;QACd,OAAO,eAAe,CAAC,QAAQ,CAAC;KACnC;;;AAZc,wBAAQ,GAAa,IAAI,CAAC;;;;;;IAAzC,yBAAyC;;;;;;;ACP7C,MAWa,UAAU;;;;;;;;IAInB,YACW,gBAAkC,EAClC,YAA0B,EACjC,QAAkB;QAFX,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAGjC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACzC;;;YAbJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;YANQ,gBAAgB;YAChB,YAAY;YALA,QAAQ;;;;;IAyBzB,mCAA6B;;IATzB,sCAAyC;;IACzC,kCAAiC;;;;;;;;;ACdzC,MAAaC,iBAAe;;;;;;IAUxB;KACC;;;;;;;IAMD,UAAU;KACT;;;;;IAGD,WAAW;KACV;CAGJ;;;;;;AC5BD,MAAa,QAAQ;IAArB;;;QAMY,gBAAW,GAAW,CAAC,CAAC;;QAChC,kBAAa,GAAW,CAAC,CAAC;;KA2B7B;;;;;;;;IArBG,gBAAgB,CAAC,aAAqB;QAClC,IAAI,CAAC,wBAAwB,GAAG,aAAa,CAAC,WAAW,CAAC;QAC1D,IAAI,CAAC,uBAAuB,GAAG,aAAa,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC;KACzE;;;;;IAED,cAAc,CAAC,MAAc;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC;KACzE;;;;IAED,GAAG;QACC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;QAC1E,OAAO,CAAC,GAAG,CAAC,4BAA4B,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;QACxE,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,QAAQ,EAAE,CAAC;KACtB;CAGJ;;;IA/BG,4CAAiC;;IACjC,2CAAgC;;;;;IAEhC,+BAAgC;;IAChC,iCAA0B;;;;;;;;;;;;ACK9B,SAAS,SAAS;IACd,OAAO,MAAM,CAAC;CACjB;;AAOD,MAAa,cAAc;;;IAevB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEnD,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;;;;;;;;;;;KAWjE;;;;;IA5BD,IAAI,aAAa;QACb,OAAO,SAAS,EAAE,CAAC;KACtB;;;YARJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;IAQG,kCAA2B;;IAE3B,kCAA+B;;;;;;;AC3BnC,MAOaC,OAAM,SAAQD,iBAAe;;;;;;;;;;;IA2ItC,YAAY,OAAe,EAAE,EAAE,QAAgB,EAAE,EAAE,WAAmB,EAAE,EAAE,QAAgB,GAAG;QACzF,KAAK,EAAE,CAAC;QAxIZ,aAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;;QAG5B,aAAQ,GAAW,EAAE,CAAC;;;;;;QAY9B,OAAE,GAAQ,EAAE,CAAC;QAIb,eAAU,GAAW,UAAU,CAAC;QAOhC,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAG,GAAG,CAAC;QACZ,qBAAgB,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;QAEvC,WAAM,GAAG,GAAG,CAAC;QAEb,gBAAW,GAAY,IAAI,CAAC;;;QAoB5B,oBAAe,GAAY,KAAK,CAAC;QACjC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,oBAAe,GAAY,KAAK,CAAC;QACjC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,IAAI,CAAC;QACvC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,sBAAiB,GAAY,KAAK,CAAC;QACnC,oBAAe;;;QAAe,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAC;QAClE,wBAAmB,GAAW,EAAE,CAAC;QAEjC,uBAAkB,GAAY,KAAK,CAAC;QACpC,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,uBAAkB,GAAY,KAAK,CAAC;QACpC,qBAAgB;;;QAAe,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAC;QACpE,yBAAoB,GAAW,EAAE,CAAC;QAElC,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU;;;QAAe,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAC;QACxD,mBAAc,GAAW,EAAE,CAAC;QAE5B,mBAAc,GAAY,KAAK,CAAC;QAChC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QAE9B,qBAAgB,GAAY,KAAK,CAAC;QAClC,mBAAc;;;QAAe,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAC;QAChE,uBAAkB,GAAW,EAAE,CAAC;QAEhC,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAY,IAAI,CAAC;QACrC,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAY,KAAK,CAAC;QACjC,kBAAa;;;QAAe,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAC;QAC9D,sBAAiB,GAAW,EAAE,CAAC;QAE/B,mBAAc,GAAY,KAAK,CAAC;QAChC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QAE9B,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW;;;QAAe,QAAQ,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAC;QAC1D,oBAAe,GAAW,EAAE,CAAC;QAE7B,mBAAc,GAAY,KAAK,CAAC;QAChC,iBAAY;;;QAAe,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAC;QAC5D,qBAAgB,GAAW,EAAE,CAAC;QAW1B,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS;;;;QAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAC,CAAC;QAE/E,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC;;QAGhD,IAAI,CAAC,IAAI,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;SAAE;QAC3F,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;SAAE;QAC3H,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;SAAE;QACpI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;SAAE;QAE1H,IAAI,KAAK,GAAG,EAAE,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;SAAE;;;;;;;;;QAWpG,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;;;;IAjKD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;IACD,IAAI,OAAO,CAAC,OAAe;QACvB,IAAI,OAAO,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;QAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;KACzC;;;;IA8BD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;;IAED,IAAI,IAAI,CAAC,OAAe;QACpB,IAAI,OAAO,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;QAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;KACtC;;;;;;IA4HD,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KAC3B;;;;;;IAMD,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;;IAED,UAAU,CAAC,IAAS;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;;;IAGD,YAAY,CAAC,KAAU;QACnB,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;KACzG;;;;;;;IAGD,YAAY,CAAC,KAAa,EAAE,KAAa;QACrC,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACpC,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACpC,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE;YAC7C,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;;;;;IAGD,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;;;;;;KAOJ;;;;;IAGD,OAAO;QACH,OAAO,IAAI,CAAC;KACf;;;;;;;;;;;;;;;;;IAiBD,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,iBAAiB;QACb,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;KAC9G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,kBAAkB;QACd,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;KAC/G;;;;IAED,YAAY;QACR,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;KACzG;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;IAED,gBAAgB;QACZ,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;KAC7G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,eAAe;QACX,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;KAC5G;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;KAC1G;;;;IAED,cAAc;QACV,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;KAC3G;;;;;;;;IAQO,eAAe;;QAEnB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,GAAG,EAAE,GAAG,CAAC,CAAC;;;KAInE;CAGJ;;;;;;IArUGC,iCAAuC;;IACvCA,2BAAoC;;;;;IAGpCA,2BAA8B;;;;;;;IAY9BA,qBAAa;;IAEbA,4BAAqB;;IAErBA,6BAAgC;;;;;IAEhCA,+BAAiC;;IAEjCA,qCAA2B;;IAC3BA,0CAAgC;;IAEhCA,wBAAmB;;IACnBA,2BAAsB;;IACtBA,wBAAY;;IACZA,mCAAuC;;IAEvCA,yBAAa;;IAEbA,8BAA4B;;IAE5BA,4BAAe;;;;;IAIfA,wBAAsB;;IActBA,kCAAiC;;IACjCA,gCAA8D;;IAC9DA,oCAA+B;;IAE/BA,kCAAiC;;IACjCA,gCAA8D;;IAC9DA,oCAA+B;;IAE/BA,gCAA+B;;IAC/BA,uCAAqC;;IACrCA,8BAA0D;;IAC1DA,kCAA6B;;IAE7BA,kCAAiC;;IACjCA,yCAAuC;;IACvCA,gCAA8D;;IAC9DA,oCAA+B;;IAE/BA,oCAAmC;;IACnCA,kCAAkE;;IAClEA,sCAAiC;;IAEjCA,qCAAoC;;IACpCA,mCAAoE;;IACpEA,uCAAkC;;IAElCA,qCAAoC;;IACpCA,mCAAoE;;IACpEA,uCAAkC;;IAElCA,qCAAoC;;IACpCA,mCAAoE;;IACpEA,uCAAkC;;IAElCA,qCAAoC;;IACpCA,mCAAoE;;IACpEA,uCAAkC;;IAElCA,+BAA8B;;IAC9BA,6BAAwD;;IACxDA,iCAA4B;;IAE5BA,iCAAgC;;IAChCA,+BAA4D;;IAC5DA,mCAA8B;;IAE9BA,mCAAkC;;IAClCA,iCAAgE;;IAChEA,qCAAgC;;IAEhCA,gCAA+B;;IAC/BA,uCAAqC;;IACrCA,8BAA0D;;IAC1DA,kCAA6B;;IAE7BA,kCAAiC;;IACjCA,gCAA8D;;IAC9DA,oCAA+B;;IAE/BA,iCAAgC;;IAChCA,+BAA4D;;IAC5DA,mCAA8B;;IAE9BA,gCAA+B;;IAC/BA,8BAA0D;;IAC1DA,kCAA6B;;IAE7BA,gCAA+B;;IAC/BA,8BAA0D;;IAC1DA,kCAA6B;;IAE7BA,iCAAgC;;IAChCA,+BAA4D;;IAC5DA,mCAA8B;;;;;;;MCzIrB,IAAI;;;;IAeb,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;;IAGD,IAAI,SAAS,CAAC,YAAoB;QAC9B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;KAChD;;;;;;;;IAOD,YAAY,KAAa,EAAE,SAAiB;;QAGxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;KACpC;;;;;;IAMD,OAAO;;KAEN;CAOJ;;;IA7CG,qBAAc;;IACd,wBAAiB;;IAEjB,wBAAoB;;IACpB,oBAAa;;IAEb,oBAAa;;IACb,mBAAY;;;;;IAEZ,0BAA2B;;;;;;;MCdlB,aAAc,SAAQ,IAAI;;;;;;;;;;;;IASnC,YAAmB,KAAa,EAAS,UAAkB,EAAS,WAAmB,EAAE,EAAS,YAAoB,EAAE,EAAS,YAAoB,EAAE;QACnJ,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QADV,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,cAAS,GAAT,SAAS,CAAa;QAAS,cAAS,GAAT,SAAS,CAAa;KAEtJ;CAOJ;;;IATe,8BAAoB;;IAAE,mCAAyB;;IAAE,iCAA4B;;IAAE,kCAA6B;;IAAE,kCAA6B;;;;;;;ACZ3J,MAAa,YAAY;;;;;;;;;IAOrB,YAAmB,KAAa,EAAS,UAAkB,EAAS,YAAoB,IAAI;QAAzE,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAe;KAC3F;CAOJ;;;IARe,6BAAoB;;IAAE,kCAAyB;;IAAE,iCAA+B;;;;;;;ACNhG,MAGaC,MAAI;;;;;;;IAGb,YAAY,KAAa,EAAE,SAAiB,EAAE,aAA4B;QACtE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAGJ,WAAS,CAAC,MAAM,CAAC;KACpC;;;;;IAaD,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;;IAED,IAAI,SAAS,CAAC,YAAoB;QAC9B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;KAChD;;;;;;;IAiBD,OAAO;QACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACzE;CAGJ;;;IApCGI,+BAA6B;;IAE7BA,uBAAc;;IACdA,0BAAiB;;;;;IAWjBA,4BAA2B;;IAI3BA,0BAAoB;;IACpBA,sBAAa;;IAEbA,sBAAa;;IACbA,qBAAY;;IACZA,uBAAc;;IACdA,sBAAa;;;;;;;AC3CjB;;;AAUA,yBAEC;;;;AAED,wBAMC;;;;;;;;;;;;;AAOD,MAAa,YAAY;;;;;IA6BrB,YAAmB,UAAsB,EAAU,MAAc;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QA5BxD,eAAU,GAAG;YAClB,YAAY;YACZ,mBAAmB;YACnB,oBAAoB;YACpB,oBAAoB;YACpB,cAAc;SACjB,CAAC;QAEO,WAAM,GAAe;YAC1B,OAAO,EAAE;gBACL,gBAAgB,EAAE,MAAM;gBACxB,2BAA2B,EAAE,SAAS;gBACtC,qBAAqB,EAAE,MAAM;gBAC7B,oCAAoC,EAAE,SAAS;gBAC/C,mCAAmC,EAAE,SAAS;aACjD;YACD,OAAO,EAAE;gBACL,gBAAgB,EAAE,SAAS;gBAC3B,2BAA2B,EAAE,SAAS;gBACtC,qBAAqB,EAAE,SAAS;gBAChC,oCAAoC,EAAE,SAAS;gBAC/C,mCAAmC,EAAE,SAAS;aACjD;SACJ,CAAC;QAGF,kBAAa,GAAc,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAG5C,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEnE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;KACtD;;;;IAED,QAAQ;QACJ,UAAU;;;QAAC,QAAQ,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC,EAAE,GAAE,GAAG,CAAC,CAAC;;;;QAKlG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO;;;;QAAC,CAAC,IAAI;;gBACzD,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAIA,MAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1H,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjC,EAAC,CAAC;KACN;;;;;IAED,QAAQ,CAAC,UAAkB;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAChD;;;YAzDJ,SAAS,SAAC;gBACP,QAAQ,EAAE,sBAAsB;gBAChC,89DAAmC;;aAEtC;;;;YAvBQ,UAAU;YAFV,MAAM;;;;IA2BX,kCAME;;IAEF,8BAeE;;IAEF,qCAA6B;;IAC7B,qCAAgD;;IAEpC,kCAA6B;;;;;IAAE,8BAAsB;;;;;;;ACxDrE,MAUa,cAAe,SAAQ,KAAK;;;;IACrC,YAAY,aAA4B;QACpC,KAAK,CAAC,aAAa,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAA;KAC9C;;;;IAED,QAAQ;KACP;;;YAXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,8p3BAAqC;;aAExC;;;;YANQ,aAAa;;;;;;;ACHtB,MAOa,aAAa;IAEtB,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAVJ,SAAS,SAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,ykFAAoC;;aAEvC;;;;;;;;;ACND,MAOa,YAAY;IACrB,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YATJ,SAAS,SAAC;gBACP,QAAQ,EAAE,SAAS;gBACnB,oxCAAmC;;aAEtC;;;;;;;;;ACND,MAea,iBAAiB;;;;;;;IAG1B,YAAmB,UAAsB,EAAS,aAA4B,EAAS,MAAc;QAAlF,eAAU,GAAV,UAAU,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QACjG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEnE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;KACtD;;;;;;IAMD,QAAQ;QACJ,UAAU;;;QAAC,QAAQ,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC,EAAE,GAAE,GAAG,CAAC,CAAC;;;;QAKlG,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAChE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO;;;;YAAC,CAAC,IAAI;;oBACzD,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAIA,MAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC1H,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aACjC,EAAC,CAAC;SACN;KACJ;;;;;;;IAMD,UAAU,CAAC,UAAU;QACjB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KACvD;;;YAxCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,s6GAAwC;;aAE3C;;;;YAXQ,UAAU;YAEV,aAAa;YAJb,MAAM;;;;IAiBC,uCAA6B;;IAAE,0CAAmC;;IAAE,mCAAqB;;;;;;;AClBzG,MAOa,qBAAqB;IAChC,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YATF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,waAA8C;;aAE/C;;;;;;;;;ACND;MAOM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,iBAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,qBAAqB,EAAE;CACnD;AAUD,MAAa,gBAAgB;;;YAR5B,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC/B;gBACD,OAAO,EAAE;oBACL,YAAY;iBACf;aACJ;;;;;;;ACpBD;AASA,MAAa,qBAAqB;;IAE9B,iBAA0D;;;;IAE1D,QAAQ;KACP;;;YAVJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,0QAA6C;;aAEhD;;;;;;;;;ACRD;;;;;;;AAiBA,MAAa,0BAA0B;;;;;;;;;;IAUnC,YACY,cAAsC,EACtC,QAA0B,EAC1B,QAAkC,EAClC,cAAiC,EACjC,MAAc;QAJd,mBAAc,GAAd,cAAc,CAAwB;QACtC,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAA0B;QAClC,mBAAc,GAAd,cAAc,CAAmB;QACjC,WAAM,GAAN,MAAM,CAAQ;KACrB;;;;;;IAML,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAClH,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;;IAED,WAAW;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;SAC7B;KACJ;;;YAnCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,QAAQ;aACrB;;;;YAf8B,sBAAsB;YADmB,gBAAgB;YAA1C,wBAAwB;YAAoB,iBAAiB;YAClG,MAAM;;;mBAoBV,KAAK;;;;IADN,4CAA4B;;IAC5B,0CAA6B;;;;;IAOzB,oDAA8C;;;;;IAC9C,8CAAkC;;;;;IAClC,8CAA0C;;;;;IAC1C,oDAAyC;;;;;IACzC,4CAAsB;;;;;;;AC/B9B,MAKa,gBAAgB;;;;IAGzB,YAAoB,EAA2B;QAA3B,OAAE,GAAF,EAAE,CAAyB;KAC9C;;;;IAED,WAAW;QACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO;;;;QAAC,IAAI;YAChC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACxE,EAAC,CAAC;KACN;;;YAbJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;aACxB;;;;YAJmB,UAAU;;;oBAMzB,KAAK,SAAC,SAAS;;;;IAAhB,iCAAoD;;;;;IAExC,8BAAmC;;;;;;;ACTnD,MA6Da,wBAAwB;;;;IACjC,YAAoC,YAAsC;QACtE,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CACX,yEAAyE,CAAC,CAAC;SAClF;KACJ;;;;;IAED,OAAO,OAAO,CAAC,SAAoB;QAC/B,OAAO;YACH,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE;aAC9C;SACJ,CAAC;KACL;;;YApDJ,QAAQ,SAAC;gBACN,YAAY,EAAE;;oBAEV,iBAAiB;oBACjB,qBAAqB;oBACrB,qBAAqB;oBACrB,YAAY;oBACZ,YAAY;oBACZ,aAAa;oBACb,cAAc;;oBAEd,0BAA0B;oBAC1B,gBAAgB;iBACnB;gBACD,SAAS,EAAE;oBACP,aAAa;oBACb,YAAY;oBACZ,cAAc;iBACjB;gBACD,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;oBACX,gBAAgB;iBACnB;gBACD,OAAO,EAAE;;oBAEL,YAAY;oBACZ,qBAAqB;oBACrB,qBAAqB;oBACrB,YAAY;oBACZ,aAAa;oBACb,cAAc;;oBAEd,0BAA0B;oBAC1B,gBAAgB;iBACnB;aACJ;;;;YAEqD,wBAAwB,uBAA7D,QAAQ,YAAI,QAAQ;;;;;;;;;;;;;;;"}