{"version":3,"file":"angular-portal-azure.umd.js","sources":["ng://angular-portal-azure/lib/domain/dashboard/tile/tile-sizes.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tile-size.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tiles.ts","ng://angular-portal-azure/lib/domain/dashboard/appboard/appboard.ts","ng://angular-portal-azure/lib/domain/sidebar/sidebar.ts","ng://angular-portal-azure/lib/domain/app-config.ts","ng://angular-portal-azure/lib/service/app-config/app-config.service.ts","ng://angular-portal-azure/lib/service/blade/blade.service.ts","ng://angular-portal-azure/lib/service/injector/injector.service.ts","ng://angular-portal-azure/lib/service/app/app.service.ts","ng://angular-portal-azure/lib/domain/base/user-control-base.ts","ng://angular-portal-azure/lib/service/browser/viewport.ts","ng://angular-portal-azure/lib/service/browser/browser.service.ts","ng://angular-portal-azure/lib/domain/blade/blade.ts","ng://angular-portal-azure/lib/domain/dashboard/tile/tile.ts","ng://angular-portal-azure/lib/domain/dashboard/appboard/appboard-entry.ts","ng://angular-portal-azure/lib/domain/sidebar/sidebar-entry.ts","ng://angular-portal-azure/lib/domain/exception-dot-net.ts","ng://angular-portal-azure/lib/domain/exception.ts","ng://angular-portal-azure/lib/domain/user-control-base.ts","ng://angular-portal-azure/lib/domain/blade.ts","ng://angular-portal-azure/lib/domain/area-blades.ts","ng://angular-portal-azure/lib/domain/area-notification.ts","ng://angular-portal-azure/lib/domain/user-account.ts","ng://angular-portal-azure/lib/domain/avatar-menu.ts","ng://angular-portal-azure/lib/domain/tile-sizes.ts","ng://angular-portal-azure/lib/domain/tile-size.ts","ng://angular-portal-azure/lib/domain/tiles.ts","ng://angular-portal-azure/lib/domain/startboard.ts","ng://angular-portal-azure/lib/domain/panorama.ts","ng://angular-portal-azure/lib/domain/portal-service.ts","ng://angular-portal-azure/lib/domain/tile.ts","ng://angular-portal-azure/lib/component/app/app.component.ts","ng://angular-portal-azure/lib/component/blade/blade.component.ts","ng://angular-portal-azure/lib/component/grid/grid.component.ts","ng://angular-portal-azure/lib/component/nav/nav.component.ts","ng://angular-portal-azure/lib/component/dashboard/appboard/appboard.component.ts","ng://angular-portal-azure/lib/component/general/page-not-found/page-not-found.component.ts","ng://angular-portal-azure/lib/app-routing.module.ts","ng://angular-portal-azure/lib/component/general/splash-screen/splash-screen.component.ts","ng://angular-portal-azure/lib/directive/router-outlet-named/router-outlet-named.directive.ts","ng://angular-portal-azure/lib/directive/theming/theming.directive.ts","ng://angular-portal-azure/lib/angular-portal-azure.module.ts"],"sourcesContent":["/** The names are used in CSS for layouting, e.g. style='mini' */\r\nexport enum TileSizes {\r\n    small,\r\n    mini,\r\n    normal,\r\n    herowide\r\n}\r\n","import { TileSizes } from './tile-sizes';\r\n\r\nexport class TileSize {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public tileSizes: TileSizes, public width: number, public height: number) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Static Methods\r\n\r\n    static getTileSizes(): Array<TileSize> {\r\n        let tileSizes = Array<TileSize>();\r\n\r\n        tileSizes.push(new TileSize(TileSizes.small, 90, 90));\r\n        tileSizes.push(new TileSize(TileSizes.mini, 180, 90));\r\n        tileSizes.push(new TileSize(TileSizes.normal, 180, 180));\r\n        tileSizes.push(new TileSize(TileSizes.herowide, 540, 360));\r\n\r\n        return tileSizes;\r\n    }\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Tile } from './tile';\r\nimport { TileSize } from './tile-size';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tiles<T extends Tile> extends Array<T>  {\r\n    // #region Properties\r\n\r\n    //tiles: Array<T> = new Array<T>();\r\n    isShowTiles: boolean = true;\r\n    isTilesLoaded: boolean = false;\r\n    hideTileIfOnlyOne: boolean = true;  // not yet evaluated in HTML, but this is the standard behavior\r\n\r\n    tileSizes = TileSize.getTileSizes();\r\n    nextLeft: number = 0;\r\n    nextTop: number = 0;\r\n    columnHeightMax: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(...tiles: Array<T>) {\r\n        super(...tiles);\r\n        //this.tiles = tiles;\r\n    }\r\n\r\n    static create<Apps>(): Apps {\r\n        let object = Object.create(Tiles.prototype);\r\n        return object;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...tiles: Array<T>): number {\r\n        tiles.forEach((tile) => {\r\n            this.processTile(tile);\r\n        });\r\n\r\n        return super.push(...tiles);\r\n    }\r\n\r\n    processTile(tile: T): T {\r\n        return;\r\n        //this.isTilesLoaded = true;\r\n        let tileSize = this.tileSizes[tile.tileSize];\r\n        tile.size = TileSizes[tile.tileSize];  // Get CSS Name\r\n\r\n        tile.top = this.nextTop + 'px';\r\n        tile.left = this.nextLeft + 'px';\r\n\r\n        this.nextLeft += tileSize.width;\r\n\r\n        if (tileSize.height > this.columnHeightMax) {\r\n            this.columnHeightMax = tileSize.height;\r\n        }\r\n\r\n        if (this.nextLeft > 540) {\r\n            this.nextLeft = 0;\r\n            this.nextTop += this.columnHeightMax;\r\n            this.columnHeightMax = 0;\r\n        }\r\n\r\n        //this.tiles.push(tile);\r\n\r\n        return tile;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Tiles } from '../tile/tiles';\r\nimport { TileSize } from '../tile/tile-size';\r\nimport { AppboardEntry } from './appboard-entry';\r\n\r\nexport class Appboard extends Tiles<AppboardEntry> {\r\n    // #region Properties\r\n\r\n    isVisible: boolean = true;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(...appboardEntries: Array<AppboardEntry>) {\r\n        super(...appboardEntries);\r\n        this.tileSizes = TileSize.getTileSizes();\r\n        this.nextLeft = 0;\r\n        this.nextTop = 0;\r\n        this.columnHeightMax = 0;\r\n    }\r\n\r\n    static create<Appboard>(): Appboard {\r\n        let object = Object.create(Appboard.prototype);\r\n        object.tileSizes = TileSize.getTileSizes();\r\n        object.nextLeft = 0;\r\n        object.nextTop = 0;\r\n        object.columnHeightMax = 0;\r\n        return object;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...appboardEntries: Array<AppboardEntry>): number {\r\n        return super.push(...appboardEntries);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { SidebarEntry } from './sidebar-entry';\r\n\r\nexport class Sidebar extends Array<SidebarEntry> {\r\n    // #region Properties\r\n\r\n    isVisible: boolean = true;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    private constructor(sidebarEntries?: Array<SidebarEntry>) {\r\n        super(...sidebarEntries);\r\n    }\r\n\r\n    static create<Sidebars>(): Sidebars {\r\n        return Object.create(Sidebar.prototype);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    push(...sidebarEntries: Array<SidebarEntry>): number {\r\n        return super.push(...sidebarEntries);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Appboard } from \"./dashboard/appboard/appboard\";\r\nimport { Blade } from \"./blade/blade\";\r\n//import { Blades } from \"./blade/blades\";\r\nimport { Sidebar } from \"./sidebar/sidebar\";\r\n\r\nexport class AppConfig {\r\n    // #region Properties\r\n\r\n    appTitle: string = 'One-System Portal Azure';\r\n    isShowSplashScreen: boolean = true;\r\n    username: string = 'user@one-system.domain';\r\n    usernameTenant: string = 'One-System';\r\n\r\n    appboard: Appboard = Appboard.create();\r\n    blades: Blade[] = []; // Blades.create();\r\n    sidebar: Sidebar = Sidebar.create();\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AppConfig } from '../../domain/app-config';\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class AppConfigService {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public appConfig: AppConfig) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart, Event as NavigationEvent } from '@angular/router';\r\n\r\nimport { filter } from \"rxjs/operators\";\r\n\r\nimport { AppConfigService } from '../app-config/app-config.service';\r\n\r\nimport { Blade } from '../../domain/blade/blade';\r\n\r\n@Injectable()\r\nexport class BladeService {\r\n    // #region Properties\r\n\r\n    bladeId: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(private appConfigService: AppConfigService, private router: Router) {\r\n        // #region Handle router events\r\n\r\n        this.router.events\r\n            .pipe(\r\n                // The \"events\" stream contains all the navigation events. For this demo,\r\n                // though, we only care about the NavigationStart event as it contains\r\n                // information about what initiated the navigation sequence.\r\n                filter((event: NavigationEvent) => {\r\n                    return (event instanceof NavigationStart);\r\n                })\r\n            )\r\n            .subscribe(\r\n                (event: NavigationStart) => {\r\n                    console.group('NavigationStart');\r\n                    //// Every navigation sequence is given a unique ID. Even \"popstate\"\r\n                    //// navigations are really just \"roll forward\" navigations that get\r\n                    //// a new, unique ID.\r\n                    //console.log(\"navigation id:\", event.id);\r\n                    //console.log(\"route:\", event.url);\r\n                    //// The \"navigationTrigger\" will be one of:\r\n                    //// --\r\n                    //// - imperative (ie, user clicked a link).\r\n                    //// - popstate (ie, browser controlled change such as Back button).\r\n                    //// - hashchange\r\n                    //// --\r\n                    //// NOTE: I am not sure what triggers the \"hashchange\" type.\r\n                    //console.log(\"trigger:\", event.navigationTrigger);\r\n\r\n                    // This \"restoredState\" property is defined when the navigation\r\n                    // event is triggered by a \"popstate\" event (ex, back / forward\r\n                    // buttons). It will contain the ID of the earlier navigation event\r\n                    // to which the browser is returning.\r\n                    // --\r\n                    // CAUTION: This ID may not be part of the current page rendering.\r\n                    // This value is pulled out of the browser; and, may exist across\r\n                    // page refreshes.\r\n                    if (event.restoredState) {\r\n                        console.log(\"restoring navigation id:\", event.restoredState.navigationId);\r\n                        if (event.url.indexOf('(blade') < 0) {\r\n                            console.log('reset appboard visibility')\r\n                            this.appConfigService.appConfig.appboard.isVisible = true;\r\n                        } else {\r\n                            this.appConfigService.appConfig.blades.pop();\r\n                        }\r\n                    }\r\n\r\n                    console.groupEnd();\r\n                });\r\n\r\n        // #endregion\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    navigateTo(routerPath: string): void {\r\n        this.router.config.forEach((route) => {\r\n            if (route.path === routerPath) {\r\n                this.bladeId = this.bladeId + 1;\r\n                route.outlet = 'blade' + this.bladeId;\r\n                this.appConfigService.appConfig.blades.push({ bladeId: 'blade' + this.bladeId } as Blade);\r\n                this.router.navigate([{ outlets: { ['blade' + this.bladeId]: [routerPath] } }]);\r\n            }\r\n        });\r\n\r\n        if (this.appConfigService.appConfig.blades.length > 0) {\r\n            this.appConfigService.appConfig.appboard.isVisible = false;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","// https://devblogs.microsoft.com/premier-developer/angular-how-to-simplify-components-with-typescript-inheritance/\r\n\r\nimport { Injector } from '@angular/core';\r\n\r\nexport class InjectorService {\r\n    // #region Properties\r\n\r\n    private static injector: Injector = null;\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    static setInjector(injector: Injector) {\r\n        InjectorService.injector = injector;\r\n    }\r\n\r\n    static getInjector(): Injector {\r\n        return InjectorService.injector;\r\n    }\r\n\r\n    // #endregion\r\n}       \r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { PortalService } from '../../domain/portal-service';\r\n\r\nimport { AppConfigService } from '../app-config/app-config.service'\r\nimport { BladeService } from '../blade/blade.service'\r\nimport { InjectorService } from '../injector/injector.service'\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class AppService {\r\n    // #region Constructors\r\n\r\n    //constructor(title: string = null) {\r\n    constructor(\r\n        public appConfigService: AppConfigService,\r\n        public bladeService: BladeService,\r\n        injector: Injector\r\n    ) {\r\n        InjectorService.setInjector(injector);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    portalService: PortalService;\r\n}\r\n","//import { MainService } from '../../service/main/main.service';\r\n//import { BrowserWindowService } from '../service/base/browser-window.service';\r\n\r\nexport class UserControlBase {\r\n    // #region Properties\r\n\r\n    //browserWindowService: BrowserWindowService;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // public mainService: MainService\r\n    constructor() {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n    /** Override */\r\n    onActivate(): void {\r\n    }\r\n\r\n    /** Override */\r\n    onActivated(): void {\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","export class Viewport {\r\n    // #region Properties\r\n\r\n    browserWindowInnerHeight: number;       // provided by the browser itself\r\n    browserWindowInnerWidth: number;        // provided by the browser itself\r\n\r\n    private fixedHeight: number = 0;       // contains the heights of all the fixed area in the browser | 20 is the scroller\r\n    dynamicHeight: number = 0;              // calculated Height (browserWindowInnerHeight - fixedHeight)\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    setBrowserWindow(browserWindow: Window) {\r\n        this.browserWindowInnerHeight = browserWindow.innerHeight;\r\n        this.browserWindowInnerWidth = browserWindow.innerWidth;\r\n        this.dynamicHeight = this.browserWindowInnerHeight - this.fixedHeight;\r\n    }\r\n\r\n    addFixedHeight(height: number) {\r\n        this.fixedHeight = this.fixedHeight + height;\r\n        this.dynamicHeight = this.browserWindowInnerHeight - this.fixedHeight;\r\n    }\r\n\r\n    log(): void {\r\n        console.group('Viewport');\r\n        console.log(`browserWindowInnerHeight: ${this.browserWindowInnerHeight}`);\r\n        console.log(`browserWindowInnerWidth: ${this.browserWindowInnerWidth}`);\r\n        console.log(`dynamicHeight: ${this.dynamicHeight}`);\r\n        console.log(`fixedHeight: ${this.fixedHeight}`);\r\n        console.groupEnd();\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","// More information: https://brianflove.com/2018/01/11/angular-window-provider/\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { throttleTime, startWith, map } from 'rxjs/operators';\r\n\r\nimport { Viewport } from './viewport';\r\n//import { pipe } from '@angular/core/src/render3';\r\n\r\n// #region Global JavaScript Functions\r\n\r\nfunction getWindow(): any {\r\n    return window;\r\n}\r\n\r\n// #endregion\r\n\r\n@Injectable({\r\n    providedIn: 'root' // singleton: should be provided in the application root\r\n})\r\nexport class BrowserService {\r\n    // #region Properties\r\n\r\n    get browserWindow(): Window {\r\n        return getWindow();\r\n    }\r\n\r\n    private viewport: Viewport;\r\n\r\n    onResize: Observable<Viewport>;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor() {\r\n        this.viewport = new Viewport();\r\n        this.viewport.addFixedHeight(40);\r\n        this.viewport.setBrowserWindow(this.browserWindow); // Initialize values\r\n\r\n        console.log('commented code at : BrowserService.constructor');\r\n        //this.onResize = fromEvent(this.browserWindow, 'resize')\r\n        //    .pipe(\r\n        //        throttleTime(20),\r\n        //        map((event) => {\r\n        //            this.viewport.setBrowserWindow(<Window>event.currentTarget);\r\n        //            return this.viewport;\r\n        //        }),\r\n        //        startWith(this.viewport),\r\n        //        //tap(viewport => console.log(viewport))\r\n        //    );\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { StatusBar } from './../status-bar';\r\nimport { UserControlBase } from './../base/user-control-base';\r\n\r\nimport { BrowserService } from '../../service/browser/browser.service';\r\nimport { InjectorService } from '../../service/injector/injector.service';\r\n\r\nimport { Viewport } from '../../service/browser/viewport';\r\n\r\nexport class Blade extends UserControlBase {\r\n    // #region Properties\r\n\r\n    private browserService: BrowserService;\r\n    viewport: Viewport = new Viewport();\r\n\r\n    // bladeId: string = '';\r\n    private _bladeId: string = '';\r\n    get bladeId(): string {\r\n        return this._bladeId;\r\n    }\r\n    set bladeId(bladeId: string) {\r\n        if (bladeId == null) { return; }\r\n        this._bladeId = bladeId.toLowerCase();\r\n    }\r\n\r\n    /** HACK:2016-11-06/hp: [angular-portal-blade] needs [this] as the controller.\r\n    We don't know how to provide [this] to the directive.\r\n    So we came up with this [vm] property.*/\r\n    vm: any = {};\r\n\r\n    statusBar: StatusBar;\r\n\r\n    visibility: string = 'collapse';\r\n\r\n    private watcherTitle: () => void;\r\n\r\n    bladeContentHeight: number;\r\n    bladeContentHeightInner: number;\r\n\r\n    title: string = '';\r\n    subTitle: string = '';\r\n    width = '0';\r\n    widthStackLayout = { 'width': '50px' };\r\n\r\n    height = '0';\r\n\r\n    isInnerHtml: boolean = true;\r\n\r\n    formblade: any; // angular.IFormController; // name of the ng-form directive\r\n\r\n    // #region path\r\n\r\n    private _path: string;\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n    // For the moment we do distinguish between lower and upper case path name\r\n    set path(newPath: string) {\r\n        if (newPath == null) { return; }\r\n        this._path = newPath.toLowerCase();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Commands\r\n\r\n    isCommandBrowse: boolean = false;\r\n    commandBrowse: () => void = () => { this.onCommandBrowse(); };\r\n    commandBrowseText: string = '';\r\n\r\n    isCommandCancel: boolean = false;\r\n    commandCancel: () => void = () => { this.onCommandCancel(); };\r\n    commandCancelText: string = '';\r\n\r\n    isCommandCopy: boolean = false;\r\n    isCommandCopyEnabled: boolean = true;\r\n    commandCopy: () => void = () => { this.onCommandCopy(); };\r\n    commandCopyText: string = '';\r\n\r\n    isCommandDelete: boolean = false;\r\n    isCommandDeleteEnabled: boolean = true;\r\n    commandDelete: () => void = () => { this.onCommandDelete(); };\r\n    commandDeleteText: string = '';\r\n\r\n    isCommandDocument: boolean = false;\r\n    commandDocument: () => void = () => { this.onCommandDocument(); };\r\n    commandDocumentText: string = '';\r\n\r\n    isCommandDocument2: boolean = false;\r\n    commandDocument2: () => void = () => { this.onCommandDocument2(); };\r\n    commandDocument2Text: string = '';\r\n\r\n    isCommandDocument3: boolean = false;\r\n    commandDocument3: () => void = () => { this.onCommandDocument3(); };\r\n    commandDocument3Text: string = '';\r\n\r\n    isCommandDocument4: boolean = false;\r\n    commandDocument4: () => void = () => { this.onCommandDocument4(); };\r\n    commandDocument4Text: string = '';\r\n\r\n    isCommandDocument5: boolean = false;\r\n    commandDocument5: () => void = () => { this.onCommandDocument5(); };\r\n    commandDocument5Text: string = '';\r\n\r\n    isCommandNew: boolean = false;\r\n    commandNew: () => void = () => { this.onCommandNew(); };\r\n    commandNewText: string = '';\r\n\r\n    isCommandOrder: boolean = false;\r\n    commandOrder: () => void = () => { this.onCommandOrder(); };\r\n    commandOrderText: string = '';\r\n\r\n    isCommandRestart: boolean = false;\r\n    commandRestart: () => void = () => { this.onCommandRestart(); };\r\n    commandRestartText: string = '';\r\n\r\n    isCommandSave: boolean = false;\r\n    isCommandSaveEnabled: boolean = true;\r\n    commandSave: () => void = () => { this.onCommandSave(); };\r\n    commandSaveText: string = '';\r\n\r\n    isCommandSearch: boolean = false;\r\n    commandSearch: () => void = () => { this.onCommandSearch(); };\r\n    commandSearchText: string = '';\r\n\r\n    isCommandStart: boolean = false;\r\n    commandStart: () => void = () => { this.onCommandStart(); };\r\n    commandStartText: string = '';\r\n\r\n    isCommandStop: boolean = false;\r\n    commandStop: () => void = () => { this.onCommandStop(); };\r\n    commandStopText: string = '';\r\n\r\n    isCommandSwap: boolean = false;\r\n    commandSwap: () => void = () => { this.onCommandSwap(); };\r\n    commandSwapText: string = '';\r\n\r\n    isCommandExcel: boolean = false;\r\n    commandExcel: () => void = () => { this.onCommandExcel(); };\r\n    commandExcelText: string = '';\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // mainService: MainService, \r\n    constructor(path: string = '', title: string = '', subtitle: string = '', width: number = 200) {\r\n        super();\r\n        this.browserService = InjectorService.getInjector().get(BrowserService);\r\n        this.browserService.onResize.subscribe((viewport) => this.viewport = viewport);\r\n\r\n        this.vm = this;\r\n        this.path = path;\r\n        this.title = title;\r\n        this.subTitle = subtitle;\r\n        this.width = width + 'px';\r\n        this.widthStackLayout.width = width - 50 + 'px';  // 50 = padding (left and right)\r\n\r\n        //if (!mainService) { throw new Error('[Blade] constructor parameter \\'mainService\\' must be provided.'); }\r\n        if (!path) { throw new Error('[Blade] constructor parameter \\'path\\' must be a string.'); }\r\n        if (!title && title !== '') { throw new Error('[Blade] constructor parameter \\'title\\' must be a string when provided.'); }\r\n        if (!subtitle && subtitle !== '') { throw new Error('[Blade] constructor parameter \\'subtitle\\' must be a string when provided.'); }\r\n        if (!width && width !== 0) { throw new Error('[Blade] constructor parameter \\'width\\' must be a number when provided.'); }\r\n\r\n        if (width < 50) { throw new Error('[Blade] constructor parameter \\'width\\' must be at least 50.'); }\r\n\r\n        // Set 'this.mainService.areaBlades.blades[index]' to 'this'\r\n        //     'this.mainService.areaBlades.blades[index]' was generated during AddBlade\r\n        //this.mainService.areaBlades.blades.forEach((blade, index) => {\r\n        //    if (blade.path != null && this.path != null && blade.path.toLowerCase() === this.path.toLowerCase()) {\r\n        //        this.mainService.areaBlades.blades[index] = this;\r\n        //    }\r\n        //});\r\n\r\n        //this.browserWindow.setupWindowResizeListener(() => { this.setBladeHeights(); });\r\n        this.setBladeHeights();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n        console.log('ngOnInit');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    activate(): void {\r\n        this.onActivate();\r\n        this.onActivated();\r\n    }\r\n\r\n    navigateTo(path: any) {\r\n        this.onNavigateTo(path);\r\n    }\r\n\r\n    /** Must be overridden. */\r\n    onNavigateTo(value: any): void {\r\n        throw new Error('[Blade] \\'onNavigateTo\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    // At the moment we do not distinguish between lower and upper case path name\r\n    comparePaths(path1: string, path2: string): boolean {\r\n        if (path1 == null) { return false; }\r\n        if (path2 == null) { return false; }\r\n        if (path1.toLowerCase() === path2.toLowerCase()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /** close blade. */\r\n    close() {\r\n        if (!this.onClose) {\r\n            return; // do not close blade\r\n        }\r\n\r\n        //if (this.mainService.areaBlades !== undefined) {\r\n        //    this.mainService.areaBlades.clearPath(this.path);\r\n        //} else {\r\n        //    throw new Error('[Blade] path: \\'' + this.path + '\\' could not be removed, since no \\'this.mainService.areaBlades\\' available.');\r\n        //}\r\n    }\r\n\r\n    /** Override */\r\n    onClose(): boolean {\r\n        return true;\r\n    }\r\n\r\n    ///** Change title, as soon as watchExpression changes. watchExpression is either a variable ore an expression, e.g. [name1 + name2] */\r\n    //setTitle(watchExpression: string, func: () => void) {\r\n    //    if (this.watcherTitle === undefined) {\r\n    //        if (this.$scope !== null) {\r\n    //            // angular1\r\n    //            this.watcherTitle = this.$scope.$watch(watchExpression, () => { func(); });\r\n    //            this.$scope.$on('$destroy', () => { this.watcherTitle(); });\r\n    //        } else {\r\n    //            // angular2\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    // #region Commands\r\n\r\n    onCommandBrowse(): void {\r\n        throw new Error('[Blade] \\'onCommandBrowse\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandCancel(): void {\r\n        throw new Error('[Blade] \\'onCommandCancel\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandCopy(): void {\r\n        throw new Error('[Blade] \\'onCommandCopy\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDelete(): void {\r\n        throw new Error('[Blade] \\'onCommandDelete\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument2(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument2\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument3(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument3\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument4(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument4\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandDocument5(): void {\r\n        throw new Error('[Blade] \\'onCommandDocument5\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandNew(): void {\r\n        throw new Error('[Blade] \\'onCommandNew\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandOrder(): void {\r\n        throw new Error('[Blade] \\'onCommandOrder\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandRestart(): void {\r\n        throw new Error('[Blade] \\'onCommandRestart\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSave(): void {\r\n        throw new Error('[Blade] \\'onCommandSave\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSearch(): void {\r\n        throw new Error('[Blade] \\'onCommandSearch\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandStart(): void {\r\n        throw new Error('[Blade] \\'onCommandStart\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandStop(): void {\r\n        throw new Error('[Blade] \\'onCommandStop\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandSwap(): void {\r\n        throw new Error('[Blade] \\'onCommandSwap\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    onCommandExcel(): void {\r\n        throw new Error('[Blade] \\'onCommandExcel\\' is an abstract function. Define one in the derived class.');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    private setBladeHeights(): void {\r\n        //this.bladeContentHeight = this.mainService.browserWindowService.browserWindow.innerHeight - 40 - 125; // 40 = topbar, 125 = blade header\r\n        this.bladeContentHeightInner = this.bladeContentHeight - 50 - 3; // 50 = padding (top and bottom), somehow we miss 3px\r\n\r\n        // this.mainService.$timeout(() => {\r\n        // }, 50);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","//import { MainService } from '../../../service/main/main.service';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tile {\r\n    // #region Properties\r\n\r\n    //mainService: MainService;\r\n\r\n    title: string;\r\n    subTitle: string;\r\n\r\n    tileSize: TileSizes;\r\n    size: string; // CSS style class name - refactoring: rename to cssClass\r\n\r\n    left: string; // left position (CSS)\r\n    top: string; // top position (CSS)\r\n\r\n    private _bladePath: string;\r\n    get bladePath(): string {\r\n        return this._bladePath;\r\n    }\r\n\r\n    // For the moment we do not distinguish between lower and upper case path name\r\n    set bladePath(newBladePath: string) {\r\n        this._bladePath = newBladePath.toLowerCase();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    // mainService: MainService, \r\n    constructor(title: string, bladePath: string) {\r\n        //this.mainService = mainService;\r\n\r\n        this.title = title;\r\n        this.bladePath = bladePath;\r\n        this.tileSize = TileSizes.normal;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    clicked() {\r\n        //this.mainService.areaBlades.setFirstBlade(this.bladePath);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Private Methods\r\n\r\n    // #endregion\r\n}\r\n","//import { MainService } from '../../../service/main/main.service';\r\nimport { Tile } from '../tile/tile';\r\n\r\nexport class AppboardEntry extends Tile {\r\n    // #region Properties\r\n\r\n    //mainService: MainService\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public title: string, public routerPath: string, public subTitle: string = '', public iconClass: string = '', public iconColor: string = '') {\r\n        super(title, routerPath);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","export class SidebarEntry {\r\n    // #region Properties\r\n\r\n    // #endregion\r\n\r\n    // #region Constructors\r\n\r\n    constructor(public title: string, public routerPath: string, public iconClass: string = null) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    // #endregion\r\n}\r\n","export class ValidationResultDotNet {\n    ErrorMessage: string;\n    MemberNames: string[];\n}\n\nexport class ExceptionDotNet {\n    // .NET Exception (the following fields are transmitted over the wire)\n    ClassName: string | void;\n    Data: { key: number, value: string }[] | null;\n    ExceptionMethod: string | void;\n    HelpURL: string | null | void;\n    HelpLink: string | null | void;\n    HResult: number;\n    InnerException: ExceptionDotNet | null;\n    Message: string | null;\n    RemoteStackIndex: number | void;\n    RemoteStackTraceString: string | null | void;\n    Source: string;\n    StackTrace: string;\n    WatsonBuckets: string | null | void;\n\n    /**\n     *  @deprecated ExceptionMessage is obsolete\n     */\n    ExceptionMessage: string | void;\n    /**\n     *  @deprecated ExceptionType is obsolete\n     */\n    ExceptionType: string | void;\n}\n\nexport class ArgumentNullException extends ExceptionDotNet {\n    ParamName: string;\n}\n\nexport class EntityValidationException extends ExceptionDotNet {\n    Data: { key: number, value: string }[];\n    ValidationResults: ValidationResultDotNet[];\n\n    //public convertResponse(response: any) {\n    //    if (response.headers === undefined) {\n    //        console.debug('EntityValidationException.convertResponse - response.data');\n    //        ValidationsExceptionDotNet.convertResponse(this, response.data);\n    //        ValidationsExceptionDotNet.convertExceptionType(this, response.data);\n    //    } else {\n    //        console.debug('EntityValidationException.convertResponse - response.json()');\n    //        ValidationsExceptionDotNet.convertResponse(this, response.json());\n    //        ValidationsExceptionDotNet.convertExceptionType(this, response.json());\n    //    }\n    //}\n\n    //protected static convertResponse(exceptionTo: EntityValidationException | ValidationsExceptionDotNet, responseDataFrom: ExceptionDotNet): void {\n    //    console.debug('EntityValidationException.convertResponse');\n\n    //    exceptionTo.ExceptionMessage = responseDataFrom.ExceptionMessage;\n    //    exceptionTo.Message = responseDataFrom.Message;\n    //    exceptionTo.StackTrace = responseDataFrom.StackTrace;\n    //    exceptionTo.InnerException = responseDataFrom.InnerException;\n    //}\n\n    //protected static convertExceptionType(exception: EntityValidationException | ValidationsExceptionDotNet, responseData: any): void {\n    //    if (responseData.ExceptionType === undefined) {\n    //        console.debug('EntityValidationException.convertExceptionType - undefined');\n    //        return;\n    //    }\n    //    else if (responseData.ExceptionType === 'System.Data.Entity.Validation.DbEntityValidationException') {\n    //        console.debug('EntityValidationException.convertExceptionType - DbEntityValidationException');\n    //        exception.ExceptionType = 'DbEntityValidationException';\n    //        return;\n    //    }\n    //    else if (responseData.ExceptionType === 'System.Data.Entity.Infrastructure.DbUpdateConcurrencyException') {\n    //        console.debug('EntityValidationException.convertExceptionType - DbUpdateConcurrencyException');\n    //        exception.ExceptionType = 'DbUpdateConcurrencyException';\n    //        return;\n    //    }\n    //    else if (responseData.ClassName !== undefined && responseData.ClassName.indexOf('ValidationsException') > 0) {\n    //        console.debug('EntityValidationException.convertExceptionType - ValidationsException');\n    //        exception.ExceptionType = 'ValidationsException';\n    //        return;\n    //    }\n    //    else {\n    //        console.debug('EntityValidationException.convertExceptionType - else');\n    //        exception.ExceptionType = responseData.ExceptionType;\n    //    }\n    //}\n}\n\n/**\n *  @deprecated ValidationsExceptionDotNet should be replaced by EntityValidationException\n */\nexport class ValidationsExceptionDotNet extends EntityValidationException {\n}\n","import { ValidationsExceptionDotNet } from './exception-dot-net';\n\nexport class Exception extends ValidationsExceptionDotNet {\n    // #region Properties\n\n    // HTTP Server\n    Type: string;\n    MessageDetail: string;\n    Messages: string[];\n    Status: number | undefined;\n    StatusText: string | undefined;\n    Url: string;\n\n    // #endregion\n\n    // #region Static Methods\n\n    static getOneLineMessage(exception: Exception): string {\n        let message: string = '';\n\n        if (exception.Message !== undefined) {\n            if (exception.Message.toLowerCase().indexOf('cannot insert duplicate key in object') >= 0\n                || exception.Message.toLowerCase().indexOf('the duplicate key value is') >= 0) {\n                console.debug(exception.Message);\n                return 'Datensatz mit gleichem Key (SchlÃÂ¼ssel) bereits vorhanden!';\n            }\n\n            if (exception.Message.toLowerCase().indexOf('the delete statement conflicted with the reference constraint') >= 0) {\n                console.debug(exception.Message);\n                return 'Datensatz kann nicht gelÃÂ¶scht werden, da noch abhÃÂ¤ngige Daten vorhanden sind!';\n            }\n\n            if (exception.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                // Frist innerException\n                let innerException = exception.InnerException;\n                if (exception.InnerException.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                    // Second innerException\n                    let innerException = exception.InnerException.InnerException;\n                    if (exception.InnerException.InnerException.Message.toLowerCase().indexOf('see the inner exception for details') >= 0) {\n                        // Third innerException\n                        let innerException = exception.InnerException.InnerException.InnerException;\n                    }\n                }\n                console.debug(exception);\n                return innerException.Message;\n            }\n\n            message = message + exception.Message + ' ';\n            return message;\n        }\n\n        if (exception.Messages !== undefined) {\n            if (exception.Messages.length > 0) {\n                message = '';\n                exception.Messages.forEach((item, index) => {\n                    if (index > 0) {\n                        message = message + ' - ';\n                    }\n                    message = message + item;\n                });\n                return message;\n            }\n        }\n\n        if (exception.ExceptionMessage !== undefined && (<string>exception.ExceptionMessage).toLowerCase().indexOf('see the inner exception for details') < 0) {\n            message = message + ': ' + exception.ExceptionMessage + ' ';\n            return message;\n        }\n\n        if (exception.ExceptionMessage !== undefined && (<string>exception.ExceptionMessage).toLowerCase().indexOf('see the inner exception for details') >= 0) {\n            if (exception.InnerException !== undefined) {\n                if (exception.InnerException.InnerException !== undefined) {\n                    message = message + ': ' + exception.InnerException.InnerException.ExceptionMessage + ' ';\n                    return message;\n                } else {\n                    message = message + ': ' + exception.InnerException.ExceptionMessage + ' ';\n                    return message;\n                }\n            }\n        }\n\n        // Default handler\n        console.debug(exception);\n        message = message + ': JavaScript-Fehler oder Probleme mit der Internetverbindung. Weitere Informationen im Log (change log to full = debug). ' + exception;\n\n        return message;\n    }\n\n    // TODO:2018-10-10/hp: [angular.IHttpPromiseCallbackArg<Exception>] should be Response\n    static prepareException(response: Promise<Exception> | any): Exception {\n        let exception = Exception.createException();\n\n        // #region Process (Angular 1) response.data.Data\n\n        if (response.data !== undefined && response.data.Data !== undefined) {\n            exception = Exception.processResponseData(exception, response.data.Data);\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response.json().Data (EntityValidationException, etc.)\n\n        else if (response.json !== undefined && response.json().Data != undefined) {\n            exception = Exception.processResponseData(exception, response.json().Data);\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response._body\n\n        else if (response._body !== undefined) {\n            var body = JSON.parse(response._body);\n            if (body.Message) {\n                exception.Message = body.Message;\n            }\n        }\n\n        // #endregion\n\n        // #region Process (Angular 2) response.InnerException.InnerException.Message\n\n        else if (response.json !== undefined && response.json !== null\n            && response.json().InnerException !== undefined && response.json().InnerException !== null\n            && response.json().InnerException.InnerException !== undefined && response.json().InnerException.InnerException !== null) {\n            exception.Message = response.json().InnerException.InnerException.Message;\n        }\n\n        // #endregion\n\n        //exception.convertResponse(response);\n\n        exception.Url = response.url;\n        exception.Status = response.status;\n        exception.StatusText = response.statusText;\n\n        return exception;\n    }\n\n    private static createException(): Exception {\n        let exception: Exception = new Exception();\n        exception.Messages = [];\n        return exception;\n    }\n\n    //private static processResponseWithData(exception: Exception, response: angular.IHttpPromiseCallbackArg<Exception>): Exception {\n    //    console.debug('Exception.processResponseWithData');\n    //    // #region Convert data to Messages\n\n    //    if (response.data.Data === undefined) {\n    //        exception.Messages.push('No further information found in [response.data.Data].');\n    //        exception.Messages.push('No further information found in [response.data.Data].');\n    //    } else {\n\n    //        let i = 1;\n    //        while (response.data.Data[i + ''] !== undefined) {\n    //            console.debug('Add to exception.Messages : ' + response.data.Data[i + '']);\n    //            exception.Messages.push(response.data.Data[i + '']);\n    //            i++;\n    //        }\n    //    }\n\n    //    // #endregion\n\n    //    return exception;\n    //}\n\n    private static processResponseData(exception: Exception, data: any[]): Exception {\n        let i = 1;\n        while (data[i + ''] !== undefined) {\n            exception.Messages.push(data[i + '']);\n            i++;\n        }\n\n        return exception;\n    }\n\n    // TODO:2017-01-09/hp: Implement this function for angular2\n    //private static processDotNetException2(exception: Exception, response: any): Exception {\n    //    console.debug('Exception.processDotNetException2');\n\n    //    if (response.json().data !== undefined) {\n    //        console.debug('[Exception.processDotNetException2] not implemented. Implement it to get proper exception data.');\n    //    }\n\n    //    return exception;\n    //}\n\n    // #endregion\n}\n","import { UserAccount } from './user-account';\nimport { PortalService } from './portal-service';\nimport { Exception } from './exception';\n\n\nexport class UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService) { // $scope: any,\n        //this.$scope = $scope;\n        this.portalService = portalService;\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    //$scope: any;\n    portalService: PortalService;\n\n    windowResizeHandler: () => void;\n\n    statusBar: string = '';\n    statusBarClass: string = '';\n\n    // #endregion\n\n    // #region Methods\n\n    /** angular1: $onInit(), $onChanges(changesObj), $doCheck(), $onDestroy(), $postLink() */\n    $onDestroy() {\n        this.removeWindowResizeListener();\n    }\n\n    /** angular2: ngOnChanges(), ngOnInit, ngDoCheck, ngAfterContentInit, ngAfterContentChecked, ngAfterViewInit, ngAfterViewChecked, ngOnDestroy */\n    ngOnDestroy() {\n        this.removeWindowResizeListener();\n    }\n\n    /** Override */\n    onActivate(): void {\n    }\n\n    /** Override */\n    onActivated(): void {\n    }\n\n    private removeWindowResizeListener() {\n        if (this.windowResizeHandler !== undefined) {\n            this.portalService.$window.removeEventListener('resize', this.windowResizeHandler);\n        }\n    }\n\n    setupWindowResizeListener(callback: () => void) {\n        // http://stackoverflow.com/questions/4298612/jquery-how-to-call-resize-event-only-once-its-finished-resizing\n        let id: number;\n\n        window.addEventListener('resize', this.windowResizeHandler = () => {\n            clearTimeout(id);\n            id = setTimeout(() => { callback(); }, 50);\n        });\n    }\n\n    isNumberUndefinedNullOr0(value: number): boolean {\n        if (value && value > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    isObjectNullUndefinedOrEmpty(value: object): boolean {\n        if (value == null) { return true; }\n        if (value == undefined) { return true; }\n        if (value && Object.keys(value).length > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    isStringNullOrEmpty(value: string): boolean {\n        if (value && value.replace(' ', '').length > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getRandomString(length: number = 20) {\n        return 'a' + Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).replace('.', '').replace('(e+', '').replace(')', '').slice(1);\n    }\n\n    // #region Set StatusBar\n\n    clearStatusBar() {\n        this.statusBar = '';\n        this.statusBarClass = '';\n    }\n\n    setStatusBar(text?: string, style?: string) {\n        this.statusBar = text ? text : '';\n        this.statusBarClass = style ? style : '';\n    }\n\n    setStatusBarCopyData() {\n        this.statusBar = 'Daten kopieren...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarLoadData() {\n        this.statusBar = 'Daten laden...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarSaveData() {\n        this.statusBar = 'Daten speichern...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarDeleteData() {\n        this.statusBar = 'Daten lÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬ÃÂ¢Ã¢â¬Å¾ÃÂ¢ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬Ãâ¦ÃÂ¡ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ¡ÃÆÃ¢â¬Å¡ÃâÃÂ¶schen...';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarDeleteDataCanceled() {\n        this.statusBar = 'LÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬ÃÂ¢Ã¢â¬Å¾ÃÂ¢ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃÂ¢ÃÂ¢Ã¢â¬Å¡ÃÂ¬Ãâ¦ÃÂ¡ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ¡ÃÆÃ¢â¬Å¡ÃâÃÂ¶schen abgebrochen.';\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarInfo(text: string) {\n        this.statusBar = text;\n        this.statusBarClass = 'apa-statusbar-info';\n    }\n\n    setStatusBarError(text: string) {\n        this.statusBar = text;\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    setStatusBarNoDataFound() {\n        this.statusBar = 'Keine Daten gefunden!';\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    setStatusBarException(exception: Exception) {\n        this.statusBar = Exception.getOneLineMessage(exception);\n        this.statusBarClass = 'apa-statusbar-error';\n    }\n\n    // #endregion\n\n    // #endregion\n}\n","import { PortalService } from './portal-service';\nimport { UserAccount } from './user-account';\nimport { UserControlBase } from './user-control-base';\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\nimport { timeout } from 'q';\r\n\nexport class Blade extends UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService, path: string, title: string, subtitle: string = '', width: number = 200) {//$scope: any,\n        super(portalService); //$scope,\n\n        this.vm = this;\n        this.path = path;\n        this.title = title;\n        this.subTitle = subtitle;\n        this.width.width = width + 'px';\n        this.widthStackLayout.width = width - 50 + 'px';  // 50 = padding (left and right)\n\n        if (!portalService) { throw new Error('[Blade] constructor parameter \\'portalService\\' must be provided.'); }\n        if (!path) { throw new Error('[Blade] constructor parameter \\'path\\' must be a string.'); }\n        if (!title && title !== '') { throw new Error('[Blade] constructor parameter \\'title\\' must be a string when provided.'); }\n        if (!subtitle && subtitle !== '') { throw new Error('[Blade] constructor parameter \\'subtitle\\' must be a string when provided.'); }\n        if (!width && width !== 0) { throw new Error('[Blade] constructor parameter \\'width\\' must be a number when provided.'); }\n\n        if (width < 50) { throw new Error('[Blade] constructor parameter \\'width\\' must be at least 50.'); }\n\n        // Set 'this.portalService.areaBlades.blades[index]' to 'this'\n        //     'this.portalService.areaBlades.blades[index]' was generated during AddBlade\n        this.portalService.areaBlades.blades.forEach((blade, index) => {\n            if (blade.path != null && this.path != null && blade.path.toLowerCase() === this.path.toLowerCase()) {\n                this.portalService.areaBlades.blades[index] = this;\n            }\n        });\n\n        this.setupWindowResizeListener(() => { this.setBladeHeights(); });\n        this.setBladeHeights();\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    /** HACK: 2016-11-06/hp\n    [angular-portal-blade] needs [this] as the controller.\n    We don't know how to provide [this] to the directive.\n    So we came up with this [vm] property.*/\n    vm: any = {};\n\n    // Indicates if maximize icon is shown\n    // TODO: 2019-09-26/hp: it probably should be named isMaximizedShown\n    isMaximize: boolean = false;\n\n    // TODO: 2019-09-26/hp: not sure what that is, checkout\n    isCommandMore: boolean = false;\n\n    // Indicates if this is a navigation blade\n    isNav: boolean = false;\n\n    // Indicates if this is a navigation grid blade\n    isGrid: boolean = false;\n\n    visibility: string = 'collapse';\n\n    private watcherTitle: () => void;\n\n    bladeContentHeight: number;\n    bladeContentHeightInner: number;\n\n    title: string = '';\n    subTitle: string = '';\n    width = { 'width': '0' };\n    widthStackLayout = { 'width': '50px' };\n\n    isInnerHtml: boolean = true;\n\n    formblade: any; // angular.IFormController; // name of the ng-form directive\n\n    // #region path\n\n    private _path: string;\n    get path(): string {\n        return this._path;\n    }\n    // For the moment we do distinguish between lower and upper case path name\n    set path(newPath: string) {\n        if (newPath == null) { return; }\n        this._path = newPath.toLowerCase();\n    }\n\n    // #endregion\n\n    // #endregion\n\n    // #region Commands\n\n    isCommandBrowse: boolean = false;\n    isCommandBrowseEnabled: boolean = true;\n    commandBrowse: () => void = () => { this.onCommandBrowse(); };\n    commandBrowseText: string = '';\n\n    isCommandCancel: boolean = false;\n    isCommandCancelEnabled: boolean = true;\n    commandCancel: () => void = () => { this.onCommandCancel(); };\n    commandCancelText: string = '';\n\n    isCommandCopy: boolean = false;\n    isCommandCopyEnabled: boolean = true;\n    commandCopy: () => void = () => { this.onCommandCopy(); };\n    commandCopyText: string = '';\n\n    isCommandDelete: boolean = false;\n    isCommandDeleteEnabled: boolean = true;\n    commandDelete: () => void = () => { this.onCommandDelete(); };\n    commandDeleteText: string = '';\n\n    isCommandDocument: boolean = false;\n    isCommandDocumentEnabled: boolean = true;\n    commandDocument: () => void = () => { this.onCommandDocument(); };\n    commandDocumentText: string = '';\n\n    isCommandDocument2: boolean = false;\n    isCommandDocument2Enabled: boolean = true;\n    commandDocument2: () => void = () => { this.onCommandDocument2(); };\n    commandDocument2Text: string = '';\n\n    isCommandDocument3: boolean = false;\n    isCommandDocument3Enabled: boolean = true;\n    commandDocument3: () => void = () => { this.onCommandDocument3(); };\n    commandDocument3Text: string = '';\n\n    isCommandDocument4: boolean = false;\n    isCommandDocument4Enabled: boolean = true;\n    commandDocument4: () => void = () => { this.onCommandDocument4(); };\n    commandDocument4Text: string = '';\n\n    isCommandDocument5: boolean = false;\n    isCommandDocument5Enabled: boolean = true;\n    commandDocument5: () => void = () => { this.onCommandDocument5(); };\n    commandDocument5Text: string = '';\n\n    isCommandNew: boolean = false;\n    isCommandNewEnabled: boolean = true;\n    commandNew: () => void = () => { this.onCommandNew(); };\n    commandNewText: string = '';\n\n    isCommandOrder: boolean = false;\n    isCommandOrderEnabled: boolean = true;\n    commandOrder: () => void = () => { this.onCommandOrder(); };\n    commandOrderText: string = '';\n\n    isCommandRestart: boolean = false;\n    isCommandRestartEnabled: boolean = true;\n    commandRestart: () => void = () => { this.onCommandRestart(); };\n    commandRestartText: string = '';\n\n    isCommandSave: boolean = false;\n    isCommandSaveEnabled: boolean = true;\n    commandSave: () => void = () => { this.onCommandSave(); };\n    commandSaveText: string = '';\n\n    isCommandSearch: boolean = false;\n    isCommandSearchEnabled: boolean = true;\n    commandSearch: () => void = () => { this.onCommandSearch(); };\n    commandSearchText: string = '';\n\n    isCommandStart: boolean = false;\n    isCommandStartEnabled: boolean = true;\n    commandStart: () => void = () => { this.onCommandStart(); };\n    commandStartText: string = '';\n\n    isCommandStop: boolean = false;\n    isCommandStopEnabled: boolean = true;\n    commandStop: () => void = () => { this.onCommandStop(); };\n    commandStopText: string = '';\n\n    isCommandSwap: boolean = false;\n    isCommandSwapEnabled: boolean = true;\n    commandSwap: () => void = () => { this.onCommandSwap(); };\n    commandSwapText: string = '';\n\n    isCommandExcel: boolean = false;\n    isCommandExcelEnabled: boolean = true;\n    commandExcel: () => void = () => { this.onCommandExcel(); };\n    commandExcelText: string = '';\n\n    // #endregion\n\n    // #region Methods\n\n    activate(): void {\n        this.onActivate();\n        this.onActivated();\n    }\n\n    navigateTo(path: any) {\n        this.onNavigateTo(path);\n    }\n\n    /** Must be overridden. */\n    onNavigateTo(value: any): void {\n        throw new Error('[Blade] \\'onNavigateTo\\' is an abstract function. Define one in the derived class.');\n    }\n\n    // At the moment we do not distinguish between lower and upper case path name\n    comparePaths(path1: string, path2: string): boolean {\n        if (path1 == null) { return false; }\n        if (path2 == null) { return false; }\n        if (path1.toLowerCase() === path2.toLowerCase()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /** close blade. */\n    close() {\n        if (!this.onClose) {\n            return; // do not close blade\n        }\n\n        if (this.portalService.areaBlades !== undefined) {\n            this.portalService.areaBlades.clearPath(this.path);\n        } else {\n            throw new Error('[Blade] path: \\'' + this.path + '\\' could not be removed, since no \\'this.portalService.areaBlades\\' available.');\n        }\n    }\n\n    /** Override */\n    onClose(): boolean {\n        return true;\n    }\n\n    // #region Commands\n\n    onCommandBrowse(): void {\n        throw new Error('[Blade] \\'onCommandBrowse\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandCancel(): void {\n        throw new Error('[Blade] \\'onCommandCancel\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandCopy(): void {\n        throw new Error('[Blade] \\'onCommandCopy\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDelete(): void {\n        throw new Error('[Blade] \\'onCommandDelete\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument(): void {\n        throw new Error('[Blade] \\'onCommandDocument\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument2(): void {\n        throw new Error('[Blade] \\'onCommandDocument2\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument3(): void {\n        throw new Error('[Blade] \\'onCommandDocument3\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument4(): void {\n        throw new Error('[Blade] \\'onCommandDocument4\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandDocument5(): void {\n        throw new Error('[Blade] \\'onCommandDocument5\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandNew(): void {\n        throw new Error('[Blade] \\'onCommandNew\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandOrder(): void {\n        throw new Error('[Blade] \\'onCommandOrder\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandRestart(): void {\n        throw new Error('[Blade] \\'onCommandRestart\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSave(): void {\n        throw new Error('[Blade] \\'onCommandSave\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSearch(): void {\n        throw new Error('[Blade] \\'onCommandSearch\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandStart(): void {\n        throw new Error('[Blade] \\'onCommandStart\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandStop(): void {\n        throw new Error('[Blade] \\'onCommandStop\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandSwap(): void {\n        throw new Error('[Blade] \\'onCommandSwap\\' is an abstract function. Define one in the derived class.');\n    }\n\n    onCommandExcel(): void {\n        throw new Error('[Blade] \\'onCommandExcel\\' is an abstract function. Define one in the derived class.');\n    }\n\n    // #endregion\n\n    // #endregion\n\n    /** Change title, as soon as watchExpression changes. watchExpression is either a variable ore an expression, e.g. [name1 + name2] */\n    setTitle(watchExpression: string, func: () => void) {\n        console.log('commented code at : Blade.setTitle');\n        //if (this.watcherTitle === undefined) {\n        //    if (this.$scope !== null) {\n        //        // angular1\n        //        this.watcherTitle = this.$scope.$watch(watchExpression, () => { func(); });\n        //        this.$scope.$on('$destroy', () => { this.watcherTitle(); });\n        //    } else {\n        //        // angular2\n        //        console.log('[Blade.setTitle()] not supported for angular2. use [ngOnChanges] instead.');\n        //    }\n        //}\n    }\n\n    private setBladeHeights(): void {\n        this.bladeContentHeight = window.innerHeight - 40 - 125; // 40 = topbar, 125 = blade header\n        this.bladeContentHeightInner = this.bladeContentHeight - 50 - 3; // 50 = padding (top and bottom), somehow we miss 3px\n\n        // this.portalService.$timeout(() => { }, 50);\n        //window.setTimeout(() => { }, 50);\n    }\n}\n","import { Input } from '@angular/core';\r\n\nimport { PortalService } from './portal-service';\nimport { Tiles } from './tiles';\nimport { UserControlBase } from './user-control-base';\nimport { Blade } from './blade';\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\n\nexport class AreaBlades extends UserControlBase {\n    // #region Constructor\n\n    //static $inject = ['$scope', 'portalService'];\n    constructor(portalService: PortalService) { // $scope: any,\n        super(portalService); // $scope,\n\n        this.portalScroll = window.document.getElementById('apa-portal-scroll');\n\n        this.setupWindowResizeListener(() => { this.setPortalScrollCss(); });\n\n        this.blades = [];\n    }\n\n    // #endregion\n\n    // #region Properties\n\n    private portalScroll: HTMLElement;\n\n    private addBladeListener: () => void;\n    private areaNotificationShowListener: () => void;\n    private areaNotificationHideListener: () => void;\n\n    blades: Array<Blade> = new Array<Blade>();\n\n    // #endregion\n\n    // #region Methods\n\n    raiseBladeOnActivateEvent(args: IAddBladeEventArgs) {\n        let isEventRaised: boolean = false;\n\n        this.blades.forEach((blade) => {\n            if (blade.path.toLowerCase() === args.path.toLowerCase()) {\n                // Raise event onActivate\n                blade.onActivate();\n                isEventRaised = true;\n                return;\n            }\n        });\n    }\n\n    raiseAddBladeEvent(args: IAddBladeEventArgs) {\n        let isBladeAlreadyShown: boolean = false;\n        this.blades.forEach((blade) => {\n            if (blade.path.toLowerCase() === args.path.toLowerCase()) {\n                // Blade is already shown, just activate it again\n                blade.onActivate();\n                isBladeAlreadyShown = true;\n                return;\n            }\n        });\n\n        if (!isBladeAlreadyShown) {\n            // Add the blade, since it is not yet shown\n            this.portalService.areaBlades.addBlade(args.path, args.pathSender);\n            //this.portalService.$rootScope.$broadcast('AreaBlades.AddBlade', args);\n        }\n    }\n\n    setFirstBlade(path: string): Blade | void {\n        this.clearAll();\n        this.hidePanorama();\n        return this.addBlade(path);\n    }\n\n    addBlade(path: string, senderPath: string = ''): Blade | void {\n        if (path == null) { return; }\n        if (senderPath == null) { return; }\n        let portalcontent: HTMLElement = null;\n\n        console.log('commented code at : AreaBlades.addBlade (analytics)');\n        // this.portalService.$analytics.pageTrack(path.toLowerCase());\n\n        path = path.toLowerCase();\n        senderPath = senderPath.toLowerCase();\n\n        // #region Verify\n\n        if (path === undefined || path === '') { return; }\n\n        if (this.portalService.$window !== undefined) {\n            if (this.portalService.$window.document === undefined) {\n                throw new Error('[AreaBlades] \\'this.$window.document\\' undefined.');\n            }\n\n            portalcontent = this.portalService.$window.document.getElementById('apa-portal-scroll');\n            if (portalcontent === null) {\n                throw new Error('[AreaBlades] HTML element with ID [apa-portal-scroll] not found. Maybe it is to early to call function \\'BladeArea.addBlade\\'.');\n            }\n        }\n\n        // #endregion\n\n        // #region Clear all children of the parent path\n\n        this.clearChild(senderPath);\n\n        // #endregion\n\n        // #region Make sure the blade is not yet show\n\n        this.blades.forEach((blade) => {\n            // we do not distinguish between lower and upper case path name\n            if (blade.comparePaths(blade.path, path)) {\n                throw new Error('[AreaBlades] path: \\'' + path + '\\' will not be added. It is already added.');\n            }\n        });\n\n        // #endregion\n\n        // #region Show the blade\n\n        let blade = new Blade(this.portalService, path, ''); // this.$scope,\n        this.blades.push(blade);\n\n        // #endregion\n\n        // #region Position the blade\n\n        if (this.portalService.$window !== undefined) {\n            this.portalService.$window.setTimeout(() => {\n                let azureportalblades = this.portalService.$window.document.getElementsByClassName('azureportalblade');\n\n                let i = this.blades.length - 1;\n\n                // HACK: Sometime azureportalblades[i].offsetLeft is undefined.\n                //       So now if it is, the user has to scroll on its own.\n                if (azureportalblades[i] !== undefined && (<any>azureportalblades[i]).offsetLeft !== undefined) {\n                    let sl = (<any>azureportalblades[i]).offsetLeft - 30;\n                    portalcontent.scrollLeft = sl;\n                }\n            }, 250);\n        }\n\n        // #endregion\n\n        return blade;\n    }\n\n    clearAll(): void {\n        this.blades.length = 0;\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearPath(path: string): void {\n        // we do not distinguish between lower and upper case path name\n        path = path.toLowerCase();\n\n        let isremoved = this.blades.some((blade, index) => {\n            if (blade.comparePaths(blade.path, path)) {\n                this.blades.length = index;\n                return true;\n            }\n        });\n\n        if (!isremoved && this.portalService.areaNotification.path === path) {\n            this.portalService.areaNotification.hide();\n            isremoved = true;\n        }\n\n        if (!isremoved) {\n            throw new Error('[AreaBlades.clearPath] path: \\'' + path + '\\' could not be removed, since path not found in bladeUrls.');\n        }\n\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearLevel(level: number) {\n        if (this.blades.length < level) {\n            throw new Error('[AreaBlades] level: \\'' + level + '\\' could not be cleard, since only \\'' + this.blades.length + '\\' available.');\n        }\n\n        if (level === 0) { level = 1; }\n        this.blades.length = level - 1;\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearLastLevel() {\n        this.clearLevel(this.blades.length);\n        this.showPanoramaIfNoBlades();\n    }\n\n    clearChild(path: string): void {\n        path = path.toLowerCase();\n\n        if (path === '') {\n            return;\n        }\n        let isremoved = this.blades.some((blade, index) => {\n            // we do not distinguish between lower and upper case path name\n            if (blade.comparePaths(blade.path, path)) {\n                this.blades.length = index + 1;\n                return true;\n            }\n        });\n        if (!isremoved) {\n            throw new Error('[AreaBlades.clearChild] path: \\'' + path + '\\' could not be removed, since path not found in bladeUrls.');\n        }\n    }\n\n    showPanoramaIfNoBlades() {\n        if (this.blades.length === 0) {\n            if (this.portalService.panorama !== undefined) {\n                {\n                    console.log('showPanoramaIfNoBlades');\n                    console.log({ a: this.portalService.panorama.isVisible });\n                    console.log({ a: this.portalService.panorama.startboard.tiles.showTiles });\n                    this.portalService.panorama.isVisible = true;\n                    this.portalService.panorama.startboard.tiles.showTiles = true;\n                    console.log({ a: this.portalService.panorama.isVisible });\n                    console.log({ a: this.portalService.panorama.startboard.tiles.showTiles });\n                }\n            }\n        }\n    }\n\n    hidePanorama() {\n        if (this.portalService.panorama !== undefined) {\n            console.log('hidePanorama');\n            console.log({ a: this.portalService.panorama.isVisible });\n            console.log({ a: this.portalService.panorama.startboard.tiles.showTiles });\n            this.portalService.panorama.isVisible = false;\n            this.portalService.panorama.startboard.tiles.showTiles = false;\n\n            console.log((<any>Object).id(this));\n            console.log((<any>Object).id(this.portalService));\n            console.log((<any>Object).id(this.portalService.panorama));\n            console.log((<any>Object).id(this.portalService.panorama.startboard));\n            console.log((<any>Object).id(this.portalService.panorama.startboard.tiles));\n\n            console.log({ a: this.portalService.panorama.isVisible });\n            console.log({ a: this.portalService.panorama.startboard.tiles.showTiles });\n        }\n    }\n\n    /** We need to call this when AreaBlades is no longer used, otherwise the listener does not get removed. */\n    close() {\n        // Unregister Listeners\n        this.addBladeListener();\n        this.areaNotificationShowListener();\n        this.areaNotificationHideListener();\n    }\n\n    // #endregion\n\n    setPortalScrollCss() {\n        if (this.portalScroll != null && this.portalService.areaNotification != null) {\n            this.portalScroll.style.marginRight = this.portalService.areaNotification.widthAreaUsed + 'px';\n        }\r\n    }\n}\n\n// angular.module('angularportalazure').service('areaBlades', AreaBlades);\n","import { Input } from '@angular/core';\r\n\r\nimport { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { BladeData } from './blade-data';\r\nimport { BladeNavItem } from './blade-nav-item';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\n\r\n\r\nexport class AreaNotification extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n\r\n        this.areaNotification = window.document.getElementById('apa-notification-area');\r\n\r\n        this.hide();\r\n        this.setupWindowResizeListener(() => { this.calcualteCssStyles(); });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    path: string = '';\r\n    widthAreaUsed: number = 0;\r\n\r\n    private areaNotification: HTMLElement;\r\n\r\n    private _width: number = 250;\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n    set width(value: number) {\r\n        this._width = value;\r\n        this.calcualteCssStyles();\r\n    }\r\n\r\n    private _backgroundColor: string = '#32383f';\r\n    get backgroundColor(): string {\r\n        return this._backgroundColor;\r\n    }\r\n    set backgroundColor(value: string) {\r\n        this._backgroundColor = value;\r\n        this.calcualteCssStyles();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    hide() {\r\n        // Do not hide on false\r\n        if (!this.onHide) {\r\n            return;\r\n        }\r\n\r\n        this.path = '';\r\n        this.widthAreaUsed = 0;\r\n        if (this.areaNotification != null) { this.areaNotification.style.display = 'none' };\r\n\r\n        this.portalService.areaBlades.setPortalScrollCss();\r\n        //this.portalService.$rootScope.$broadcast('AreaNotification.Hide');\r\n    }\r\n\r\n    show(width: number = 250) {\r\n        this.onShow();\r\n        this.width = width;\r\n        this.widthAreaUsed = 1; // Indicate to the calcualteCssStyles function, that we need to set this value\r\n        this.calcualteCssStyles();\r\n        if (this.areaNotification != null) { this.areaNotification.style.display = 'inline-block' };\r\n\r\n        console.log('commented code at : AreaNotification.show');\r\n        this.portalService.areaBlades.setPortalScrollCss()\r\n        //this.portalService.$rootScope.$broadcast('AreaNotification.Show');\r\n        this.onShowed();\r\n    }\r\n\r\n    /* Override */\r\n    onHide(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /* Override */\r\n    onShow() {\r\n    }\r\n\r\n    /* Override */\r\n    onShowed() {\r\n    }\r\n\r\n    private calcualteCssStyles() {\r\n        this.areaNotification = window.document.getElementById('apa-notification-area');\r\n\r\n        this.areaNotification.style.position = 'absolute';\r\n        this.areaNotification.style.top = '0';\r\n        this.areaNotification.style.height = '100%';\r\n        this.areaNotification.style.backgroundColor = this.backgroundColor;\r\n        this.areaNotification.style.borderLeft = '2px solid gray';\r\n        this.areaNotification.style.width = this.width + 'px';\r\n        this.areaNotification.style.left = this.portalService.$window.innerWidth - this.width + 'px';\r\n\r\n        if (this.widthAreaUsed !== 0) {\r\n            this.widthAreaUsed = this.width;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","export class UserAccount {\r\n    // #region Constructor\r\n\r\n    constructor(username: string, firstName: string = '', lastName: string = '') {\r\n        this.userName = username;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    // #region firstName\r\n\r\n    private _firstName: string;\r\n    get firstName(): string {\r\n        return this._firstName;\r\n    }\r\n    set firstName(value: string) {\r\n        this._firstName = value;\r\n        this._name = (this._firstName || '') + ' ' + (this._lastName || '');\r\n    }\r\n    // #endregion\r\n\r\n    // #region lastName\r\n    private _lastName: string;\r\n    get lastName(): string {\r\n        return this._lastName;\r\n    }\r\n    set lastName(value: string) {\r\n        this._lastName = value;\r\n        this._name = (this._firstName || '') + ' ' + (this._lastName || '');\r\n    }\r\n    // #endregion\r\n\r\n    // #region name\r\n    private _name: string;\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n    set name(value: string) {\r\n        throw new Error('[UserAccount] \\'name\\' is a calculated value from \\'firsName\\' and \\'lastName\\'. Assignment not allowed.');\r\n    }\r\n    // #endregion\r\n\r\n    userName: string;\r\n    emailAddress: string;\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { BladeData } from './blade-data';\r\nimport { BladeNavItem } from './blade-nav-item';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\nimport { UserAccount } from './user-account';\r\n\r\n\r\nexport class AvatarMenu extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n\r\n        this.userAccount = new UserAccount('demo@apa.org', 'demo', 'apa');\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    userAccount: UserAccount | null;\r\n\r\n    // #endregion\r\n}\r\n","/** The names are used in CSS for layouting, e.g. style='mini' */\nexport enum TileSizes {\n    small,\n    mini,\n    normal,\n    herowide\n}\n","import { TileSizes } from './tile-sizes';\r\n\r\nexport class TileSize {\r\n    // #region Constructor\r\n\r\n    constructor(public tileSizes: TileSizes, public width: number, public height: number) {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    static getTileSizes(): Array<TileSize> {\r\n        let tileSizes = Array<TileSize>();\r\n\r\n        tileSizes.push(new TileSize(TileSizes.small, 90, 90));\r\n        tileSizes.push(new TileSize(TileSizes.mini, 180, 90));\r\n        tileSizes.push(new TileSize(TileSizes.normal, 180, 180));\r\n        tileSizes.push(new TileSize(TileSizes.herowide, 540, 360));\r\n\r\n        return tileSizes;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Tile } from './tile';\r\nimport { TileSize } from './tile-size';\r\nimport { TileSizes } from './tile-sizes';\r\n\r\nexport class Tiles {\r\n    // #region Properties\r\n\r\n    showTiles: boolean = true;\r\n    tiles: Array<any> = new Array<any>();\r\n    isTilesLoaded: boolean = false;\r\n    hideTileIfOnlyOne: boolean = true;  // not yet evaluated in HTML, but this is the standard behavior\r\n\r\n    private tileSizes = TileSize.getTileSizes();\r\n    private nextLeft: number = 0;\r\n    private nextTop: number = 0;\r\n    private columnHeightMax: number = 0;\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    addTile(tile: Tile): Tile {\r\n        this.isTilesLoaded = true;\r\n        let tileSize = this.tileSizes[tile.tileSize];\r\n        tile.size = TileSizes[tile.tileSize];  // Get CSS Name\r\n\r\n        tile.top = this.nextTop + 'px';\r\n        tile.left = this.nextLeft + 'px';\r\n\r\n        this.nextLeft += tileSize.width;\r\n\r\n        if (tileSize.height > this.columnHeightMax) {\r\n            this.columnHeightMax = tileSize.height;\r\n        }\r\n\r\n        if (this.nextLeft > 540) {\r\n            this.nextLeft = 0;\r\n            this.nextTop += this.columnHeightMax;\r\n            this.columnHeightMax = 0;\r\n        }\r\n\r\n        this.tiles.push(tile);\r\n\r\n        return tile;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\n\r\nexport class Startboard extends UserControlBase {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService) { // $scope: any,\r\n        super(portalService); // $scope,\r\n        this.tiles = new Tiles();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    tiles: Tiles;\r\n\r\n    // #endregion\r\n}\r\n","import { PortalService } from './portal-service';\r\nimport { Tiles } from './tiles';\r\nimport { UserControlBase } from './user-control-base';\r\nimport { Blade } from './blade';\r\nimport { IAddBladeEventArgs } from './iadd-blade-event-args';\r\nimport { AvatarMenu } from './avatar-menu';\r\nimport { Startboard } from './startboard';\r\n\r\nexport class Panorama extends UserControlBase {\r\n    // #region Properties\r\n\r\n    title: string;\r\n    isVisible: boolean = true;\r\n\r\n    avatarMenu: AvatarMenu;\r\n    startboard: Startboard;\r\n\r\n    // #endregion\r\n\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$scope', 'portalService'];\r\n    constructor(portalService: PortalService, title: string) { // $scope: any,\r\n        super(portalService); // $scope,\r\n        this.title = title;\r\n        this.portalService.panorama = this;\r\n\r\n        this.avatarMenu = new AvatarMenu(this.portalService);\r\n        this.startboard = new Startboard(this.portalService);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { AppService } from '../service/app/app.service';\r\n\r\n\r\nimport { AreaBlades } from './area-blades';\r\nimport { AreaNotification } from './area-notification';\r\nimport { BladeParameter } from './blade-parameter';\r\nimport { Panorama } from './panorama';\r\nimport { PortalShell } from './portal-shell';\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\nexport class PortalService {\r\n    // #region Constructor\r\n\r\n    //static $inject = ['$injector'];\r\n    constructor() { // $injector: any, angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics\r\n        console.log({ PortalService: (<any>Object).id(this) });\r\n        //this.$injector = $injector;\r\n\r\n        //this.$http = $injector.get('$http');\r\n        //this.$httpBackend = $injector.get('$httpBackend');\r\n        //this.$q = $injector.get('$q');\r\n        //this.$rootScope = $injector.get('$rootScope');\r\n        //this.$window = $injector.get('$window');\r\n        //this.$analytics = $injector.get('$analytics');\r\n        //this.$timeout = $injector.get('$timeout');\r\n        //this.$translate = $injector.get('$translate');\r\n\r\n        //this.ngDialog = <any>$injector.get('ngDialog');\r\n\r\n        this.areaBlades = new AreaBlades(this);\r\n        this.areaNotification = new AreaNotification(this);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    appService: AppService;\r\n    parameter: BladeParameter = { action: 'none', itemId: 0 };\r\n    $analytics: Angulartics2GoogleAnalytics;\r\n\r\n    // #region ng.IModule properties\r\n\r\n    //animate;\r\n    //animation;\r\n    //component;\r\n    //config;\r\n    //constant;\r\n    //controller;\r\n    //directive;\r\n    //factory;\r\n    //filter;\r\n    //provider;\r\n    //run;\r\n    //service;\r\n    //value;\r\n    //decorator;\r\n    //name;\r\n    //requires;\r\n\r\n    // #endregion\r\n\r\n    // #region Visual components\r\n\r\n    portalShell: PortalShell;\r\n    panorama: Panorama = new Panorama(this, 'angular-portal-azure-module');\r\n    areaBlades: AreaBlades;\r\n    areaNotification: AreaNotification; // is created and set in 'home' directive\r\n\r\n    // #endregion\r\n\r\n    // #region NgDialogs\r\n\r\n    ngDialog: any; // any should be: angular.dialog.IDialogService;\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Services\r\n\r\n    $injector: any; // angular.auto.IInjectorService;\r\n    $http: any; // angular.IHttpService;\r\n    $httpBackend: any; // angular.IHttpBackendService;\r\n    $q: any; // angular.IQService;\r\n    $rootScope: any; // angular.IRootScopeService;\r\n    $window: any; // angular.IWindowService;\r\n    $timeout: any; // angular.ITimeoutService;\r\n    $translate: any; // angular.translate.ITranslateService;\r\n\r\n    // #endregion\r\n\r\n    // #endregion\r\n}\r\n\r\n// angular.module('angularportalazure').service('portalService', PortalService);\r\n","import { Blade } from './blade';\r\nimport { TileSizes } from './tile-sizes';\r\nimport { PortalService } from './portal-service';\r\n\r\nexport class Tile {\r\n    // #region Constructor\r\n\r\n    constructor(title: string, bladePath: string, portalService: PortalService) {\r\n        this.portalService = portalService;\r\n\r\n        this.title = title;\r\n        this.bladePath = bladePath;\r\n        this.tileSize = TileSizes.normal;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    portalService: PortalService;\r\n\r\n    title: string;\r\n    subTitle: string;\r\n\r\n    // #region bladePath\r\n\r\n    get bladePath(): string {\r\n        return this._bladePath;\r\n    }\r\n    // For the moment we do not distinguish between lower and upper case path name\r\n    set bladePath(newBladePath: string) {\r\n        this._bladePath = newBladePath.toLowerCase();\r\n    }\r\n    private _bladePath: string;\r\n\r\n    // #endregion\r\n\r\n    tileSize: TileSizes;\r\n    size: string; // CSS style class name - refactoring: rename to cssClass\r\n\r\n    left: string; // Obsolete, use leftN\r\n    top: string; // Obsolete, use topN\r\n    leftN: string; // left position (CSS) - during refactoring, rename to left\r\n    topN: string; // top position (CSS) - during refactoring, rename to top\r\n\r\n    // #endregion\r\n\r\n    // #region Methods\r\n\r\n    clicked() {\r\n        this.portalService.areaBlades.setFirstBlade(this.bladePath);\r\n        this.portalService.appService.bladeService.navigateTo(this.bladePath);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\nimport { AppService } from '../../service/app/app.service';\n\nimport { PortalService } from '../../domain/portal-service';\nimport { AreaNotification } from '../../domain/area-notification';\nimport { AreaBlades } from '../../domain/area-blades';\nimport { Tile } from '../../domain/tile';\n\ninterface DinoThemes {\n    [name: string]: DinoTheme;\n}\n\ninterface DinoTheme {\n    '--topbar-color': string;\n    '--topbar-background-color': string;\n    '--topbar-home-color': string;\n    '--blade-statusbar-background-color': string;\n    '--blade-commands-background-color': string;\n}\n\n@Component({\n    selector: 'angular-portal-azure',\n    templateUrl: './app.component.html',\n    //styleUrls: ['./app.component.scss'] // build error: Unknown version 67 of android\n})\nexport class AppComponent implements OnInit {\n    readonly themeProps = [\n        'color-main',\n        'color-main-darken',\n        'color-main-darken2',\n        'color-main-lighten',\n        'color-accent',\n    ];\n\n    readonly themes: DinoThemes = {\n        'black': {\n            '--topbar-color': '#fff',\n            '--topbar-background-color': '#1c1c1c',\n            '--topbar-home-color': '#fff',\n            '--blade-statusbar-background-color': '#293644',\n            '--blade-commands-background-color': '#3e4045',\n        },\n        'white': {\n            '--topbar-color': '#1c1c1c',\n            '--topbar-background-color': '#efefef',\n            '--topbar-home-color': '#1c1c1c',\n            '--blade-statusbar-background-color': '#dcdcdc',\n            '--blade-commands-background-color': '#c7c7c7',\n        }\n    };\n\n    portalService: PortalService;\n    selectedTheme: DinoTheme = this.themes['black'];\n\n    constructor(public appService: AppService, private router: Router) {\n        console.log({ AppComponent: (<any>Object).id(this) });\n        this.portalService = new PortalService();\n        this.portalService.appService = this.appService;\n        this.portalService.areaNotification = new AreaNotification(this.portalService);\n        this.portalService.areaBlades = new AreaBlades(this.portalService);\n\n        this.appService.portalService = this.portalService;\n    }\n\n    ngOnInit() {\n        setTimeout(() => { this.appService.appConfigService.appConfig.isShowSplashScreen = false; }, 500);\n\n        // TODO:2019-09-27/hp: convert NEW API to OLD - Copy TILES\n        //                     refactor this.portalService.panorama.startboard.tiles\n        //                       to use this.appService.appConfigService.appConfig.appboard\n        this.appService.appConfigService.appConfig.appboard.forEach((item) => {\n            let tile = this.portalService.panorama.startboard.tiles.addTile(new Tile(item.title, item.routerPath, this.portalService));\n            tile.subTitle = item.subTitle;\n        });\n    }\n\n    setTheme(themeIndex: string) {\n        this.selectedTheme = this.themes[themeIndex];\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Blade } from '../../domain/blade';\nimport { PortalService } from '../../domain/portal-service';\r\n\n@Component({\n    selector: 'apa-blade',\n    templateUrl: './blade.component.html',\n    // styleUrls: ['./blade.component.scss'] // build error: Unknown version 67 of android\n})\nexport class BladeComponent extends Blade implements OnInit {\n    constructor(portalService: PortalService) {\n        super(portalService, 'blade1', '', '', 500)\r\n    }\n\n    ngOnInit() {\n    }\n\n    //close = () => { };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'apa-grid',\n    templateUrl: './grid.component.html',\n    // styleUrls: ['./grid.component.scss'] // build error: Unknown version 67 of android\n})\nexport class GridComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'apa-nav',\n    templateUrl: './nav.component.html',\n    //styleUrls: ['./nav.component.scss'] // build error: Unknown version 67 of android\n})\nexport class NavComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AppService } from '../../../service/app/app.service';\r\n\r\n@Component({\r\n    selector: 'ospa-appboard',\r\n    templateUrl: './appboard.component.html',\r\n    //styleUrls: ['./appboard.component.scss'] // build error: Unknown version 67 of android\r\n})\r\nexport class AppboardComponent implements OnInit {\r\n    // #region Constructors\r\n\r\n    constructor(public appService: AppService) { }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Public Methods\r\n\r\n    navigateTo(routerPath): void {\r\n        this.appService.bladeService.navigateTo(routerPath);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ospa-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  //styleUrls: ['./page-not-found.component.scss'] // build error: Unknown version 67 of android\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './component/app/app.component';\r\nimport { AppboardComponent } from './component/dashboard/appboard/appboard.component';\r\nimport { PageNotFoundComponent } from './component/general/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'appboard', pathMatch: 'full' },\r\n    { path: 'appboard', component: AppComponent }, // AppboardComponent \r\n    { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes) // , { enableTracing: true }\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//import { MainOscService } from '@one-system/one-sys-core';\r\n\r\n@Component({\r\n    selector: 'ospa-splash-screen',\r\n    templateUrl: './splash-screen.component.html',\r\n    // styleUrls: ['./splash-screen.component.scss'] // build error: Unknown version 67 of android\r\n})\r\nexport class SplashScreenComponent implements OnInit {\r\n    //constructor(public mainOscService: MainOscService) { }\r\n    constructor(/*public mainOscService: MainOscService*/) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Input, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef } from \"@angular/core\";\r\nimport { RouterOutlet, ChildrenOutletContexts } from \"@angular/router\";\r\n\r\n// #region README\r\n\r\n// <router-outlet> does not yet support a [name] attribute, therefore we have implemented this. Usage:\r\n// <router-outlet-named [name]=\"name1\">\r\n\r\n// #endregion\r\n\r\n@Directive({\r\n    selector: 'router-outlet-named',\r\n    exportAs: 'outlet'\r\n})\r\nexport class RouterOutletNamedDirective implements OnInit, OnDestroy {\r\n    // #region Properties\r\n\r\n    public outlet: RouterOutlet;\r\n    @Input() public name: string;\r\n\r\n    // #endregion\r\n\r\n    // #region Properties\r\n\r\n    constructor(\r\n        private parentContexts: ChildrenOutletContexts,\r\n        private location: ViewContainerRef,\r\n        private resolver: ComponentFactoryResolver,\r\n        private changeDetector: ChangeDetectorRef,\r\n    ) { }\r\n\r\n    // #endregion\r\n\r\n    // #region Angular Methods\r\n\r\n    ngOnInit() {\r\n        this.outlet = new RouterOutlet(this.parentContexts, this.location, this.resolver, this.name, this.changeDetector);\r\n        this.outlet.ngOnInit();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.outlet) {\r\n            this.outlet.ngOnDestroy();\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","\r\nimport { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[theming]'\r\n})\r\nexport class ThemingDirective implements OnChanges {\r\n    @Input('theming') theme: { [prop: string]: string };\r\n\r\n    constructor(private el: ElementRef<HTMLElement>) {\r\n    }\r\n\r\n    ngOnChanges() {\r\n        Object.keys(this.theme).forEach(prop => {\r\n            this.el.nativeElement.style.setProperty(`${prop}`, this.theme[prop]);\r\n        });\r\n    }\r\n}\r\n","import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppConfig } from './domain/app-config';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppboardComponent } from '../lib/component/dashboard/appboard/appboard.component';\nimport { PageNotFoundComponent } from '../lib/component/general/page-not-found/page-not-found.component';\nimport { SplashScreenComponent } from '../lib/component/general/splash-screen/splash-screen.component';\n\nimport { AppComponent } from './component/app/app.component';\nimport { NavComponent } from './component/nav/nav.component';\nimport { GridComponent } from './component/grid/grid.component';\nimport { BladeComponent } from './component/blade/blade.component';\n\nimport { BladeService } from './service/blade/blade.service';\nimport { PortalService } from './domain/portal-service';\nimport { BrowserService } from './service/browser/browser.service';\n\nimport { RouterOutletNamedDirective } from './directive/router-outlet-named/router-outlet-named.directive';\nimport { ThemingDirective } from './directive/theming/theming.directive';\n\n@NgModule({\n    declarations: [\n        // Component\n        AppboardComponent,\n        PageNotFoundComponent,\n        SplashScreenComponent,\n        AppComponent,\n        NavComponent,\n        GridComponent,\n        BladeComponent,\n        // Directives\n        RouterOutletNamedDirective,\n        ThemingDirective\n    ],\n    providers: [\n        PortalService,\n        BladeService,\n        BrowserService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        AppRoutingModule // Should be last, since it contains the ** route\n    ],\n    exports: [\n        // Component\n        AppComponent,\n        PageNotFoundComponent,\n        SplashScreenComponent,\n        NavComponent,\n        GridComponent,\n        BladeComponent,\n        // Directives\n        RouterOutletNamedDirective,\n        ThemingDirective\n    ]\n})\nexport class AngularPortalAzureModule {\n    constructor(@Optional() @SkipSelf() parentModule: AngularPortalAzureModule) {\n        if (parentModule) {\n            throw new Error(\n                'OneSysCoreModule is already loaded. Import it in only in one AppModule.');\n        }\n    }\n\n    static forRoot(appConfig: AppConfig): ModuleWithProviders {\n        return {\n            ngModule: AngularPortalAzureModule,\n            providers: [\n                { provide: AppConfig, useValue: appConfig }\n            ]\n        };\n    }\n}\n"],"names":["__extends","Injectable","router","filter","NavigationStart","Router","Injector","UserControlBase","Blade","TileSizes","TileSize","Tiles","Tile","Component","NgModule","RouterModule","RouterOutlet","Directive","ChildrenOutletContexts","ViewContainerRef","ComponentFactoryResolver","ChangeDetectorRef","Input","ElementRef","CommonModule","FormsModule","Optional","SkipSelf"],"mappings":"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"}